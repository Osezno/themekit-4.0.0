{
    "docs": [
        {
            "location": "/index.html", 
            "text": "Installation Overview\n\n\nThis document provides installation instructions for all the various tools and technologies used in the \ndevelopment workflow\n for this template.\n\n\n\n\nLinux\n\n\nRequired Software\n\n\n\n\n\n\nNode.js\n - required to run npm - \nnodejs.org\n\n\nUbuntu\n\n\n# Setup with Ubuntu:\ncurl -sL https://deb.nodesource.com/setup | sudo bash -\n\n# Then install with Ubuntu:\nsudo apt-get install -y nodejs\n\n\n\nDebian\n\n\n# Setup with Debian\napt-get install curl\ncurl -sL https://deb.nodesource.com/setup | bash -\n\n# Then install with Debian\napt-get install -y nodejs\n\n\n\nFedora\n\n\n# Setup on RHEL, CentOS or Fedora\ncurl -sL https://rpm.nodesource.com/setup | bash -\n\n# Then install:\nyum install -y nodejs\n\n\n\nAdditionally, see \nInstalling Node.js via package managers\n\n\n\n\n\n\nGit client\n - required by bower dependencies - via package managers:\n\n\nDebian/Ubuntu\n\n\napt-get install git\n\n\n\nFedora\n\n\nyum install git\n\n\n\nAdditionally, see \nInstalling Git for Linux via package managers\n\n\n\n\n\n\nSubversion client\n - required by some bower dependencies only available via svn:\n\n\nFedora/CentOS\n\n\nyum install subversion\n\n\n\nDebian\n\n\napt-get install subversion\n\n\n\n\n\n\n\n\n\nMac OS X\n\n\nRequired Software\n\n\n\n\n\n\nNode.js\n - required to run npm - \nnodejs.org\n\n\nSimply download the \nMachintosh Installer\n directly from the nodejs.org website.\n\n\nOr, using Homebrew:\n\n\nbrew install node\n\n\n\n\n\n\n\nGit client\n - required by bower dependencies:\n\n\nInstall via Homebrew:\n\n\nbrew install git\n\n\n\n\n\n\n\nSubversion client\n - required by some bower dependencies only available via svn:\n\n\nInstall via Homebrew:\n\n\nbrew install subversion\n\n\n\n\n\n\n\n\n\nWindows\n\n\nRequired Software\n\n\n\n\nNode.js\n - required to run npm - \nDownload Node.js for Windows\n\n\nGit client\n - required by bower dependencies - \nDownload SourceTree for Windows\n\n\nSubversion client\n - required by some bower dependencies only available via svn - \nDownload SlickSvn for Windows\n\n\nMinGW\n and \nMSYS\n (replacement for cmd.exe, required by the gulp/grunt tasks provided with the package) - \nonly if you choose to NOT install SourceTree above, SourceTree already includes a terminal\n - \nInstall MinGW \n MSYS\n\n\n\n\n\n\nInstallation\n\n\nAfter making sure you have installed all the software dependencies for your operating system, open a terminal (for Windows, MSYS terminal or if you've installed SourceTree as we recommended, open up a terminal from within SourceTree) and change the current working directory to the downloaded item:\n\n\ncd /path/to/package/root\n\n\n\nInstall all the dependencies listed in package.json:\n\n\nnpm install\n\n\n\nOnly if you are using Gulp (recommended)\n: Install Gulp:\n\n\nnpm install -g gulp\n\n\n\nOnly if you are using Gulp (recommended)\n: Install Gulp Workflow dependencies. This will install all the packages listed in \nlib/gulp/package.json\n into the current working directory:\n\n\nnode_modules/.bin/npm-install-from --path lib/gulp\n\n\n\nOnly if you are using Grunt\n: Install Grunt:\n\n\nnpm install -g grunt-cli\n\n\n\nOnly if you are using Grunt\n: Install Grunt Workflow dependencies. This will install all the packages listed in \nlib/grunt/package.json\n into the current working directory:\n\n\nnode_modules/.bin/npm-install-from --path lib/grunt\n\n\n\nInstall Bower:\n\n\nnpm install -g bower\n\n\n\nInstall Bower dependencies:\n\n\nbower install\n\n\n\n\n\nSee also\n\n\n\n\nThe build process\n\n\nStructure\n\n\nManage assets\n\n\nInclude paths\n\n\nLoading assets", 
            "title": "Installation"
        }, 
        {
            "location": "/index.html#installation-overview", 
            "text": "This document provides installation instructions for all the various tools and technologies used in the  development workflow  for this template.", 
            "title": "Installation Overview"
        }, 
        {
            "location": "/index.html#linux", 
            "text": "Required Software    Node.js  - required to run npm -  nodejs.org  Ubuntu  # Setup with Ubuntu:\ncurl -sL https://deb.nodesource.com/setup | sudo bash -\n\n# Then install with Ubuntu:\nsudo apt-get install -y nodejs  Debian  # Setup with Debian\napt-get install curl\ncurl -sL https://deb.nodesource.com/setup | bash -\n\n# Then install with Debian\napt-get install -y nodejs  Fedora  # Setup on RHEL, CentOS or Fedora\ncurl -sL https://rpm.nodesource.com/setup | bash -\n\n# Then install:\nyum install -y nodejs  Additionally, see  Installing Node.js via package managers    Git client  - required by bower dependencies - via package managers:  Debian/Ubuntu  apt-get install git  Fedora  yum install git  Additionally, see  Installing Git for Linux via package managers    Subversion client  - required by some bower dependencies only available via svn:  Fedora/CentOS  yum install subversion  Debian  apt-get install subversion", 
            "title": "Linux"
        }, 
        {
            "location": "/index.html#mac-os-x", 
            "text": "Required Software    Node.js  - required to run npm -  nodejs.org  Simply download the  Machintosh Installer  directly from the nodejs.org website.  Or, using Homebrew:  brew install node    Git client  - required by bower dependencies:  Install via Homebrew:  brew install git    Subversion client  - required by some bower dependencies only available via svn:  Install via Homebrew:  brew install subversion", 
            "title": "Mac OS X"
        }, 
        {
            "location": "/index.html#windows", 
            "text": "Required Software   Node.js  - required to run npm -  Download Node.js for Windows  Git client  - required by bower dependencies -  Download SourceTree for Windows  Subversion client  - required by some bower dependencies only available via svn -  Download SlickSvn for Windows  MinGW  and  MSYS  (replacement for cmd.exe, required by the gulp/grunt tasks provided with the package) -  only if you choose to NOT install SourceTree above, SourceTree already includes a terminal  -  Install MinGW   MSYS", 
            "title": "Windows"
        }, 
        {
            "location": "/index.html#installation", 
            "text": "After making sure you have installed all the software dependencies for your operating system, open a terminal (for Windows, MSYS terminal or if you've installed SourceTree as we recommended, open up a terminal from within SourceTree) and change the current working directory to the downloaded item:  cd /path/to/package/root  Install all the dependencies listed in package.json:  npm install  Only if you are using Gulp (recommended) : Install Gulp:  npm install -g gulp  Only if you are using Gulp (recommended) : Install Gulp Workflow dependencies. This will install all the packages listed in  lib/gulp/package.json  into the current working directory:  node_modules/.bin/npm-install-from --path lib/gulp  Only if you are using Grunt : Install Grunt:  npm install -g grunt-cli  Only if you are using Grunt : Install Grunt Workflow dependencies. This will install all the packages listed in  lib/grunt/package.json  into the current working directory:  node_modules/.bin/npm-install-from --path lib/grunt  Install Bower:  npm install -g bower  Install Bower dependencies:  bower install", 
            "title": "Installation"
        }, 
        {
            "location": "/index.html#see-also", 
            "text": "The build process  Structure  Manage assets  Include paths  Loading assets", 
            "title": "See also"
        }, 
        {
            "location": "/workflow/gulp/index.html", 
            "text": "Gulp Overview\n\n\nGulp\n is a streaming build system that can help automate your workflow. We provide gulp tasks for the most important aspects of customizing our templates.\n\n\n\n\nPrerequisites\n\n\nMake sure you have followed the \ngulp installation steps\n for your operating system.\n\n\nLinux / Mac OS X\n\n\n\n\ncreate a copy of\n \nlib/gulp/Gulpfile.js\n to the root directory, \nif it doesn't exist already\n.\n\n\n\n\nWindows\n\n\nAdditionaly, when running on Windows operating systems, do the following:\n\n\n\n\nremove the provided Gulpfile.js\n from the root directory of the project, \nif it already exists\n - it's a soft linux symlink and chances are the contents of this file is just a pointer to the real file which is located in \nlib/gulp/Gulpfile.js\n\n\ncopy\n \nlib/gulp/Gulpfile.js\n in place of the file you removed at step 1.\n\n\n\n\nedit\n the following line in \nGulpfile.js\n:\n\n\nrequireDir('./tasks', {recurse: true});\n\n\n\nto look like this:\n\n\nrequireDir('./lib/gulp/tasks', {recurse: true});\n\n\n\n\n\n\n\nWhen using Windows, make sure all the commands in this documentation are executed from either the Terminal builtin with SourceTree or a MSYS terminal. Don't use cmd.exe, it won't work! See \ninstallation on Windows\n.\n\n\n\n\n\n\nNotes\n\n\nSubstitute \n$THEME_NAME\n where ever you see it thoughout the documentation instructions with a valid theme name. You can see the available themes by looking at the first level directories within \nsrc/html/themes\n.\n\n\n\n\nBuild\n\n\nGulp provides a stream based \nbuild pipeline\n that connects files together across a number of processing steps, defining dependencies. The files content gets read and piped down a number of processing steps which results in the final assets that get used by the application.\n\n\n\n\nBuild paths\n\n\nA build path is the destination directory where our final assets are placed after going through the build process. The build path is established with the \n--dist path/to/build\n CLI option.\n\n\nFor example:\n\n\ngulp --theme $THEME_NAME build:d --dist build\n\n\n\n\nWill build the application source into the \nbuild/$THEME_NAME/\n destination directory. This path is not mandatory to exist previous to running the \nbuild:d\n task, it will be created if necessary.\n\n\nThe default build path without providing the \n--dist\n CLI option is \ndist/themes\n, so any build will create \ndist/themes/$THEME_NAME\n by default.\n\n\nWe can create persistent config overrides so that we don't have to specify a CLI option every time we want to have a custom build path for any specific build in the \n.build/dist.json\n file. To see the predefined build paths for this setup, please refer to this file.\n\n\nFor example, if we were to have the following \n.build/dist.json\n file:\n\n\n{\n    \"my_theme\": \"\",\n    \"my_second_theme\": \"custom\"\n}\n\n\n\nWhen running:\n\n\ngulp --theme my_theme build:d\n\n\n\n\nWill create \nmy_theme/\n directory in the current working directory, at the project root.\n\n\nAnd running:\n\n\ngulp --theme my_second_theme build:d\n\n\n\n\nWill similarily create \ncustom/my_second_theme/\n directory.\n\n\nNote that we'll be referring to the build path throughout the documentation via \n$BUILD_PATH\n.\n\n\n\n\nConcatenated files and bundles\n\n\nIn order to follow best practices, reduce the HTTP requests on any given page as much as possible and benefit from improved performance, we are using concatenation and bundles for serving our assets. Instead of having to load many files for all of the various libraries we use in our project, we only load a single file for everything with a single line of code in our HTML.\n\n\nWhen using concatenated assets and bundles, our HTML pages might look like this:\n\n\n!DOCTYPE html\n\n\nhtml lang=\"en\"\n\n\nhead\n\n\n    \n!-- Vendor styling bundle --\n\n    \nlink rel=\"stylesheet\" href=\"css/vendor/all.css\" /\n\n\n    \n!-- Application styling bundle --\n\n    \nlink rel=\"stylesheet\" href=\"css/app/app.css\" /\n\n\n\n/head\n\n\nbody\n\n\n    \n!-- Vendor scripts bundle --\n\n    \nscript src=\"js/vendor/all.js\"\n/script\n\n\n    \n!-- Application scripts bundle --\n\n    \nscript src=\"js/app/app.js\"\n/script\n\n\n\n/body\n\n\n/html\n\n\n\n\nBuild with concatenated files and bundles\n\n\ngulp --theme $THEME_NAME build:d\n\n\n\n\nThis is the fastest build task and has the following main characteristics:\n\n\n\n\n\n\nDoes NOT generate minified assets.\n\n\nYou can enable minification for both CSS and JavaScript:\n\n\ngulp --theme $THEME_NAME build:d --minify true\n\n\n\nAnd with source maps:\n\n\ngulp --theme $THEME_NAME build:d --minify true --debug true\n\n\n\n\n\n\n\nCompiles Less files into CSS:\n\n\n\n\nsrc/less/themes/$THEME_NAME/app.less\n into \n$BUILD_PATH/$THEME_NAME/css/app/app.css\n \n(required)\n\n\nsrc/less/themes/$THEME_NAME/main.less\n into \n$BUILD_PATH/$THEME_NAME/css/app/main.css\n\n\nsrc/less/themes/$THEME_NAME/vendor/*.less\n into \n$BUILD_PATH/$THEME_NAME/css/vendor/*.css\n\n\n\n\n\n\n\n\nBundles application JavaScript with Browserify:\n\n\n\n\nsrc/js/themes/$THEME_NAME/app.js\n into \n$BUILD_PATH/$THEME_NAME/js/app/app.js\n \n(required)\n\n\nsrc/js/themes/$THEME_NAME/main.js\n into \n$BUILD_PATH/$THEME_NAME/js/app/main.js\n\n\nexecutes \nbrowserify\n tasks defined in \n.build/browserify.json\n\n\nexcluding tasks for which the \nbuild\n key starts with \napp/*\n (which are ignored)\n\n\n\n\n\n\n\n\nCompiles Swig template files into HTML:\n\n\n\n\nsrc/html/themes/$THEME_NAME/**/*.html\n into \n$BUILD_PATH/$THEME_NAME/**/*.html\n\n\n\n\n\n\n\n\nCopies files, in the following order:\n\n\n\n\nsrc/images/common/*\n into \n$BUILD_PATH/$THEME_NAME/images/*\n - \nimages stored here will end up in every theme\n\n\nsrc/images/themes/$THEME_NAME/*\n into \n$BUILD_PATH/$THEME_NAME/images/*\n - \ntheme specific images\n\n\nexecutes \ncopy\n tasks defined in \n.build/copy-*/copy.*.json\n \n(in path alphabetical order)\n\n\nexecutes \ncopy\n tasks defined in \n.build/copy.json\n\n\n\n\n\n\n\n\nConcatenates files, in the following order:\n\n\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat-*/concat.*.json\n \n(in path alphabetical order)\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat.json\n\n\nexcluding tasks for which the \nbuild\n key starts with \njs/app/*\n (which are ignored)\n\n\n\n\n\n\n\n\nNote that the execution order of different tasks is important.\n\n\n\n\nSeparated libraries\n\n\nWe've covered concatenation and bundles, but what about separated libraries? There is also an option for those who don't want to use bundles or concatenated files and where our HTML could look like this:\n\n\n!DOCTYPE html\n\n\nhtml lang=\"en\"\n\n\nhead\n\n\n    \n!-- Separated vendor styling --\n\n    \nlink rel=\"stylesheet\" href=\"css/vendor/bootstrap.css\" /\n\n    \nlink rel=\"stylesheet\" href=\"css/vendor/font-awesome.css\" /\n\n    \nlink rel=\"stylesheet\" href=\"css/vendor/morris.css\" /\n\n    \n!-- etc. --\n\n\n    \n!-- Separated application styling --\n\n    \nlink rel=\"stylesheet\" href=\"css/app/main.css\" /\n\n    \nlink rel=\"stylesheet\" href=\"css/app/sidebar.css\" /\n\n    \nlink rel=\"stylesheet\" href=\"css/app/navbar.css\" /\n\n    \n!-- etc. --\n\n\n\n/head\n\n\nbody\n\n\n    \n!-- Separated vendor scripts --\n\n    \nscript src=\"js/vendor/core/jquery.js\"\n/script\n\n    \nscript src=\"js/vendor/core/bootstrap.js\"\n/script\n\n    \nscript src=\"js/vendor/core/jquery-ui.custom.js\"\n/script\n\n    \n!-- etc. --\n\n\n    \n!-- Separated application scripts --\n\n    \nscript src=\"js/app/main.js\"\n/script\n\n    \nscript src=\"js/app/essentials.js\"\n/script\n\n    \nscript src=\"js/app/navbar.js\"\n/script\n\n    \n!-- etc. --\n\n\n\n/body\n\n\n/html\n\n\n\n\nBuild with separated libraries\n\n\nWe definitely don't recommend this\n, but we won't stop you either. Here's how you can do it:\n\n\ngulp --theme $THEME_NAME build:dm\n\n\n\n\nWhich is the same as: \n\n\ngulp --theme $THEME_NAME build:d\n\n\n\n\nBut, with the following additional tasks:\n\n\n\n\n\n\nCompiles separated Less modules to CSS:\n\n\n\n\nsrc/less/theme/$THEME_NAME/app/*.less\n into \n$BUILD_PATH/$THEME_NAME/css/app/*.css\n\n\n\n\n\n\n\n\nBundles separated JavaScript modules with Browserify:\n\n\n\n\nexecutes \nbrowserify\n tasks defined in \n.build/browserify.json\n\n\nincluding tasks for which the \nbuild\n key starts with \napp/*\n (which are ignored with \nbuild:d\n)\n\n\n\n\n\n\n\n\nConcatenates separated JavaScript files which don't make use of Browserify and \nrequire\n:\n\n\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat-app/concat.*.json\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat.json\n\n\nincluding tasks for which the \nbuild\n key starts with \njs/app/*\n (which are ignored with \nbuild:d\n)\n\n\n\n\n\n\n\n\nAdditionally, you can instruct Swig when it compiles into HTML, to automatically load the separated files instead of the bundles (so the final HTML output of your application will look similar to our example above):\n\n\ngulp --theme $THEME_NAME build:dm --bundle false\n\n\n\n\n\n\nWatch\n\n\ngulp --theme $THEME_NAME\n\n\n\n\nStarts a local web server and even opens your default browser on localhost on a dynamic free port. The web server is powered by BrowserSync, which means you can simultaneously track changes and synchronize the actions from your desktop browser with multiple devices while you're developing the application. \n\n\nYou can access the application from a mobile device via your private IP address and then if you refresh the page in your desktop browser, it will automatically refresh the application on your mobile device, but BrowserSync can do much more than a refresh (keeps in sync scoll position, click events, etc).\n\n\nThis also instructs gulp to watch your application files and rebuild when source files change and when it's done building, it will refresh your browser(s).\n\n\n\n\nTasks\n\n\nWhile we already introduced the most important tasks of the gulp workflow, \nbuild:d\n, \nbuild:dm\n and \nwatch\n, there are several other tasks that are actually used by the build tasks themselves and that you can also use when you see fit.\n\n\n\n\nBrowserify tasks\n\n\nbrowserify:main\n\n\n\n\nCreates the main application script bundle from \nsrc/js/themes/$THEME_NAME/app.js\n to \n$BUILD_PATH/$THEME_NAME/js/app/app.js\n.\n\n\nCreates a secondary and optional application script bundle from \nsrc/js/themes/$THEME_NAME/main.js\n to \n$BUILD_PATH/$THEME_NAME/js/app/main.js\n \n(only if the source file exists)\n.\n\n\n\n\ngulp --theme $THEME_NAME browserify:main\n\n\n\n\nbrowserify:modules\n\n\n\n\nExecutes \nbrowserify\n tasks defined in \n.build/browserify.json\n for which the build key starts with \napp/*\n\n\n\n\ngulp --theme $THEME_NAME browserify:modules\n\n\n\n\nbrowserify\n\n\nRuns all \nbrowserify\n tasks: \n\n\n\n\nbrowserify:main\n\n\nbrowserify:modules\n\n\n\n\ngulp --theme $THEME_NAME browserify\n\n\n\n\n\n\nCode validation tasks\n\n\njshint\n\n\n\n\nRuns JSHint on all the JavaScript files within \nlib/**/*.js\n and \nsrc/**/*.js\n, a tool to detect errors and potential problems in your JavaScript code.\n\n\n\n\ngulp --theme $THEME_NAME jshint\n\n\n\n\n\n\nJavaScript compression tasks\n\n\nuglify:all\n\n\n\n\nMinifies all JavaScript files from \n$BUILD_PATH/$THEME_NAME/js/**/*.js\n to \n$BUILD_PATH/$THEME_NAME/js/**/*.min.js\n.\n\n\n\n\ngulp --theme $THEME_NAME uglify:all\n\n\n\n\nuglify:theme\n\n\nMinifies the following JavaScript files: \n\n\n\n\n$BUILD_PATH/$THEME_NAME/js/app/app.js\n to \n$BUILD_PATH/$THEME_NAME/js/app/app.min.js\n\n\n$BUILD_PATH/$THEME_NAME/js/app/main.js\n to \n$BUILD_PATH/$THEME_NAME/js/app/main.min.js\n\n\n$BUILD_PATH/$THEME_NAME/js/app/vendor/*.js\n to \n$BUILD_PATH/$THEME_NAME/js/app/vendor/*.min.js\n\n\n\n\ngulp --theme $THEME_NAME uglify:theme\n\n\n\n\nuglify:modules\n\n\n\n\nMinifies all JavaScript files from \n$BUILD_PATH/$THEME_NAME/js/app/**/*.js\n to \n$BUILD_PATH/$THEME_NAME/js/app/**/*.min.js\n.\n\n\n\n\ngulp --theme $THEME_NAME uglify:modules\n\n\n\n\nuglify:main\n\n\n\n\nMinifies \n$BUILD_PATH/$THEME_NAME/js/app/app.js\n to \n$BUILD_PATH/$THEME_NAME/js/app/app.min.js\n.\n\n\n\n\ngulp --theme $THEME_NAME uglify:main\n\n\n\n\n\n\nCSS compression tasks\n\n\ncssmin:vendor\n\n\n\n\nMinifies all CSS files from \n$BUILD_PATH/$THEME_NAME/css/vendor/*.css\n to \n$BUILD_PATH/$THEME_NAME/css/vendor/*.min.css\n.\n\n\n\n\ngulp --theme $THEME_NAME cssmin:vendor\n\n\n\n\ncssmin:theme\n\n\nMinifies the following CSS files:\n\n\n\n\n$BUILD_PATH/$THEME_NAME/css/app/app.css\n to \n$BUILD_PATH/$THEME_NAME/css/app/app.min.css\n\n\n$BUILD_PATH/$THEME_NAME/css/app/main.css\n to \n$BUILD_PATH/$THEME_NAME/css/app/main.min.css\n\n\n\n\ngulp --theme $THEME_NAME cssmin:theme\n\n\n\n\ncssmin:modules\n\n\n\n\nMinifies all CSS files from \n$BUILD_PATH/$THEME_NAME/css/app/*.css\n to \n$BUILD_PATH/$THEME_NAME/css/app/*.min.css\n \nexcept\n \napp.css\n and \nmain.css\n.\n\n\n\n\ngulp --theme $THEME_NAME cssmin:modules\n\n\n\n\ncssmin:skins\n\n\n\n\nMinifies all CSS files from \n$BUILD_PATH/$THEME_NAME/css/skin-*.css\n to \n$BUILD_PATH/$THEME_NAME/css/skin-*.min.css\n\n\n\n\ngulp --theme $THEME_NAME cssmin:skins\n\n\n\n\n\n\nCopy tasks\n\n\ncopy:images-common\n\n\n\n\nCopies all files and directories from \nsrc/images/common\n to \n$BUILD_PATH/$THEME_NAME/images\n - \nimages stored in the \nsrc/images/common\n source directory will end up in every theme\n.\n\n\n\n\ngulp --theme $THEME_NAME copy:images-common\n\n\n\n\ncopy:images-theme\n\n\n\n\nCopies all files and directories from \nsrc/images/themes/$THEME_NAME\n to \n$BUILD_PATH/$THEME_NAME/images\n - \ntheme specific images\n.\n\n\n\n\ngulp --theme $THEME_NAME copy:images-theme\n\n\n\n\ncopy:images\n\n\nRuns the following \ncopy\n tasks: \n\n\n\n\ncopy:images-common\n\n\ncopy:images-theme\n\n\n\n\ngulp --theme $THEME_NAME copy:images\n\n\n\n\ncopy:build\n\n\nRuns the following \ncopy\n tasks:\n\n\n\n\ncopy:images\n\n\nexecutes \ncopy\n tasks defined in \n.build/copy-*/copy.*.json\n \n(in path alphabetical order)\n\n\nexecutes \ncopy\n tasks defined in \n.build/copy.json\n\n\n\n\ngulp --theme $THEME_NAME copy:build\n\n\n\n\n\n\nConcatenation tasks\n\n\nconcat:dist\n\n\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat-*/concat.*.json\n \n(in path alphabetical order)\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat.json\n\n\nexcluding tasks for which the \nbuild\n key starts with \njs/app/*\n or \ncss/app/*\n (which are ignored)\n\n\n\n\ngulp --theme $THEME_NAME concat:dist\n\n\n\n\nconcat:modules\n\n\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat-*/concat.*.json\n \n(in path alphabetical order)\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat.json\n\n\nONLY tasks for which the \nbuild\n key starts with \njs/app/*\n or \ncss/app/*\n\n\n\n\ngulp --theme $THEME_NAME concat:modules\n\n\n\n\n\n\nClean tasks\n\n\nclean:html\n\n\n\n\nRemoves all HTML files from \n$BUILD_PATH/$THEME_NAME/**/*.html\n.\n\n\n\n\ngulp --theme $THEME_NAME clean:html\n\n\n\n\nclean:dist\n\n\n\n\nRemoves all files and directories from \n$BUILD_PATH/$THEME_NAME/**/*\n.\n\n\n\n\ngulp --theme $THEME_NAME clean:dist\n\n\n\n\nclean:modules\n\n\n\n\nRemoves all CSS files from \n$BUILD_PATH/$THEME_NAME/css/app/*.css\n \nexcept\n \napp.css\n and \nmain.css\n.\n\n\nRemoves all JavaScript files from \n$BUILD_PATH/$THEME_NAME/js/app/*.js\n \nexcept\n \napp.js\n and \nmain.js\n.\n\n\n\n\ngulp --theme $THEME_NAME clean:modules\n\n\n\n\nclean:skins\n\n\n\n\nRemoves all CSS files from \n$BUILD_PATH/$THEME_NAME/css/skin-*.css\n.\n\n\n\n\ngulp --theme $THEME_NAME clean:skins\n\n\n\n\n\n\nHTML tasks\n\n\nswig\n\n\n\n\nCompiles all Swig templates to HTML from \nsrc/html/themes/$THEME_NAME/**/*.html\n to \n$BUILD_PATH/$THEME_NAME/**/*.html\n.\n\n\n\n\ngulp --theme $THEME_NAME swig\n\n\n\n\nprettify:theme\n\n\n\n\nReformats all HTML files from \n$BUILD_PATH/$THEME_NAME/**/*.html\n.\n\n\n\n\ngulp --theme $THEME_NAME prettify:theme\n\n\n\n\n\n\nLess tasks\n\n\nless:theme\n\n\n\n\nCompiles all LESS files from \nsrc/less/themes/$THEME_NAME/*.less\n to \n$BUILD_PATH/$THEME_NAME/css/app/*.css\n.\n\n\nExcluding \n_*.less\n files which are considered partials.\n\n\n\n\ngulp --theme $THEME_NAME less:theme\n\n\n\n\nless:modules\n\n\n\n\nCompiles all LESS files from \nsrc/less/themes/$THEME_NAME/app/*.less\n to \n$BUILD_PATH/$THEME_NAME/css/app/*.css\n.\n\n\nExcluding \n_*.less\n files which are considered partials.\n\n\n\n\ngulp --theme $THEME_NAME less:modules\n\n\n\n\nless:vendor\n\n\n\n\nCompiles all LESS files from \nsrc/less/themes/$THEME_NAME/vendor/*.less\n to \n$BUILD_PATH/$THEME_NAME/css/vendor/*.css\n.\n\n\nExcluding \n_*.less\n files which are considered partials.\n\n\n\n\ngulp --theme $THEME_NAME less:vendor\n\n\n\n\nless:skins\n\n\n\n\nCompiles all LESS files from \nsrc/less/skins/$THEME_NAME/*.less\n to \n$BUILD_PATH/$THEME_NAME/css/skin-*.css\n.\n\n\n\n\ngulp --theme $THEME_NAME less:skins\n\n\n\n\nless\n\n\nRuns all the following \nless\n tasks:\n\n\n\n\nless:theme\n\n\nless:modules\n\n\nless:vendor\n\n\nless:skins\n\n\n\n\ngulp --theme $THEME_NAME less\n\n\n\n\n\n\nSee also\n\n\n\n\nStructure\n\n\nManage assets\n\n\nInclude paths\n\n\nLoading assets", 
            "title": "Gulp"
        }, 
        {
            "location": "/workflow/gulp/index.html#gulp-overview", 
            "text": "Gulp  is a streaming build system that can help automate your workflow. We provide gulp tasks for the most important aspects of customizing our templates.", 
            "title": "Gulp Overview"
        }, 
        {
            "location": "/workflow/gulp/index.html#prerequisites", 
            "text": "Make sure you have followed the  gulp installation steps  for your operating system.  Linux / Mac OS X   create a copy of   lib/gulp/Gulpfile.js  to the root directory,  if it doesn't exist already .   Windows  Additionaly, when running on Windows operating systems, do the following:   remove the provided Gulpfile.js  from the root directory of the project,  if it already exists  - it's a soft linux symlink and chances are the contents of this file is just a pointer to the real file which is located in  lib/gulp/Gulpfile.js  copy   lib/gulp/Gulpfile.js  in place of the file you removed at step 1.   edit  the following line in  Gulpfile.js :  requireDir('./tasks', {recurse: true});  to look like this:  requireDir('./lib/gulp/tasks', {recurse: true});    When using Windows, make sure all the commands in this documentation are executed from either the Terminal builtin with SourceTree or a MSYS terminal. Don't use cmd.exe, it won't work! See  installation on Windows .    Notes  Substitute  $THEME_NAME  where ever you see it thoughout the documentation instructions with a valid theme name. You can see the available themes by looking at the first level directories within  src/html/themes .", 
            "title": "Prerequisites"
        }, 
        {
            "location": "/workflow/gulp/index.html#build", 
            "text": "Gulp provides a stream based  build pipeline  that connects files together across a number of processing steps, defining dependencies. The files content gets read and piped down a number of processing steps which results in the final assets that get used by the application.   Build paths  A build path is the destination directory where our final assets are placed after going through the build process. The build path is established with the  --dist path/to/build  CLI option.  For example:  gulp --theme $THEME_NAME build:d --dist build  Will build the application source into the  build/$THEME_NAME/  destination directory. This path is not mandatory to exist previous to running the  build:d  task, it will be created if necessary.  The default build path without providing the  --dist  CLI option is  dist/themes , so any build will create  dist/themes/$THEME_NAME  by default.  We can create persistent config overrides so that we don't have to specify a CLI option every time we want to have a custom build path for any specific build in the  .build/dist.json  file. To see the predefined build paths for this setup, please refer to this file.  For example, if we were to have the following  .build/dist.json  file:  {\n    \"my_theme\": \"\",\n    \"my_second_theme\": \"custom\"\n}  When running:  gulp --theme my_theme build:d  Will create  my_theme/  directory in the current working directory, at the project root.  And running:  gulp --theme my_second_theme build:d  Will similarily create  custom/my_second_theme/  directory.  Note that we'll be referring to the build path throughout the documentation via  $BUILD_PATH .   Concatenated files and bundles  In order to follow best practices, reduce the HTTP requests on any given page as much as possible and benefit from improved performance, we are using concatenation and bundles for serving our assets. Instead of having to load many files for all of the various libraries we use in our project, we only load a single file for everything with a single line of code in our HTML.  When using concatenated assets and bundles, our HTML pages might look like this:  !DOCTYPE html  html lang=\"en\"  head \n\n     !-- Vendor styling bundle -- \n     link rel=\"stylesheet\" href=\"css/vendor/all.css\" / \n\n     !-- Application styling bundle -- \n     link rel=\"stylesheet\" href=\"css/app/app.css\" /  /head  body \n\n     !-- Vendor scripts bundle -- \n     script src=\"js/vendor/all.js\" /script \n\n     !-- Application scripts bundle -- \n     script src=\"js/app/app.js\" /script  /body  /html   Build with concatenated files and bundles  gulp --theme $THEME_NAME build:d  This is the fastest build task and has the following main characteristics:    Does NOT generate minified assets.  You can enable minification for both CSS and JavaScript:  gulp --theme $THEME_NAME build:d --minify true  And with source maps:  gulp --theme $THEME_NAME build:d --minify true --debug true    Compiles Less files into CSS:   src/less/themes/$THEME_NAME/app.less  into  $BUILD_PATH/$THEME_NAME/css/app/app.css   (required)  src/less/themes/$THEME_NAME/main.less  into  $BUILD_PATH/$THEME_NAME/css/app/main.css  src/less/themes/$THEME_NAME/vendor/*.less  into  $BUILD_PATH/$THEME_NAME/css/vendor/*.css     Bundles application JavaScript with Browserify:   src/js/themes/$THEME_NAME/app.js  into  $BUILD_PATH/$THEME_NAME/js/app/app.js   (required)  src/js/themes/$THEME_NAME/main.js  into  $BUILD_PATH/$THEME_NAME/js/app/main.js  executes  browserify  tasks defined in  .build/browserify.json  excluding tasks for which the  build  key starts with  app/*  (which are ignored)     Compiles Swig template files into HTML:   src/html/themes/$THEME_NAME/**/*.html  into  $BUILD_PATH/$THEME_NAME/**/*.html     Copies files, in the following order:   src/images/common/*  into  $BUILD_PATH/$THEME_NAME/images/*  -  images stored here will end up in every theme  src/images/themes/$THEME_NAME/*  into  $BUILD_PATH/$THEME_NAME/images/*  -  theme specific images  executes  copy  tasks defined in  .build/copy-*/copy.*.json   (in path alphabetical order)  executes  copy  tasks defined in  .build/copy.json     Concatenates files, in the following order:   executes  concat  tasks defined in  .build/concat-*/concat.*.json   (in path alphabetical order)  executes  concat  tasks defined in  .build/concat.json  excluding tasks for which the  build  key starts with  js/app/*  (which are ignored)     Note that the execution order of different tasks is important.   Separated libraries  We've covered concatenation and bundles, but what about separated libraries? There is also an option for those who don't want to use bundles or concatenated files and where our HTML could look like this:  !DOCTYPE html  html lang=\"en\"  head \n\n     !-- Separated vendor styling -- \n     link rel=\"stylesheet\" href=\"css/vendor/bootstrap.css\" / \n     link rel=\"stylesheet\" href=\"css/vendor/font-awesome.css\" / \n     link rel=\"stylesheet\" href=\"css/vendor/morris.css\" / \n     !-- etc. -- \n\n     !-- Separated application styling -- \n     link rel=\"stylesheet\" href=\"css/app/main.css\" / \n     link rel=\"stylesheet\" href=\"css/app/sidebar.css\" / \n     link rel=\"stylesheet\" href=\"css/app/navbar.css\" / \n     !-- etc. --  /head  body \n\n     !-- Separated vendor scripts -- \n     script src=\"js/vendor/core/jquery.js\" /script \n     script src=\"js/vendor/core/bootstrap.js\" /script \n     script src=\"js/vendor/core/jquery-ui.custom.js\" /script \n     !-- etc. -- \n\n     !-- Separated application scripts -- \n     script src=\"js/app/main.js\" /script \n     script src=\"js/app/essentials.js\" /script \n     script src=\"js/app/navbar.js\" /script \n     !-- etc. --  /body  /html   Build with separated libraries  We definitely don't recommend this , but we won't stop you either. Here's how you can do it:  gulp --theme $THEME_NAME build:dm  Which is the same as:   gulp --theme $THEME_NAME build:d  But, with the following additional tasks:    Compiles separated Less modules to CSS:   src/less/theme/$THEME_NAME/app/*.less  into  $BUILD_PATH/$THEME_NAME/css/app/*.css     Bundles separated JavaScript modules with Browserify:   executes  browserify  tasks defined in  .build/browserify.json  including tasks for which the  build  key starts with  app/*  (which are ignored with  build:d )     Concatenates separated JavaScript files which don't make use of Browserify and  require :   executes  concat  tasks defined in  .build/concat-app/concat.*.json  executes  concat  tasks defined in  .build/concat.json  including tasks for which the  build  key starts with  js/app/*  (which are ignored with  build:d )     Additionally, you can instruct Swig when it compiles into HTML, to automatically load the separated files instead of the bundles (so the final HTML output of your application will look similar to our example above):  gulp --theme $THEME_NAME build:dm --bundle false", 
            "title": "Build"
        }, 
        {
            "location": "/workflow/gulp/index.html#watch", 
            "text": "gulp --theme $THEME_NAME  Starts a local web server and even opens your default browser on localhost on a dynamic free port. The web server is powered by BrowserSync, which means you can simultaneously track changes and synchronize the actions from your desktop browser with multiple devices while you're developing the application.   You can access the application from a mobile device via your private IP address and then if you refresh the page in your desktop browser, it will automatically refresh the application on your mobile device, but BrowserSync can do much more than a refresh (keeps in sync scoll position, click events, etc).  This also instructs gulp to watch your application files and rebuild when source files change and when it's done building, it will refresh your browser(s).", 
            "title": "Watch"
        }, 
        {
            "location": "/workflow/gulp/index.html#tasks", 
            "text": "While we already introduced the most important tasks of the gulp workflow,  build:d ,  build:dm  and  watch , there are several other tasks that are actually used by the build tasks themselves and that you can also use when you see fit.   Browserify tasks  browserify:main   Creates the main application script bundle from  src/js/themes/$THEME_NAME/app.js  to  $BUILD_PATH/$THEME_NAME/js/app/app.js .  Creates a secondary and optional application script bundle from  src/js/themes/$THEME_NAME/main.js  to  $BUILD_PATH/$THEME_NAME/js/app/main.js   (only if the source file exists) .   gulp --theme $THEME_NAME browserify:main  browserify:modules   Executes  browserify  tasks defined in  .build/browserify.json  for which the build key starts with  app/*   gulp --theme $THEME_NAME browserify:modules  browserify  Runs all  browserify  tasks:    browserify:main  browserify:modules   gulp --theme $THEME_NAME browserify   Code validation tasks  jshint   Runs JSHint on all the JavaScript files within  lib/**/*.js  and  src/**/*.js , a tool to detect errors and potential problems in your JavaScript code.   gulp --theme $THEME_NAME jshint   JavaScript compression tasks  uglify:all   Minifies all JavaScript files from  $BUILD_PATH/$THEME_NAME/js/**/*.js  to  $BUILD_PATH/$THEME_NAME/js/**/*.min.js .   gulp --theme $THEME_NAME uglify:all  uglify:theme  Minifies the following JavaScript files:    $BUILD_PATH/$THEME_NAME/js/app/app.js  to  $BUILD_PATH/$THEME_NAME/js/app/app.min.js  $BUILD_PATH/$THEME_NAME/js/app/main.js  to  $BUILD_PATH/$THEME_NAME/js/app/main.min.js  $BUILD_PATH/$THEME_NAME/js/app/vendor/*.js  to  $BUILD_PATH/$THEME_NAME/js/app/vendor/*.min.js   gulp --theme $THEME_NAME uglify:theme  uglify:modules   Minifies all JavaScript files from  $BUILD_PATH/$THEME_NAME/js/app/**/*.js  to  $BUILD_PATH/$THEME_NAME/js/app/**/*.min.js .   gulp --theme $THEME_NAME uglify:modules  uglify:main   Minifies  $BUILD_PATH/$THEME_NAME/js/app/app.js  to  $BUILD_PATH/$THEME_NAME/js/app/app.min.js .   gulp --theme $THEME_NAME uglify:main   CSS compression tasks  cssmin:vendor   Minifies all CSS files from  $BUILD_PATH/$THEME_NAME/css/vendor/*.css  to  $BUILD_PATH/$THEME_NAME/css/vendor/*.min.css .   gulp --theme $THEME_NAME cssmin:vendor  cssmin:theme  Minifies the following CSS files:   $BUILD_PATH/$THEME_NAME/css/app/app.css  to  $BUILD_PATH/$THEME_NAME/css/app/app.min.css  $BUILD_PATH/$THEME_NAME/css/app/main.css  to  $BUILD_PATH/$THEME_NAME/css/app/main.min.css   gulp --theme $THEME_NAME cssmin:theme  cssmin:modules   Minifies all CSS files from  $BUILD_PATH/$THEME_NAME/css/app/*.css  to  $BUILD_PATH/$THEME_NAME/css/app/*.min.css   except   app.css  and  main.css .   gulp --theme $THEME_NAME cssmin:modules  cssmin:skins   Minifies all CSS files from  $BUILD_PATH/$THEME_NAME/css/skin-*.css  to  $BUILD_PATH/$THEME_NAME/css/skin-*.min.css   gulp --theme $THEME_NAME cssmin:skins   Copy tasks  copy:images-common   Copies all files and directories from  src/images/common  to  $BUILD_PATH/$THEME_NAME/images  -  images stored in the  src/images/common  source directory will end up in every theme .   gulp --theme $THEME_NAME copy:images-common  copy:images-theme   Copies all files and directories from  src/images/themes/$THEME_NAME  to  $BUILD_PATH/$THEME_NAME/images  -  theme specific images .   gulp --theme $THEME_NAME copy:images-theme  copy:images  Runs the following  copy  tasks:    copy:images-common  copy:images-theme   gulp --theme $THEME_NAME copy:images  copy:build  Runs the following  copy  tasks:   copy:images  executes  copy  tasks defined in  .build/copy-*/copy.*.json   (in path alphabetical order)  executes  copy  tasks defined in  .build/copy.json   gulp --theme $THEME_NAME copy:build   Concatenation tasks  concat:dist   executes  concat  tasks defined in  .build/concat-*/concat.*.json   (in path alphabetical order)  executes  concat  tasks defined in  .build/concat.json  excluding tasks for which the  build  key starts with  js/app/*  or  css/app/*  (which are ignored)   gulp --theme $THEME_NAME concat:dist  concat:modules   executes  concat  tasks defined in  .build/concat-*/concat.*.json   (in path alphabetical order)  executes  concat  tasks defined in  .build/concat.json  ONLY tasks for which the  build  key starts with  js/app/*  or  css/app/*   gulp --theme $THEME_NAME concat:modules   Clean tasks  clean:html   Removes all HTML files from  $BUILD_PATH/$THEME_NAME/**/*.html .   gulp --theme $THEME_NAME clean:html  clean:dist   Removes all files and directories from  $BUILD_PATH/$THEME_NAME/**/* .   gulp --theme $THEME_NAME clean:dist  clean:modules   Removes all CSS files from  $BUILD_PATH/$THEME_NAME/css/app/*.css   except   app.css  and  main.css .  Removes all JavaScript files from  $BUILD_PATH/$THEME_NAME/js/app/*.js   except   app.js  and  main.js .   gulp --theme $THEME_NAME clean:modules  clean:skins   Removes all CSS files from  $BUILD_PATH/$THEME_NAME/css/skin-*.css .   gulp --theme $THEME_NAME clean:skins   HTML tasks  swig   Compiles all Swig templates to HTML from  src/html/themes/$THEME_NAME/**/*.html  to  $BUILD_PATH/$THEME_NAME/**/*.html .   gulp --theme $THEME_NAME swig  prettify:theme   Reformats all HTML files from  $BUILD_PATH/$THEME_NAME/**/*.html .   gulp --theme $THEME_NAME prettify:theme   Less tasks  less:theme   Compiles all LESS files from  src/less/themes/$THEME_NAME/*.less  to  $BUILD_PATH/$THEME_NAME/css/app/*.css .  Excluding  _*.less  files which are considered partials.   gulp --theme $THEME_NAME less:theme  less:modules   Compiles all LESS files from  src/less/themes/$THEME_NAME/app/*.less  to  $BUILD_PATH/$THEME_NAME/css/app/*.css .  Excluding  _*.less  files which are considered partials.   gulp --theme $THEME_NAME less:modules  less:vendor   Compiles all LESS files from  src/less/themes/$THEME_NAME/vendor/*.less  to  $BUILD_PATH/$THEME_NAME/css/vendor/*.css .  Excluding  _*.less  files which are considered partials.   gulp --theme $THEME_NAME less:vendor  less:skins   Compiles all LESS files from  src/less/skins/$THEME_NAME/*.less  to  $BUILD_PATH/$THEME_NAME/css/skin-*.css .   gulp --theme $THEME_NAME less:skins  less  Runs all the following  less  tasks:   less:theme  less:modules  less:vendor  less:skins   gulp --theme $THEME_NAME less", 
            "title": "Tasks"
        }, 
        {
            "location": "/workflow/gulp/index.html#see-also", 
            "text": "Structure  Manage assets  Include paths  Loading assets", 
            "title": "See also"
        }, 
        {
            "location": "/workflow/grunt/index.html", 
            "text": "Grunt Overview\n\n\nGrunt\n is the JavaScript task runner with the largest ecosystem. You can use Grunt to automate just about anything with a minimum of effort. We provide Grunt tasks for the most important aspects of customizing our templates.\n\n\n\n\nPrerequisites\n\n\nMake sure you have followed the \nGrunt installation steps\n for your operating system.\n\n\nLinux / Mac OS X\n\n\n\n\ncreate a copy of\n \nlib/grunt/Gruntfile.js\n to the root directory, \nif it doesn't exist already\n.\n\n\n\n\nWindows\n\n\nAdditionaly, when running on Windows operating systems, do the following:\n\n\n\n\nremove the provided Gruntfile.js\n from the root directory of the project, \nif it already exists\n - it's a soft linux symlink and chances are the contents of this file is just a pointer to the real file which is located in \nlib/grunt/Gruntfile.js\n\n\ncopy\n \nlib/grunt/Gruntfile.js\n in place of the file you removed at step 1.\n\n\nWhen using Windows, make sure all the commands in this documentation are executed from either the Terminal builtin with SourceTree or a MSYS terminal. Don't use cmd.exe, it won't work! See \ninstallation on Windows\n.\n\n\n\n\nNotes\n\n\nSubstitute \n$THEME_NAME\n where ever you see it thoughout the documentation instructions with a valid theme name. You can see the available themes by looking at the first level directories within \nsrc/html/themes\n.\n\n\n\n\nBuild\n\n\nUnlike Gulp\n, where we have a stream based \nbuild pipeline\n, Grunt provides a file based \nbuild system\n. Nonetheless, it connects files together across a number of processing steps, defining dependencies and which results in the final assets that get used by the application.\n\n\nBuild paths\n\n\nA build path is the destination directory where our final assets are placed after going through the build process. The build path is established with the \n--dist path/to/build\n CLI option.\n\n\n\n\nFor usage details and examples, see \nBuild paths from Gulp\n.\n\n\nWe'll be referring to the build path throughout the documentation via \n$BUILD_PATH\n.\n\n\n\n\n\n\nConcatenated files and bundles\n\n\nSee \nConcatenated files and bundles from Gulp\n.\n\n\nBuild with concatenated files and bundles\n\n\ngrunt --theme $THEME_NAME build:d\n\n\n\n\nThis is the fastest build task and has the following main characteristics:\n\n\n\n\n\n\nCleans the theme's build path (removes everything under \n$BUILD_PATH/$THEME_NAME/\n).\n\n\n\n\n\n\nDoes NOT generate minified assets.\n\n\nYou can enable minification for both CSS and JavaScript:\n\n\ngrunt --theme $THEME_NAME build:d --minify true\n\n\n\nAnd with source maps:\n\n\ngrunt --theme $THEME_NAME build:d --minify true --debug true\n\n\n\n\n\n\n\nCompiles Less files into CSS:\n\n\n\n\nsrc/less/themes/$THEME_NAME/app.less\n into \n$BUILD_PATH/$THEME_NAME/css/app/app.css\n \n(required)\n\n\nsrc/less/themes/$THEME_NAME/main.less\n into \n$BUILD_PATH/$THEME_NAME/css/app/main.css\n\n\nsrc/less/themes/$THEME_NAME/vendor/*.less\n into \n$BUILD_PATH/$THEME_NAME/css/vendor/*.css\n\n\n\n\n\n\n\n\nBundles application JavaScript with Browserify:\n\n\n\n\nsrc/js/themes/$THEME_NAME/app.js\n into \n$BUILD_PATH/$THEME_NAME/js/app/app.js\n \n(required)\n\n\nsrc/js/themes/$THEME_NAME/main.js\n into \n$BUILD_PATH/$THEME_NAME/js/app/main.js\n\n\nexecutes \nbrowserify\n tasks defined in \n.build/browserify.json\n\n\nexcluding tasks for which the \nbuild\n key starts with \napp/*\n (which are ignored)\n\n\n\n\n\n\n\n\nCompiles Swig template files into HTML:\n\n\n\n\nsrc/html/themes/$THEME_NAME/**/*.html\n into \n$BUILD_PATH/$THEME_NAME/**/*.html\n\n\n\n\n\n\n\n\nCopies files, in the following order:\n\n\n\n\nsrc/images/common/*\n into \n$BUILD_PATH/$THEME_NAME/images/*\n - \nimages stored here will end up in every theme\n\n\nsrc/images/themes/$THEME_NAME/*\n into \n$BUILD_PATH/$THEME_NAME/images/*\n - \ntheme specific images\n\n\nexecutes \ncopy\n tasks defined in \n.build/copy-*/copy.*.json\n \n(in path alphabetical order)\n\n\nexecutes \ncopy\n tasks defined in \n.build/copy.json\n\n\n\n\n\n\n\n\nConcatenates files, in the following order:\n\n\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat-*/concat.*.json\n \n(in path alphabetical order)\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat.json\n\n\nexcluding tasks for which the \nbuild\n key starts with \njs/app/*\n (which are ignored)\n\n\n\n\n\n\n\n\nNote that the execution order of different tasks is important.\n\n\n\n\nSeparated libraries\n\n\nSee \nSeparated libraries from Gulp\n.\n\n\nBuild with separated libraries\n\n\nWe definitely don't recommend this\n, but we won't stop you either. Here's how you can do it:\n\n\ngrunt --theme $THEME_NAME build:dm\n\n\n\n\nWhich is the same as: \n\n\ngrunt --theme $THEME_NAME build:d\n\n\n\n\nBut, with the following additional tasks:\n\n\n\n\n\n\nCompiles separated Less modules to CSS:\n\n\n\n\nsrc/less/theme/$THEME_NAME/app/*.less\n into \n$BUILD_PATH/$THEME_NAME/css/app/*.css\n\n\n\n\n\n\n\n\nBundles separated JavaScript modules with Browserify:\n\n\n\n\nexecutes \nbrowserify\n tasks defined in \n.build/browserify.json\n\n\nincluding tasks for which the \nbuild\n key starts with \napp/*\n (which are ignored with \nbuild:d\n)\n\n\n\n\n\n\n\n\nConcatenates separated JavaScript files which don't make use of Browserify and \nrequire\n:\n\n\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat-app/concat.*.json\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat.json\n\n\nincluding tasks for which the \nbuild\n key starts with \njs/app/*\n (which are ignored with \nbuild:d\n)\n\n\n\n\n\n\n\n\nAdditionally, you can instruct Swig when it compiles into HTML, to automatically load the separated files instead of the bundles (so the final HTML output of your application will look similar to \nthis example\n):\n\n\ngrunt --theme $THEME_NAME build:dm --bundle false\n\n\n\n\n\n\nWatch\n\n\ngrunt --theme $THEME_NAME\n\n\n\n\nSee \nWatch from Gulp\n.\n\n\n\n\nTasks\n\n\nWhile we already introduced the most important tasks of the grunt workflow, \nbuild:d\n, \nbuild:dm\n and \nwatch\n, there are several other tasks that are actually used by the build tasks themselves and that you can also use when you see fit.\n\n\n\n\nBrowserify tasks\n\n\nbrowserify\n\n\n\n\nCreates the main application script bundle from \nsrc/js/themes/$THEME_NAME/app.js\n to \n$BUILD_PATH/$THEME_NAME/js/app/app.js\n.\n\n\nCreates a secondary and optional application script bundle from \nsrc/js/themes/$THEME_NAME/main.js\n to \n$BUILD_PATH/$THEME_NAME/js/app/main.js\n \n(only if the source file exists)\n.\n\n\n\n\ngrunt --theme $THEME_NAME browserify\n\n\n\n\nbrowserify-modules\n\n\n\n\nExecutes \nbrowserify\n tasks defined in \n.build/browserify.json\n for which the build key starts with \napp/*\n\n\n\n\ngrunt --theme $THEME_NAME browserify-modules\n\n\n\n\n\n\nCode validation tasks\n\n\njshint\n\n\n\n\nRuns JSHint on all the JavaScript files within \nlib/**/*.js\n and \nsrc/**/*.js\n, a tool to detect errors and potential problems in your JavaScript code.\n\n\n\n\ngrunt --theme $THEME_NAME jshint\n\n\n\n\n\n\nJavaScript compression tasks\n\n\nuglify:all\n\n\n\n\nMinifies all JavaScript files from \n$BUILD_PATH/$THEME_NAME/js/**/*.js\n to \n$BUILD_PATH/$THEME_NAME/js/**/*.min.js\n.\n\n\n\n\ngrunt --theme $THEME_NAME uglify:all\n\n\n\n\nuglify:theme\n\n\nMinifies the following JavaScript files: \n\n\n\n\n$BUILD_PATH/$THEME_NAME/js/app/app.js\n to \n$BUILD_PATH/$THEME_NAME/js/app/app.min.js\n\n\n$BUILD_PATH/$THEME_NAME/js/app/main.js\n to \n$BUILD_PATH/$THEME_NAME/js/app/main.min.js\n\n\n$BUILD_PATH/$THEME_NAME/js/app/vendor/*.js\n to \n$BUILD_PATH/$THEME_NAME/js/app/vendor/*.min.js\n\n\n\n\ngrunt --theme $THEME_NAME uglify:theme\n\n\n\n\nuglify:modules\n\n\nMinifies all JavaScript files from \n$BUILD_PATH/$THEME_NAME/js/app/*.js\n to \n$BUILD_PATH/$THEME_NAME/js/app/*.min.js\n.\n\n\nExcept\n:\n\n\n\n\n$BUILD_PATH/$THEME_NAME/js/app/app.js\n\n\n$BUILD_PATH/$THEME_NAME/js/app/main.js\n\n\n\n\ngrunt --theme $THEME_NAME uglify:modules\n\n\n\n\nuglify:main\n\n\nMinifies JavaScript from \n$BUILD_PATH/$THEME_NAME/js/app/app.js\n to \n$BUILD_PATH/$THEME_NAME/js/app/app.min.js\n.\n\n\ngrunt --theme $THEME_NAME uglify:main\n\n\n\n\n\n\nCSS compression tasks\n\n\ncssmin:vendor\n\n\n\n\nMinifies all CSS files from \n$BUILD_PATH/$THEME_NAME/css/vendor/*.css\n to \n$BUILD_PATH/$THEME_NAME/css/vendor/*.min.css\n.\n\n\n\n\ngrunt --theme $THEME_NAME cssmin:vendor\n\n\n\n\ncssmin:theme\n\n\nMinifies the following CSS files:\n\n\n\n\n$BUILD_PATH/$THEME_NAME/css/app/app.css\n to \n$BUILD_PATH/$THEME_NAME/css/app/app.min.css\n\n\n$BUILD_PATH/$THEME_NAME/css/app/main.css\n to \n$BUILD_PATH/$THEME_NAME/css/app/main.min.css\n\n\n\n\ngrunt --theme $THEME_NAME cssmin:theme\n\n\n\n\ncssmin:modules\n\n\n\n\nMinifies all CSS files from \n$BUILD_PATH/$THEME_NAME/css/app/*.css\n to \n$BUILD_PATH/$THEME_NAME/css/app/*.min.css\n \nexcept\n \napp.css\n and \nmain.css\n.\n\n\n\n\ngrunt --theme $THEME_NAME cssmin:modules\n\n\n\n\ncssmin:skins\n\n\n\n\nMinifies all CSS files from \n$BUILD_PATH/$THEME_NAME/css/skin-*.css\n to \n$BUILD_PATH/$THEME_NAME/css/skin-*.min.css\n\n\n\n\ngrunt --theme $THEME_NAME cssmin:skins\n\n\n\n\ncssmin\n\n\nRuns the following \ncssmin\n tasks: \n\n\n\n\ncssmin:vendor\n\n\ncssmin:theme\n\n\ncssmin:modules\n\n\ncssmin:skins\n\n\n\n\ngrunt --theme $THEME_NAME cssmin\n\n\n\n\n\n\nCopy tasks\n\n\ncopy:images_common\n\n\n\n\nCopies all files and directories from \nsrc/images/common\n to \n$BUILD_PATH/$THEME_NAME/images\n - \nimages stored in the \nsrc/images/common\n source directory will end up in every theme\n.\n\n\n\n\ngrunt --theme $THEME_NAME copy:images_common\n\n\n\n\ncopy:images_theme\n\n\n\n\nCopies all files and directories from \nsrc/images/themes/$THEME_NAME\n to \n$BUILD_PATH/$THEME_NAME/images\n - \ntheme specific images\n.\n\n\n\n\ngrunt --theme $THEME_NAME copy:images_theme\n\n\n\n\ncopy\n\n\nRuns the following \ncopy\n tasks: \n\n\n\n\ncopy:images_common\n\n\ncopy:images_theme\n\n\n\n\ngrunt --theme $THEME_NAME copy\n\n\n\n\ncopy-build\n\n\nRuns the following \ncopy\n tasks:\n\n\n\n\ncopy:images_common\n\n\ncopy:images_theme\n\n\nexecutes \ncopy\n tasks defined in \n.build/copy-*/copy.*.json\n \n(in path alphabetical order)\n\n\nexecutes \ncopy\n tasks defined in \n.build/copy.json\n\n\n\n\ngrunt --theme $THEME_NAME copy-build\n\n\n\n\n\n\nConcatenation tasks\n\n\nconcat\n\n\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat-*/concat.*.json\n \n(in path alphabetical order)\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat.json\n\n\nexcluding tasks for which the \nbuild\n key starts with \njs/app/*\n or \ncss/app/*\n (which are ignored)\n\n\n\n\ngrunt --theme $THEME_NAME concat\n\n\n\n\nconcat-modules\n\n\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat-*/concat.*.json\n \n(in path alphabetical order)\n\n\nexecutes \nconcat\n tasks defined in \n.build/concat.json\n\n\nONLY tasks for which the \nbuild\n key starts with \njs/app/*\n or \ncss/app/*\n\n\n\n\ngrunt --theme $THEME_NAME concat-modules\n\n\n\n\n\n\nClean tasks\n\n\nclean:html\n\n\n\n\nRemoves all HTML files from \n$BUILD_PATH/$THEME_NAME/**/*.html\n.\n\n\n\n\ngrunt --theme $THEME_NAME clean:html\n\n\n\n\nclean:dist\n\n\n\n\nRemoves all files and directories from \n$BUILD_PATH/$THEME_NAME/**/*\n.\n\n\n\n\ngrunt --theme $THEME_NAME clean:dist\n\n\n\n\nclean:modules\n\n\n\n\nRemoves all CSS files from \n$BUILD_PATH/$THEME_NAME/css/app/*.css\n \nexcept\n \napp.css\n and \nmain.css\n.\n\n\nRemoves all JavaScript files from \n$BUILD_PATH/$THEME_NAME/js/app/*.js\n \nexcept\n \napp.js\n and \nmain.js\n.\n\n\n\n\ngrunt --theme $THEME_NAME clean:modules\n\n\n\n\nclean:skins\n\n\n\n\nRemoves all CSS files from \n$BUILD_PATH/$THEME_NAME/css/skin-*.css\n.\n\n\n\n\ngrunt --theme $THEME_NAME clean:skins\n\n\n\n\nclean\n\n\nRuns all the following \nclean\n tasks:\n\n\n\n\nclean:html\n\n\nclean:dist\n\n\nclean:modules\n\n\nclean:skins\n\n\n\n\ngrunt --theme $THEME_NAME clean\n\n\n\n\n\n\nHTML tasks\n\n\nswig\n\n\n\n\nCompiles all Swig templates to HTML from \nsrc/html/themes/$THEME_NAME/**/*.html\n to \n$BUILD_PATH/$THEME_NAME/**/*.html\n.\n\n\n\n\ngrunt --theme $THEME_NAME swig\n\n\n\n\nprettify:theme\n\n\n\n\nReformats all HTML files from \n$BUILD_PATH/$THEME_NAME/**/*.html\n.\n\n\n\n\ngrunt --theme $THEME_NAME prettify:theme\n\n\n\n\n\n\nLess tasks\n\n\nless:theme\n\n\n\n\nCompiles all LESS files from \nsrc/less/themes/$THEME_NAME/*.less\n to \n$BUILD_PATH/$THEME_NAME/css/app/*.css\n.\n\n\nExcluding \n_*.less\n files which are considered partials.\n\n\n\n\ngrunt --theme $THEME_NAME less:theme\n\n\n\n\nless:modules\n\n\n\n\nCompiles all LESS files from \nsrc/less/themes/$THEME_NAME/app/*.less\n to \n$BUILD_PATH/$THEME_NAME/css/app/*.css\n.\n\n\nExcluding \n_*.less\n files which are considered partials.\n\n\n\n\ngrunt --theme $THEME_NAME less:modules\n\n\n\n\nless:vendor\n\n\n\n\nCompiles all LESS files from \nsrc/less/themes/$THEME_NAME/vendor/*.less\n to \n$BUILD_PATH/$THEME_NAME/css/vendor/*.css\n.\n\n\nExcluding \n_*.less\n files which are considered partials.\n\n\n\n\ngrunt --theme $THEME_NAME less:vendor\n\n\n\n\nless:skins\n\n\n\n\nCompiles all LESS files from \nsrc/less/skins/$THEME_NAME/*.less\n to \n$BUILD_PATH/$THEME_NAME/css/skin-*.css\n.\n\n\n\n\ngrunt --theme $THEME_NAME less:skins\n\n\n\n\nless\n\n\nRuns all the following \nless\n tasks:\n\n\n\n\nless:theme\n\n\nless:modules\n\n\nless:vendor\n\n\nless:skins\n\n\n\n\ngrunt --theme $THEME_NAME less\n\n\n\n\n\n\nCSS vendor prefixes\n\n\nParse CSS and automatically add vendor prefixes to CSS rules for the last 4 versions of all browsers.\n\n\nautoprefixer:theme\n\n\nAutomatically add vendor prefixes to: \n\n\n\n\n$BUILD_PATH/$THEME_NAME/css/app/app.css\n\n\n$BUILD_PATH/$THEME_NAME/css/app/main.css\n\n\n\n\ngrunt --theme $THEME_NAME autoprefixer:theme\n\n\n\n\nautoprefixer:modules\n\n\nAutomatically add vendor prefixes to \n$BUILD_PATH/$THEME_NAME/css/app/*.css\n.\n\n\nExcept\n:\n\n\n\n\n$BUILD_PATH/$THEME_NAME/css/app/app.css\n\n\n$BUILD_PATH/$THEME_NAME/css/app/main.css\n\n\n\n\ngrunt --theme $THEME_NAME autoprefixer:modules\n\n\n\n\nautoprefixer:skins\n\n\n\n\nAutomatically add vendor prefixes to \n$BUILD_PATH/$THEME_NAME/css/skin-*.css\n.\n\n\n\n\ngrunt --theme $THEME_NAME autoprefixer:skins\n\n\n\n\nautoprefixer\n\n\nRuns all the following \nautoprefixer\n tasks:\n\n\n\n\nautoprefixer:theme\n\n\nautoprefixer:modules\n\n\nautoprefixer:skins\n\n\n\n\ngrunt --theme $THEME_NAME autoprefixer\n\n\n\n\n\n\nSee also\n\n\n\n\nStructure\n\n\nManage assets\n\n\nInclude paths\n\n\nLoading assets", 
            "title": "Grunt"
        }, 
        {
            "location": "/workflow/grunt/index.html#grunt-overview", 
            "text": "Grunt  is the JavaScript task runner with the largest ecosystem. You can use Grunt to automate just about anything with a minimum of effort. We provide Grunt tasks for the most important aspects of customizing our templates.", 
            "title": "Grunt Overview"
        }, 
        {
            "location": "/workflow/grunt/index.html#prerequisites", 
            "text": "Make sure you have followed the  Grunt installation steps  for your operating system.  Linux / Mac OS X   create a copy of   lib/grunt/Gruntfile.js  to the root directory,  if it doesn't exist already .   Windows  Additionaly, when running on Windows operating systems, do the following:   remove the provided Gruntfile.js  from the root directory of the project,  if it already exists  - it's a soft linux symlink and chances are the contents of this file is just a pointer to the real file which is located in  lib/grunt/Gruntfile.js  copy   lib/grunt/Gruntfile.js  in place of the file you removed at step 1.  When using Windows, make sure all the commands in this documentation are executed from either the Terminal builtin with SourceTree or a MSYS terminal. Don't use cmd.exe, it won't work! See  installation on Windows .   Notes  Substitute  $THEME_NAME  where ever you see it thoughout the documentation instructions with a valid theme name. You can see the available themes by looking at the first level directories within  src/html/themes .", 
            "title": "Prerequisites"
        }, 
        {
            "location": "/workflow/grunt/index.html#build", 
            "text": "Unlike Gulp , where we have a stream based  build pipeline , Grunt provides a file based  build system . Nonetheless, it connects files together across a number of processing steps, defining dependencies and which results in the final assets that get used by the application.  Build paths  A build path is the destination directory where our final assets are placed after going through the build process. The build path is established with the  --dist path/to/build  CLI option.   For usage details and examples, see  Build paths from Gulp .  We'll be referring to the build path throughout the documentation via  $BUILD_PATH .    Concatenated files and bundles  See  Concatenated files and bundles from Gulp .  Build with concatenated files and bundles  grunt --theme $THEME_NAME build:d  This is the fastest build task and has the following main characteristics:    Cleans the theme's build path (removes everything under  $BUILD_PATH/$THEME_NAME/ ).    Does NOT generate minified assets.  You can enable minification for both CSS and JavaScript:  grunt --theme $THEME_NAME build:d --minify true  And with source maps:  grunt --theme $THEME_NAME build:d --minify true --debug true    Compiles Less files into CSS:   src/less/themes/$THEME_NAME/app.less  into  $BUILD_PATH/$THEME_NAME/css/app/app.css   (required)  src/less/themes/$THEME_NAME/main.less  into  $BUILD_PATH/$THEME_NAME/css/app/main.css  src/less/themes/$THEME_NAME/vendor/*.less  into  $BUILD_PATH/$THEME_NAME/css/vendor/*.css     Bundles application JavaScript with Browserify:   src/js/themes/$THEME_NAME/app.js  into  $BUILD_PATH/$THEME_NAME/js/app/app.js   (required)  src/js/themes/$THEME_NAME/main.js  into  $BUILD_PATH/$THEME_NAME/js/app/main.js  executes  browserify  tasks defined in  .build/browserify.json  excluding tasks for which the  build  key starts with  app/*  (which are ignored)     Compiles Swig template files into HTML:   src/html/themes/$THEME_NAME/**/*.html  into  $BUILD_PATH/$THEME_NAME/**/*.html     Copies files, in the following order:   src/images/common/*  into  $BUILD_PATH/$THEME_NAME/images/*  -  images stored here will end up in every theme  src/images/themes/$THEME_NAME/*  into  $BUILD_PATH/$THEME_NAME/images/*  -  theme specific images  executes  copy  tasks defined in  .build/copy-*/copy.*.json   (in path alphabetical order)  executes  copy  tasks defined in  .build/copy.json     Concatenates files, in the following order:   executes  concat  tasks defined in  .build/concat-*/concat.*.json   (in path alphabetical order)  executes  concat  tasks defined in  .build/concat.json  excluding tasks for which the  build  key starts with  js/app/*  (which are ignored)     Note that the execution order of different tasks is important.   Separated libraries  See  Separated libraries from Gulp .  Build with separated libraries  We definitely don't recommend this , but we won't stop you either. Here's how you can do it:  grunt --theme $THEME_NAME build:dm  Which is the same as:   grunt --theme $THEME_NAME build:d  But, with the following additional tasks:    Compiles separated Less modules to CSS:   src/less/theme/$THEME_NAME/app/*.less  into  $BUILD_PATH/$THEME_NAME/css/app/*.css     Bundles separated JavaScript modules with Browserify:   executes  browserify  tasks defined in  .build/browserify.json  including tasks for which the  build  key starts with  app/*  (which are ignored with  build:d )     Concatenates separated JavaScript files which don't make use of Browserify and  require :   executes  concat  tasks defined in  .build/concat-app/concat.*.json  executes  concat  tasks defined in  .build/concat.json  including tasks for which the  build  key starts with  js/app/*  (which are ignored with  build:d )     Additionally, you can instruct Swig when it compiles into HTML, to automatically load the separated files instead of the bundles (so the final HTML output of your application will look similar to  this example ):  grunt --theme $THEME_NAME build:dm --bundle false", 
            "title": "Build"
        }, 
        {
            "location": "/workflow/grunt/index.html#watch", 
            "text": "grunt --theme $THEME_NAME  See  Watch from Gulp .", 
            "title": "Watch"
        }, 
        {
            "location": "/workflow/grunt/index.html#tasks", 
            "text": "While we already introduced the most important tasks of the grunt workflow,  build:d ,  build:dm  and  watch , there are several other tasks that are actually used by the build tasks themselves and that you can also use when you see fit.   Browserify tasks  browserify   Creates the main application script bundle from  src/js/themes/$THEME_NAME/app.js  to  $BUILD_PATH/$THEME_NAME/js/app/app.js .  Creates a secondary and optional application script bundle from  src/js/themes/$THEME_NAME/main.js  to  $BUILD_PATH/$THEME_NAME/js/app/main.js   (only if the source file exists) .   grunt --theme $THEME_NAME browserify  browserify-modules   Executes  browserify  tasks defined in  .build/browserify.json  for which the build key starts with  app/*   grunt --theme $THEME_NAME browserify-modules   Code validation tasks  jshint   Runs JSHint on all the JavaScript files within  lib/**/*.js  and  src/**/*.js , a tool to detect errors and potential problems in your JavaScript code.   grunt --theme $THEME_NAME jshint   JavaScript compression tasks  uglify:all   Minifies all JavaScript files from  $BUILD_PATH/$THEME_NAME/js/**/*.js  to  $BUILD_PATH/$THEME_NAME/js/**/*.min.js .   grunt --theme $THEME_NAME uglify:all  uglify:theme  Minifies the following JavaScript files:    $BUILD_PATH/$THEME_NAME/js/app/app.js  to  $BUILD_PATH/$THEME_NAME/js/app/app.min.js  $BUILD_PATH/$THEME_NAME/js/app/main.js  to  $BUILD_PATH/$THEME_NAME/js/app/main.min.js  $BUILD_PATH/$THEME_NAME/js/app/vendor/*.js  to  $BUILD_PATH/$THEME_NAME/js/app/vendor/*.min.js   grunt --theme $THEME_NAME uglify:theme  uglify:modules  Minifies all JavaScript files from  $BUILD_PATH/$THEME_NAME/js/app/*.js  to  $BUILD_PATH/$THEME_NAME/js/app/*.min.js .  Except :   $BUILD_PATH/$THEME_NAME/js/app/app.js  $BUILD_PATH/$THEME_NAME/js/app/main.js   grunt --theme $THEME_NAME uglify:modules  uglify:main  Minifies JavaScript from  $BUILD_PATH/$THEME_NAME/js/app/app.js  to  $BUILD_PATH/$THEME_NAME/js/app/app.min.js .  grunt --theme $THEME_NAME uglify:main   CSS compression tasks  cssmin:vendor   Minifies all CSS files from  $BUILD_PATH/$THEME_NAME/css/vendor/*.css  to  $BUILD_PATH/$THEME_NAME/css/vendor/*.min.css .   grunt --theme $THEME_NAME cssmin:vendor  cssmin:theme  Minifies the following CSS files:   $BUILD_PATH/$THEME_NAME/css/app/app.css  to  $BUILD_PATH/$THEME_NAME/css/app/app.min.css  $BUILD_PATH/$THEME_NAME/css/app/main.css  to  $BUILD_PATH/$THEME_NAME/css/app/main.min.css   grunt --theme $THEME_NAME cssmin:theme  cssmin:modules   Minifies all CSS files from  $BUILD_PATH/$THEME_NAME/css/app/*.css  to  $BUILD_PATH/$THEME_NAME/css/app/*.min.css   except   app.css  and  main.css .   grunt --theme $THEME_NAME cssmin:modules  cssmin:skins   Minifies all CSS files from  $BUILD_PATH/$THEME_NAME/css/skin-*.css  to  $BUILD_PATH/$THEME_NAME/css/skin-*.min.css   grunt --theme $THEME_NAME cssmin:skins  cssmin  Runs the following  cssmin  tasks:    cssmin:vendor  cssmin:theme  cssmin:modules  cssmin:skins   grunt --theme $THEME_NAME cssmin   Copy tasks  copy:images_common   Copies all files and directories from  src/images/common  to  $BUILD_PATH/$THEME_NAME/images  -  images stored in the  src/images/common  source directory will end up in every theme .   grunt --theme $THEME_NAME copy:images_common  copy:images_theme   Copies all files and directories from  src/images/themes/$THEME_NAME  to  $BUILD_PATH/$THEME_NAME/images  -  theme specific images .   grunt --theme $THEME_NAME copy:images_theme  copy  Runs the following  copy  tasks:    copy:images_common  copy:images_theme   grunt --theme $THEME_NAME copy  copy-build  Runs the following  copy  tasks:   copy:images_common  copy:images_theme  executes  copy  tasks defined in  .build/copy-*/copy.*.json   (in path alphabetical order)  executes  copy  tasks defined in  .build/copy.json   grunt --theme $THEME_NAME copy-build   Concatenation tasks  concat   executes  concat  tasks defined in  .build/concat-*/concat.*.json   (in path alphabetical order)  executes  concat  tasks defined in  .build/concat.json  excluding tasks for which the  build  key starts with  js/app/*  or  css/app/*  (which are ignored)   grunt --theme $THEME_NAME concat  concat-modules   executes  concat  tasks defined in  .build/concat-*/concat.*.json   (in path alphabetical order)  executes  concat  tasks defined in  .build/concat.json  ONLY tasks for which the  build  key starts with  js/app/*  or  css/app/*   grunt --theme $THEME_NAME concat-modules   Clean tasks  clean:html   Removes all HTML files from  $BUILD_PATH/$THEME_NAME/**/*.html .   grunt --theme $THEME_NAME clean:html  clean:dist   Removes all files and directories from  $BUILD_PATH/$THEME_NAME/**/* .   grunt --theme $THEME_NAME clean:dist  clean:modules   Removes all CSS files from  $BUILD_PATH/$THEME_NAME/css/app/*.css   except   app.css  and  main.css .  Removes all JavaScript files from  $BUILD_PATH/$THEME_NAME/js/app/*.js   except   app.js  and  main.js .   grunt --theme $THEME_NAME clean:modules  clean:skins   Removes all CSS files from  $BUILD_PATH/$THEME_NAME/css/skin-*.css .   grunt --theme $THEME_NAME clean:skins  clean  Runs all the following  clean  tasks:   clean:html  clean:dist  clean:modules  clean:skins   grunt --theme $THEME_NAME clean   HTML tasks  swig   Compiles all Swig templates to HTML from  src/html/themes/$THEME_NAME/**/*.html  to  $BUILD_PATH/$THEME_NAME/**/*.html .   grunt --theme $THEME_NAME swig  prettify:theme   Reformats all HTML files from  $BUILD_PATH/$THEME_NAME/**/*.html .   grunt --theme $THEME_NAME prettify:theme   Less tasks  less:theme   Compiles all LESS files from  src/less/themes/$THEME_NAME/*.less  to  $BUILD_PATH/$THEME_NAME/css/app/*.css .  Excluding  _*.less  files which are considered partials.   grunt --theme $THEME_NAME less:theme  less:modules   Compiles all LESS files from  src/less/themes/$THEME_NAME/app/*.less  to  $BUILD_PATH/$THEME_NAME/css/app/*.css .  Excluding  _*.less  files which are considered partials.   grunt --theme $THEME_NAME less:modules  less:vendor   Compiles all LESS files from  src/less/themes/$THEME_NAME/vendor/*.less  to  $BUILD_PATH/$THEME_NAME/css/vendor/*.css .  Excluding  _*.less  files which are considered partials.   grunt --theme $THEME_NAME less:vendor  less:skins   Compiles all LESS files from  src/less/skins/$THEME_NAME/*.less  to  $BUILD_PATH/$THEME_NAME/css/skin-*.css .   grunt --theme $THEME_NAME less:skins  less  Runs all the following  less  tasks:   less:theme  less:modules  less:vendor  less:skins   grunt --theme $THEME_NAME less   CSS vendor prefixes  Parse CSS and automatically add vendor prefixes to CSS rules for the last 4 versions of all browsers.  autoprefixer:theme  Automatically add vendor prefixes to:    $BUILD_PATH/$THEME_NAME/css/app/app.css  $BUILD_PATH/$THEME_NAME/css/app/main.css   grunt --theme $THEME_NAME autoprefixer:theme  autoprefixer:modules  Automatically add vendor prefixes to  $BUILD_PATH/$THEME_NAME/css/app/*.css .  Except :   $BUILD_PATH/$THEME_NAME/css/app/app.css  $BUILD_PATH/$THEME_NAME/css/app/main.css   grunt --theme $THEME_NAME autoprefixer:modules  autoprefixer:skins   Automatically add vendor prefixes to  $BUILD_PATH/$THEME_NAME/css/skin-*.css .   grunt --theme $THEME_NAME autoprefixer:skins  autoprefixer  Runs all the following  autoprefixer  tasks:   autoprefixer:theme  autoprefixer:modules  autoprefixer:skins   grunt --theme $THEME_NAME autoprefixer", 
            "title": "Tasks"
        }, 
        {
            "location": "/workflow/grunt/index.html#see-also", 
            "text": "Structure  Manage assets  Include paths  Loading assets", 
            "title": "See also"
        }, 
        {
            "location": "/code/structure/index.html", 
            "text": "Structure\n\n\nThis document aims to provide a basic understanding of the file structure and the main directories you'll find in the package.\n\n\nIt's recommended\n that any customization, to any aspect of the template, should be done using the source files rather than the compiled assets and then generate a fresh compiled version of the customized application using the \nbuild process\n.\n\n\n\n\nSource\n\n\nWe provide source files for everything from 3rd party libraries and proprietary assets to project specific source files such as Swig templates used to compose HTML pages, all the individual application JavaScript files and the Less files used to create the application styling.\n\n\n\n\n\n\n3rd party assets\n\n\nbower_components/\n\n\nAll the 3rd party assets, such as jQuery and Bootstrap are \nmanaged with Bower\n.\n\n\n\n\n\n\nProprietary assets\n\n\nlib/\n\n\nIn addition to 3rd party assets, we also provide our own collection of libraries, and because it's proprietary code (private), these libraries are not managed with bower, but are all included in the \nlib/\n directory.\n\n\n\n\n\n\nProject source\n\n\nsrc/\n\u251c\u2500\u2500 html                // Source Application HTML\n\u251c\u2500\u2500 images\n\u251c\u2500\u2500 js                  // Source Application JavaScript\n\u2514\u2500\u2500 less                // Source Application Styling\n\n\n\n\n\n\n\n\n\nCompiled assets\n\n\nIn addition to the source, we also provide compiled project files, such as static HTML, CSS and JavaScript files, resulted from running the \nbuild process\n ourselves. For more details, see \nBuild paths\n.\n\n\n\n\nSee also\n\n\n\n\nThe build process\n\n\nManage assets\n\n\nInclude paths\n\n\nLoading assets", 
            "title": "Structure"
        }, 
        {
            "location": "/code/structure/index.html#structure", 
            "text": "This document aims to provide a basic understanding of the file structure and the main directories you'll find in the package.  It's recommended  that any customization, to any aspect of the template, should be done using the source files rather than the compiled assets and then generate a fresh compiled version of the customized application using the  build process .", 
            "title": "Structure"
        }, 
        {
            "location": "/code/structure/index.html#source", 
            "text": "We provide source files for everything from 3rd party libraries and proprietary assets to project specific source files such as Swig templates used to compose HTML pages, all the individual application JavaScript files and the Less files used to create the application styling.    3rd party assets  bower_components/  All the 3rd party assets, such as jQuery and Bootstrap are  managed with Bower .    Proprietary assets  lib/  In addition to 3rd party assets, we also provide our own collection of libraries, and because it's proprietary code (private), these libraries are not managed with bower, but are all included in the  lib/  directory.    Project source  src/\n\u251c\u2500\u2500 html                // Source Application HTML\n\u251c\u2500\u2500 images\n\u251c\u2500\u2500 js                  // Source Application JavaScript\n\u2514\u2500\u2500 less                // Source Application Styling", 
            "title": "Source"
        }, 
        {
            "location": "/code/structure/index.html#compiled-assets", 
            "text": "In addition to the source, we also provide compiled project files, such as static HTML, CSS and JavaScript files, resulted from running the  build process  ourselves. For more details, see  Build paths .", 
            "title": "Compiled assets"
        }, 
        {
            "location": "/code/structure/index.html#see-also", 
            "text": "The build process  Manage assets  Include paths  Loading assets", 
            "title": "See also"
        }, 
        {
            "location": "/code/bower/index.html", 
            "text": "Bower Overview\n\n\nBower\n is a package management tool optimized for the front-end. Bower works by fetching and installing packages from all over, taking care of hunting, finding, downloading, and saving the stuff you\u2019re looking for. Bower keeps track of these packages in a manifest file, \nbower.json\n.\n\n\n\n\nInstalling packages\n\n\nYou can install packages with:\n\n\nbower install \npackage\n\n\n\n\nWith an optional \n--save\n to update the \nbower.json\n manifest file to include the new package.\n\n\nbower install \npackage\n --save\n\n\n\nBower installs packages to \nbower_components/\n.\n\n\n\n\nExample\n\n\nTo exemplify, let's say we want to include jQuery UI into our project - \nand by the way, don't do this! jQuery UI is already included.\n\n\n\n\n\n\nInstall the latest jQuery UI via bower:\n\n\nbower install jquery-ui --save\n\n\n\n\n\n\n\nDefine a copy task in \n.build/copy-vendor/copy.core.json\n:\n\n\n{\n    \"task\": \"copy-vendor-jquery-ui-scripts\",\n    \"cwd\": \"bower_components\",\n    \"src\": [\n        \"jquery-ui/ui/core.js\",\n        \"jquery-ui/ui/widget.js\",\n        \"jquery-ui/ui/mouse.js\",\n        \"jquery-ui/ui/position.js\",\n        \"jquery-ui/ui/draggable.js\",\n        \"jquery-ui/ui/droppable.js\",\n        \"jquery-ui/ui/resizable.js\",\n        \"jquery-ui/ui/selectable.js\",\n        \"jquery-ui/ui/sortable.js\"\n    ],\n    \"dest\": \"js/vendor/core/jquery-ui\",\n    \"flatten\": true\n}\n\n\n\nThe \njson\n file will be picked up automatically and executed when running pt. 5 of the \nbuild process\n. The task will copy the files defined in the \nsrc\n array from \nbower_components/jquery-ui/ui/*.js\n to \n$BUILD_PATH/$THEME_NAME/js/vendor/core/jquery-ui/*.js\n. \n\n\nAt this point we could load any of the files in HTML simply by:\n\n\nscript src=\"js/vendor/core/jquery-ui/core.js\"\n/script\n\n\nscript src=\"js/vendor/core/jquery-ui/widget.js\"\n/script\n\n\n!-- etc ... --\n\n\n\n\n\n\n\n\nInstead, we go further and concatenate the jQuery UI files from \n$BUILD_PATH/$THEME_NAME/js/vendor/core/jquery-ui/*.js\n into \n$BUILD_PATH/$THEME_NAME/js/vendor/core/jquery-ui.custom.js\n which is further concatenated into \n$BUILD_PATH/$THEME_NAME/js/vendor/core/all.js\n along with many other libraries in the \ncore\n group.\n\n\nFor that, we use the \n.build/concat-vendor/concat.core.json\n config file:\n\n\n[\n    {\n        \"build\": \"js/vendor/core/jquery-ui.custom.js\",\n        \"cwd\": \"$THEME_DIR/js/vendor/core/jquery-ui\",\n        \"files\": [\n            \"core.js\",\n            \"widget.js\",\n            \"mouse.js\",\n            \"position.js\",\n            \"draggable.js\",\n            \"droppable.js\",\n            \"resizable.js\",\n            \"selectable.js\",\n            \"sortable.js\"\n        ]\n    },\n    {\n        \"build\": \"js/vendor/core/all.js\",\n        \"cwd\": \"$THEME_DIR/js/vendor/core\",\n        \"files\": [\n            \"...\",\n            \"jquery-ui.custom.js\"\n        ]\n    }\n]\n\n\n\nThe \njson\n file will be picked up automatically and executed when running pt. 6 of the \nbuild process\n and it will first create \n$BUILD_PATH/$THEME_NAME/js/vendor/core/jquery-ui.custom.js\n and then include the resulting file's content in \n$BUILD_PATH/$THEME_NAME/js/vendor/core/all.js\n.\n\n\n\n\n\n\nNow, we could load from our HTML only the jQuery UI library:\n\n\nscript src=\"js/vendor/core/jquery-ui.custom.js\"\n/script\n\n\n\n\nOr, along with all the libraries from the \ncore\n directory: \n\n\nscript src=\"js/vendor/core/all.js\"\n/script\n\n\n\n\nNote:\n you can see exactly what's included in \n$BUILD_PATH/$THEME_NAME/js/**/all.js\n files by looking at the \nconcat-*/concat.*.json\n and \nconcat.json\n files in the \n.build\n directory.\n\n\n\n\n\n\n\n\nSee also\n\n\n\n\nThe build process\n\n\nInclude paths\n\n\nLoading assets", 
            "title": "Bower"
        }, 
        {
            "location": "/code/bower/index.html#bower-overview", 
            "text": "Bower  is a package management tool optimized for the front-end. Bower works by fetching and installing packages from all over, taking care of hunting, finding, downloading, and saving the stuff you\u2019re looking for. Bower keeps track of these packages in a manifest file,  bower.json .", 
            "title": "Bower Overview"
        }, 
        {
            "location": "/code/bower/index.html#installing-packages", 
            "text": "You can install packages with:  bower install  package   With an optional  --save  to update the  bower.json  manifest file to include the new package.  bower install  package  --save  Bower installs packages to  bower_components/ .", 
            "title": "Installing packages"
        }, 
        {
            "location": "/code/bower/index.html#example", 
            "text": "To exemplify, let's say we want to include jQuery UI into our project -  and by the way, don't do this! jQuery UI is already included.    Install the latest jQuery UI via bower:  bower install jquery-ui --save    Define a copy task in  .build/copy-vendor/copy.core.json :  {\n    \"task\": \"copy-vendor-jquery-ui-scripts\",\n    \"cwd\": \"bower_components\",\n    \"src\": [\n        \"jquery-ui/ui/core.js\",\n        \"jquery-ui/ui/widget.js\",\n        \"jquery-ui/ui/mouse.js\",\n        \"jquery-ui/ui/position.js\",\n        \"jquery-ui/ui/draggable.js\",\n        \"jquery-ui/ui/droppable.js\",\n        \"jquery-ui/ui/resizable.js\",\n        \"jquery-ui/ui/selectable.js\",\n        \"jquery-ui/ui/sortable.js\"\n    ],\n    \"dest\": \"js/vendor/core/jquery-ui\",\n    \"flatten\": true\n}  The  json  file will be picked up automatically and executed when running pt. 5 of the  build process . The task will copy the files defined in the  src  array from  bower_components/jquery-ui/ui/*.js  to  $BUILD_PATH/$THEME_NAME/js/vendor/core/jquery-ui/*.js .   At this point we could load any of the files in HTML simply by:  script src=\"js/vendor/core/jquery-ui/core.js\" /script  script src=\"js/vendor/core/jquery-ui/widget.js\" /script  !-- etc ... --     Instead, we go further and concatenate the jQuery UI files from  $BUILD_PATH/$THEME_NAME/js/vendor/core/jquery-ui/*.js  into  $BUILD_PATH/$THEME_NAME/js/vendor/core/jquery-ui.custom.js  which is further concatenated into  $BUILD_PATH/$THEME_NAME/js/vendor/core/all.js  along with many other libraries in the  core  group.  For that, we use the  .build/concat-vendor/concat.core.json  config file:  [\n    {\n        \"build\": \"js/vendor/core/jquery-ui.custom.js\",\n        \"cwd\": \"$THEME_DIR/js/vendor/core/jquery-ui\",\n        \"files\": [\n            \"core.js\",\n            \"widget.js\",\n            \"mouse.js\",\n            \"position.js\",\n            \"draggable.js\",\n            \"droppable.js\",\n            \"resizable.js\",\n            \"selectable.js\",\n            \"sortable.js\"\n        ]\n    },\n    {\n        \"build\": \"js/vendor/core/all.js\",\n        \"cwd\": \"$THEME_DIR/js/vendor/core\",\n        \"files\": [\n            \"...\",\n            \"jquery-ui.custom.js\"\n        ]\n    }\n]  The  json  file will be picked up automatically and executed when running pt. 6 of the  build process  and it will first create  $BUILD_PATH/$THEME_NAME/js/vendor/core/jquery-ui.custom.js  and then include the resulting file's content in  $BUILD_PATH/$THEME_NAME/js/vendor/core/all.js .    Now, we could load from our HTML only the jQuery UI library:  script src=\"js/vendor/core/jquery-ui.custom.js\" /script   Or, along with all the libraries from the  core  directory:   script src=\"js/vendor/core/all.js\" /script   Note:  you can see exactly what's included in  $BUILD_PATH/$THEME_NAME/js/**/all.js  files by looking at the  concat-*/concat.*.json  and  concat.json  files in the  .build  directory.", 
            "title": "Example"
        }, 
        {
            "location": "/code/bower/index.html#see-also", 
            "text": "The build process  Include paths  Loading assets", 
            "title": "See also"
        }, 
        {
            "location": "/code/include-paths/index.html", 
            "text": "Include paths\n\n\nWe can easily include files in our application code, whether they are Less partials used to style out application, Swig templates used to compose HTML documents or JavaScript modules or arbitrary code, and we can do so anywhere from our application code, without having to use and keep track of nested, nasty relative paths.\n\n\nThe include paths\n:\n\n\n\n\nLess AND Browserify are using \nbower_components/\n and \nlib/\n as include paths.\n\n\nSwig is using the project root as the include path.\n\n\n\n\n\n\nLess\n\n\nFrom \nsrc/less/themes/$THEME_NAME/app.less\n (or any other \n*.less\n file from any location) we can do:\n\n\n@import \"sidebar/less/sidebar\";\n\n\n\nInstead of some relative path such as:\n\n\n@import \"../../../../lib/sidebar/less/sidebar\";\n\n\n\nThe import will first try to load the file from \nbower_components/sidebar/less/sidebar.less\n, but because the path doesn't exist, it will load \nlib/sidebar/less/sidebar.less\n which does exist.\n\n\nSimilarly, we can easily load Bootstrap from \nbower_components/bootstrap/less/bootstrap.less\n (or any other library) within any \n*.less\n file with:\n\n\n@import \"bootstrap/less/bootstrap\";\n\n\n\n\n\nSee more about \nusing Less\n.\n\n\n\n\n\n\nJavaScript\n\n\nVia Browserify, from \nsrc/js/themes/$THEME_NAME/app.js\n, we can do:\n\n\nrequire(\"sidebar/js/main\");\n\n\n\nInstead of some relative path such as:\n\n\nrequire(\"../../../../lib/sidebar/js/main\");\n\n\n\nBy using Browserify's \nrequire\n, we import \nlib/sidebar/js/main.js\n into \n$BUILD_PATH/$THEME_NAME/js/app/app.js\n at build time. This allows us to use partials and organise code in reusable packages and modules and then easily include it anywhere.\n\n\n\n\nSee more about \nusing Browserify\n.\n\n\n\n\n\n\nSwig\n\n\nThe include path for Swig templates is the project root directory, so we have access to both \nlib/\n and \nsrc/\n directories from any Swig template, always referencing files from the root directory.\n\n\nFrom any \n*.html\n file in \nsrc/html/themes/$THEME_NAME\n, we can include other HTML files:\n\n\n{% include \"lib/path/to/file.html\" %}\n{% include \"src/html/themes/$THEME_NAME/file.html\" %}\n\n\n\nOr, extend from a Swig layout:\n\n\n{% extends \"lib/path/to/layout.html\" %}\n{% extends \"src/html/themes/$THEME_NAME/layout.html\" %}\n\n\n\n\n\nSee more about \nusing Swig templates\n.\n\n\n\n\n\n\nSee also\n\n\n\n\nThe build process\n\n\nStructure\n\n\nManage assets\n\n\nLoading assets", 
            "title": "Include paths"
        }, 
        {
            "location": "/code/include-paths/index.html#include-paths", 
            "text": "We can easily include files in our application code, whether they are Less partials used to style out application, Swig templates used to compose HTML documents or JavaScript modules or arbitrary code, and we can do so anywhere from our application code, without having to use and keep track of nested, nasty relative paths.  The include paths :   Less AND Browserify are using  bower_components/  and  lib/  as include paths.  Swig is using the project root as the include path.", 
            "title": "Include paths"
        }, 
        {
            "location": "/code/include-paths/index.html#less", 
            "text": "From  src/less/themes/$THEME_NAME/app.less  (or any other  *.less  file from any location) we can do:  @import \"sidebar/less/sidebar\";  Instead of some relative path such as:  @import \"../../../../lib/sidebar/less/sidebar\";  The import will first try to load the file from  bower_components/sidebar/less/sidebar.less , but because the path doesn't exist, it will load  lib/sidebar/less/sidebar.less  which does exist.  Similarly, we can easily load Bootstrap from  bower_components/bootstrap/less/bootstrap.less  (or any other library) within any  *.less  file with:  @import \"bootstrap/less/bootstrap\";   See more about  using Less .", 
            "title": "Less"
        }, 
        {
            "location": "/code/include-paths/index.html#javascript", 
            "text": "Via Browserify, from  src/js/themes/$THEME_NAME/app.js , we can do:  require(\"sidebar/js/main\");  Instead of some relative path such as:  require(\"../../../../lib/sidebar/js/main\");  By using Browserify's  require , we import  lib/sidebar/js/main.js  into  $BUILD_PATH/$THEME_NAME/js/app/app.js  at build time. This allows us to use partials and organise code in reusable packages and modules and then easily include it anywhere.   See more about  using Browserify .", 
            "title": "JavaScript"
        }, 
        {
            "location": "/code/include-paths/index.html#swig", 
            "text": "The include path for Swig templates is the project root directory, so we have access to both  lib/  and  src/  directories from any Swig template, always referencing files from the root directory.  From any  *.html  file in  src/html/themes/$THEME_NAME , we can include other HTML files:  {% include \"lib/path/to/file.html\" %}\n{% include \"src/html/themes/$THEME_NAME/file.html\" %}  Or, extend from a Swig layout:  {% extends \"lib/path/to/layout.html\" %}\n{% extends \"src/html/themes/$THEME_NAME/layout.html\" %}   See more about  using Swig templates .", 
            "title": "Swig"
        }, 
        {
            "location": "/code/include-paths/index.html#see-also", 
            "text": "The build process  Structure  Manage assets  Loading assets", 
            "title": "See also"
        }, 
        {
            "location": "/code/less/index.html", 
            "text": "Less Overview\n\n\nLess\n is a CSS pre-processor\n, meaning that it extends the CSS language, adding features that allow variables, mixins, functions and many other techniques that allow you to make CSS that is more maintainable, themable and extendable.\n\n\nAs an extension to CSS, Less is not only backwards compatible with CSS, but the extra features it adds use existing CSS syntax. This makes learning Less a breeze, and if in doubt, lets you fall back to vanilla CSS.\n\n\nWe won't go into details for using the Less language itself, as there are way too many aspects to cover and also many great resources available on the web to quickly get you started.\n\n\n\n\nLanguage features\n\n\nJust a few of the awesome features\n Less is adding to vanilla CSS:\n\n\n\n\nvariables\n\n\nmixins\n\n\nnested rules\n\n\noperations\n\n\nfunctions\n\n\nnamespaces\n\n\n\n\nYou can see examples of all the language features on the \nLess official website\n and you can always refer to the complete \nLess function reference\n.\n\n\n\n\nCSS vendor prefixes\n\n\nCSS vendor prefixes or CSS browser prefixes are a way for browser makers to add support for new CSS features in a sort of testing and experimentation period. You've probably used vendor prefixes before in the form of \n-webkit-\n, \n-moz-\n, \n-ms-\n and \n-o-\n CSS properties.\n\n\nThe bad news\n\n\nAs you might already know, vendor prefixes are annoying and repetitive and most often you'll have to write the properties 2-5 times to get it working on all browsers. For example, if you want to add a CSS3 transition to your document, you would use the \ntransition\n property with the prefixes listed first:\n\n\n-webkit-transition: all 4s ease;\n-moz-transition: all 4s ease;\n-ms-transition: all 4s ease;\n-o-transition: all 4s ease;\ntransition: all 4s ease;\n\n\n\nThe good news\n\n\nWhen working with our templates, you can \nsimply forget about vendor prefixes\n. \nThe build process\n automatically adds vendor prefixes to the final CSS compiled from the Less source of your application for the last 4 versions of all major browsers, so you can just use the standard CSS3 properties, and the build process will make your CSS work on all browsers:\n\n\ntransition: all 4s ease;\n\n\n\n\n\nSee also\n\n\n\n\nThe build process\n\n\nStructure\n\n\nInclude paths", 
            "title": "Less"
        }, 
        {
            "location": "/code/less/index.html#less-overview", 
            "text": "Less  is a CSS pre-processor , meaning that it extends the CSS language, adding features that allow variables, mixins, functions and many other techniques that allow you to make CSS that is more maintainable, themable and extendable.  As an extension to CSS, Less is not only backwards compatible with CSS, but the extra features it adds use existing CSS syntax. This makes learning Less a breeze, and if in doubt, lets you fall back to vanilla CSS.  We won't go into details for using the Less language itself, as there are way too many aspects to cover and also many great resources available on the web to quickly get you started.   Language features  Just a few of the awesome features  Less is adding to vanilla CSS:   variables  mixins  nested rules  operations  functions  namespaces   You can see examples of all the language features on the  Less official website  and you can always refer to the complete  Less function reference .", 
            "title": "Less Overview"
        }, 
        {
            "location": "/code/less/index.html#css-vendor-prefixes", 
            "text": "CSS vendor prefixes or CSS browser prefixes are a way for browser makers to add support for new CSS features in a sort of testing and experimentation period. You've probably used vendor prefixes before in the form of  -webkit- ,  -moz- ,  -ms-  and  -o-  CSS properties.  The bad news  As you might already know, vendor prefixes are annoying and repetitive and most often you'll have to write the properties 2-5 times to get it working on all browsers. For example, if you want to add a CSS3 transition to your document, you would use the  transition  property with the prefixes listed first:  -webkit-transition: all 4s ease;\n-moz-transition: all 4s ease;\n-ms-transition: all 4s ease;\n-o-transition: all 4s ease;\ntransition: all 4s ease;  The good news  When working with our templates, you can  simply forget about vendor prefixes .  The build process  automatically adds vendor prefixes to the final CSS compiled from the Less source of your application for the last 4 versions of all major browsers, so you can just use the standard CSS3 properties, and the build process will make your CSS work on all browsers:  transition: all 4s ease;", 
            "title": "CSS vendor prefixes"
        }, 
        {
            "location": "/code/less/index.html#see-also", 
            "text": "The build process  Structure  Include paths", 
            "title": "See also"
        }, 
        {
            "location": "/code/swig/index.html", 
            "text": "Swig Overview\n\n\nSwig\n is one of the best template engines for node.js. Swig allows you to create pages, layouts, extend layouts from pages, include reusable partials in your templates, create macros (think of these as reusable snippets of functionality) and a lot more.\n\n\n\n\nIn a general way, a template engine is a web publishing tool that uses a template processor to combine web pages to form finished web pages. We can work with templates in various formats, apply any kind of filters and transformations to those templates and process the templates in valid HTML output. By using a template engine, we are still building static HTML pages, but in a productive, organised and efficient way.\n\n\n\n\nSwig Features\n\n\n\n\nIt's blazing fast.\n\n\nObject-Oriented template inheritance.\n\n\nApply filters and transformations to output in your templates.\n\n\nAutomatically escapes all output for safe HTML rendering.\n\n\nLots of iteration and conditionals supported.\n\n\nRobust without the bloat.\n\n\nExtendable and customizable.\n\n\nGreat documentation\n\n\n\n\n\n\nBasic usage\n\n\nLayouts\n\n\nConsider the following Swig template that we could place in \nsrc/html/themes/$THEME_NAME/_layout.html\n:\n\n\n!DOCTYPE html\n\n\nhtml lang=\"en\"\n\n\nhead\n\n    \nmeta charset=\"utf-8\"\n\n    \nmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\n\n    \nmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\n\n    \ntitle\n{{ site.name }}\n/title\n\n\n/head\n\n\nbody\n\n\n    \n!-- Declare a template block in which you can inject\n         content from a page that is extending this layout --\n\n\n    {% block content %}{% endblock %}\n\n\n/body\n\n\n/html\n\n\n\n\nPages\n\n\nConsider the following simple example of a Swig template that we could place in \nsrc/html/themes/$THEME_NAME/page.html\n and that inherits the \n_layout.html\n template above:\n\n\n{% extends 'src/html/themes/$THEME_NAME/_layout.html' %}\n\n{% block content %}\n    \np\nThis is just an awesome page.\n/p\n\n{% endblock %}\n\n\n\nPartials\n\n\nsrc/html/themes/$THEME_NAME/_partial.html\n:\n\n\np\nI like {{ food }} and {{ drink }}.\n/p\n\n\n\n\nsrc/html/themes/$THEME_NAME/page.html\n:\n\n\n{% extends 'src/html/themes/$THEME_NAME/_layout.html' %}\n\n{% block content %}\n    {% set my_obj = { food: 'tacos', drink: 'horchata' } %}\n    {% include \"./_partial.html\" with my_obj %}\n{% endblock %}\n\n\n\nWhen compiled to HTML, \npage.html\n will output:\n\n\n// =\n I like tacos and horchata.", 
            "title": "Swig"
        }, 
        {
            "location": "/code/swig/index.html#swig-overview", 
            "text": "Swig  is one of the best template engines for node.js. Swig allows you to create pages, layouts, extend layouts from pages, include reusable partials in your templates, create macros (think of these as reusable snippets of functionality) and a lot more.   In a general way, a template engine is a web publishing tool that uses a template processor to combine web pages to form finished web pages. We can work with templates in various formats, apply any kind of filters and transformations to those templates and process the templates in valid HTML output. By using a template engine, we are still building static HTML pages, but in a productive, organised and efficient way.   Swig Features   It's blazing fast.  Object-Oriented template inheritance.  Apply filters and transformations to output in your templates.  Automatically escapes all output for safe HTML rendering.  Lots of iteration and conditionals supported.  Robust without the bloat.  Extendable and customizable.  Great documentation", 
            "title": "Swig Overview"
        }, 
        {
            "location": "/code/swig/index.html#basic-usage", 
            "text": "Layouts  Consider the following Swig template that we could place in  src/html/themes/$THEME_NAME/_layout.html :  !DOCTYPE html  html lang=\"en\"  head \n     meta charset=\"utf-8\" \n     meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" \n     meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" \n     title {{ site.name }} /title  /head  body \n\n     !-- Declare a template block in which you can inject\n         content from a page that is extending this layout -- \n\n    {% block content %}{% endblock %} /body  /html   Pages  Consider the following simple example of a Swig template that we could place in  src/html/themes/$THEME_NAME/page.html  and that inherits the  _layout.html  template above:  {% extends 'src/html/themes/$THEME_NAME/_layout.html' %}\n\n{% block content %}\n     p This is just an awesome page. /p \n{% endblock %}  Partials  src/html/themes/$THEME_NAME/_partial.html :  p I like {{ food }} and {{ drink }}. /p   src/html/themes/$THEME_NAME/page.html :  {% extends 'src/html/themes/$THEME_NAME/_layout.html' %}\n\n{% block content %}\n    {% set my_obj = { food: 'tacos', drink: 'horchata' } %}\n    {% include \"./_partial.html\" with my_obj %}\n{% endblock %}  When compiled to HTML,  page.html  will output:  // =  I like tacos and horchata.", 
            "title": "Basic usage"
        }, 
        {
            "location": "/code/browserify/index.html", 
            "text": "Browserify Overview\n\n\nBrowserify\n is a tool to build modular applications in JavaScript and lets you package and organize scripts in a modern and reusable fashion.\n\n\n\n\nHow it works\n\n\nBrowserify starts at the entry point files that you give it and searches for any \nrequire()\n calls it finds. For every \nrequire()\n call with a string in it, browserify resolves those module strings to file paths and then searches those file paths for \nrequire()\n calls recursively until the entire dependency graph is visited. \n\n\nEach file is concatenated into a single javascript file with a minimal \nrequire()\n definition that maps the statically-resolved names to internal IDs. This means that the bundle you generate is completely self-contained and has everything your application needs to work with a pretty negligible overhead.\n\n\n\n\nBasic usage\n\n\nConsider the file \nsrc/js/themes/$THEME_NAME/app.js\n:\n\n\nrequire('./_self_executing');\n\n\n\nAnd \nsrc/js/themes/$THEME_NAME/_self_executing.js\n:\n\n\n(function(){\n    'use strict';\n\n    console.log('My custom self executing function was loaded');\n\n})();\n\n\n\nThis way, you can wrap any arbitrary code into a self executing anonymous function and \nrequire\n it from anywhere.\n\n\nModules\n\n\nConsider the file \nsrc/js/themes/$THEME_NAME/app.js\n:\n\n\n(function($){\n    'use strict';\n\n    var my_module = require('./_module');\n\n    var app = new my_module({\n        option: 'value',\n        some: 'other'\n    });\n\n    app.init();\n\n})(jQuery);\n\n\n\nAnd \nsrc/js/themes/$THEME_NAME/_module.js\n:\n\n\nvar my_module = function(options){\n    this.options = options || {};\n};\n\nmy_module.prototype.init = function(){\n    console.log('My application was initialized!');\n    console.log(this.options);\n};\n\nmodule.exports = my_module;\n\n\n\nBut you can export anything, for example a simple function:\n\n\nsrc/js/themes/$THEME_NAME/_foo.js\n:\n\n\nmodule.exports = function (n) {\n    return n * 111\n};\n\n\n\nAnd in \nsrc/js/themes/$THEME_NAME/app.js\n:\n\n\nvar foo = require('./_foo.js');\nconsole.log(foo(5));\n\n\n\nThe output will be:\n\n\n555\n\n\n\nBut you can also export an integer directly:\n\n\nmodule.exports = 555\n\n\n\nOr an object:\n\n\nvar config = {\n    some: 'value',\n    another: 'option'\n};\n\nmodule.exports = config;", 
            "title": "Browserify"
        }, 
        {
            "location": "/code/browserify/index.html#browserify-overview", 
            "text": "Browserify  is a tool to build modular applications in JavaScript and lets you package and organize scripts in a modern and reusable fashion.", 
            "title": "Browserify Overview"
        }, 
        {
            "location": "/code/browserify/index.html#how-it-works", 
            "text": "Browserify starts at the entry point files that you give it and searches for any  require()  calls it finds. For every  require()  call with a string in it, browserify resolves those module strings to file paths and then searches those file paths for  require()  calls recursively until the entire dependency graph is visited.   Each file is concatenated into a single javascript file with a minimal  require()  definition that maps the statically-resolved names to internal IDs. This means that the bundle you generate is completely self-contained and has everything your application needs to work with a pretty negligible overhead.", 
            "title": "How it works"
        }, 
        {
            "location": "/code/browserify/index.html#basic-usage", 
            "text": "Consider the file  src/js/themes/$THEME_NAME/app.js :  require('./_self_executing');  And  src/js/themes/$THEME_NAME/_self_executing.js :  (function(){\n    'use strict';\n\n    console.log('My custom self executing function was loaded');\n\n})();  This way, you can wrap any arbitrary code into a self executing anonymous function and  require  it from anywhere.  Modules  Consider the file  src/js/themes/$THEME_NAME/app.js :  (function($){\n    'use strict';\n\n    var my_module = require('./_module');\n\n    var app = new my_module({\n        option: 'value',\n        some: 'other'\n    });\n\n    app.init();\n\n})(jQuery);  And  src/js/themes/$THEME_NAME/_module.js :  var my_module = function(options){\n    this.options = options || {};\n};\n\nmy_module.prototype.init = function(){\n    console.log('My application was initialized!');\n    console.log(this.options);\n};\n\nmodule.exports = my_module;  But you can export anything, for example a simple function:  src/js/themes/$THEME_NAME/_foo.js :  module.exports = function (n) {\n    return n * 111\n};  And in  src/js/themes/$THEME_NAME/app.js :  var foo = require('./_foo.js');\nconsole.log(foo(5));  The output will be:  555  But you can also export an integer directly:  module.exports = 555  Or an object:  var config = {\n    some: 'value',\n    another: 'option'\n};\n\nmodule.exports = config;", 
            "title": "Basic usage"
        }, 
        {
            "location": "/code/rtl/index.html", 
            "text": "Right-to-Left\n\n\nThis document describes how to add RTL or Right-to-Left script support to your application, where the writing starts from the right of the page and continues to the left, for languages like Arabic, Hebrew, Syriac, Samaritan or Thaana.\n\n\n\n\nBootstrap RTL\n\n\nBecause the template is largely based on \nBootstrap\n, we'll need to add RTL support for the Bootstrap framework first.\n\n\nInstallation\n\n\nYou can check if it's already installed by simply looking for the \nbower_components/bootstrap-rtl\n directory.\n\n\nUsing \nBower\n:\n\n\nbower install bootstrap-rtl --save\n\n\n\nLoading\n\n\nUpdate \nsrc/less/themes/$THEME_NAME/vendor/bootstrap.less\n, to include after the main bootstrap import:\n\n\n// Load Bootstrap\n@import \"../../../vendor/bootstrap/bootstrap\";\n\n// Load Bootstrap RTL\n@import \"../../../vendor/bootstrap-rtl/bootstrap-rtl\";\n\n\n\nNow, when running \nthe build process\n, \n$BUILD_PATH/$THEME_NAME/css/vendor/bootstrap.css\n will include the regular Bootstrap, plus the newly added Bootstrap RTL package.\n\n\n\n\nBasic usage\n\n\nflip\n\n\nThe \nbootstrap-rtl\n package pretty much handles automatically most of the elements provided by the Bootstrap framework and additionally includes a new CSS class \nflip\n which you can add on all HTML elements using the following classes:\n\n\n\n\npull-left\n\n\npull-right\n\n\nmedia-left\n\n\nmedia-right\n\n\ntext-left\n\n\ntext-right\n\n\nnavbar-left\n\n\nnavbar-right\n\n\n\n\nExample\n:\n\n\ndiv class=\npull-left flip\n\n    ...\n\n/div\n\n\n\n\n\n\n\nSwig templates\n\n\nSome of the \nSwig templates\n included with our libraries, already provide support for RTL and can automatically add the \nflip\n class when required. To enable this, update \nsrc/html/themes/$THEME_NAME/swig.json\n or create the file if it doesn't exist already, with the following content:\n\n\n{\n    \"rtl\": true\n}\n\n\n\nNow, within any Swig template that ends up being used in \nsrc/html/themes/$THEME_NAME/**/*.html\n, you can conditionally apply the \nflip\n class on any element:\n\n\ndiv class=\npull-left{% if rtl %} flip{% endif %}\n\n    ...\n\n/div\n\n\n\n\n\n\n\nComponents\n\n\nMost of our proprietary assets include RTL support.\n\n\n\n\nEssential\n\n\nNavbar\n\n\nSidebar", 
            "title": "Right-to-Left"
        }, 
        {
            "location": "/code/rtl/index.html#right-to-left", 
            "text": "This document describes how to add RTL or Right-to-Left script support to your application, where the writing starts from the right of the page and continues to the left, for languages like Arabic, Hebrew, Syriac, Samaritan or Thaana.", 
            "title": "Right-to-Left"
        }, 
        {
            "location": "/code/rtl/index.html#bootstrap-rtl", 
            "text": "Because the template is largely based on  Bootstrap , we'll need to add RTL support for the Bootstrap framework first.  Installation  You can check if it's already installed by simply looking for the  bower_components/bootstrap-rtl  directory.  Using  Bower :  bower install bootstrap-rtl --save  Loading  Update  src/less/themes/$THEME_NAME/vendor/bootstrap.less , to include after the main bootstrap import:  // Load Bootstrap\n@import \"../../../vendor/bootstrap/bootstrap\";\n\n// Load Bootstrap RTL\n@import \"../../../vendor/bootstrap-rtl/bootstrap-rtl\";  Now, when running  the build process ,  $BUILD_PATH/$THEME_NAME/css/vendor/bootstrap.css  will include the regular Bootstrap, plus the newly added Bootstrap RTL package.", 
            "title": "Bootstrap RTL"
        }, 
        {
            "location": "/code/rtl/index.html#basic-usage", 
            "text": "flip  The  bootstrap-rtl  package pretty much handles automatically most of the elements provided by the Bootstrap framework and additionally includes a new CSS class  flip  which you can add on all HTML elements using the following classes:   pull-left  pull-right  media-left  media-right  text-left  text-right  navbar-left  navbar-right   Example :  div class= pull-left flip \n    ... /div", 
            "title": "Basic usage"
        }, 
        {
            "location": "/code/rtl/index.html#swig-templates", 
            "text": "Some of the  Swig templates  included with our libraries, already provide support for RTL and can automatically add the  flip  class when required. To enable this, update  src/html/themes/$THEME_NAME/swig.json  or create the file if it doesn't exist already, with the following content:  {\n    \"rtl\": true\n}  Now, within any Swig template that ends up being used in  src/html/themes/$THEME_NAME/**/*.html , you can conditionally apply the  flip  class on any element:  div class= pull-left{% if rtl %} flip{% endif %} \n    ... /div", 
            "title": "Swig templates"
        }, 
        {
            "location": "/code/rtl/index.html#components", 
            "text": "Most of our proprietary assets include RTL support.   Essential  Navbar  Sidebar", 
            "title": "Components"
        }, 
        {
            "location": "/code/angular/index.html", 
            "text": "AngularJS\n\n\nAngularJS\n is a toolset for building the framework most suited to your application development. It is fully extensible and works well with other libraries. Every feature can be modified or replaced to suit your unique development workflow and feature needs.\n\n\nThis document aims to provide\n:\n\n\n\n\na guide for customizing an existing theme from our templates into an AngularJS SPA or \nSingle Page Application\n.\n\n\na basic understanding for the AngularJS setup we are using, should we provide AngularJS versions of our themes.\n\n\n\n\n\n\nRequirements\n\n\nPackages\n\n\nWe'll create a basic AngularJS setup, using a couple of libraries:\n\n\n\n\nangular\n\n\nangular-resource\n\n\nangular-ui-router\n\n\nangular-sanitize\n\n\nangular-ui-utils\n\n\nangular-touch\n\n\n\n\nInstallation\n\n\nYou can check if the libraries are already installed by simply looking for the following directories:\n\n\n\n\nbower_components/angular\n\n\nbower_components/angular-resource\n\n\nbower_components/angular-ui-router\n\n\nbower_components/angular-sanitize\n\n\nbower_components/angular-ui-utils\n\n\nbower_components/angular-touch\n\n\n\n\nInstall using \nBower\n:\n\n\nbower install --save \\\n    angular \\\n    angular-resource \\\n    angular-ui-router \\\n    angular-sanitize \\\n    angular-ui-utils \\\n    angular-touch\n\n\n\n\nPreparing the assets\n\n\nBefore loading the new libraries into our HTML pages, we'll have to copy the libraries into our \ntheme's build path\n when running \nthe build process\n.\n\n\nCreate \n.build/copy-vendor/copy.angular.json\n with the following content:\n\n\n{\n    \ntask\n: \ncopy-vendor-angular-scripts\n,\n    \ncwd\n: \nbower_components\n,\n    \nsrc\n: [\n        \nangular/angular.js\n,\n        \nangular-resource/angular-resource.js\n,\n        \nangular-sanitize/angular-sanitize.js\n,\n        \nangular-touch/angular-touch.js\n,\n        \nangular-ui-router/release/angular-ui-router.js\n,\n        \nangular-ui-utils/ui-utils.js\n\n    ],\n    \ndest\n: \njs/vendor/angular\n,\n    \nflatten\n: true,\n    \nthemes\n: [\n$THEME_NAME\n]\n}\n\n\n\n\nDon't forget to replace \n$THEME_NAME\n with a valid theme name. This will ensure the task will be executed only when running the build process for a specific theme.\n\n\nThe json file will be picked up automatically and executed when running pt. 5 of \nthe build process\n. The task will copy the files defined in the \nsrc\n array from \nbower_components\n into \n$BUILD_PATH/$THEME_NAME/js/vendor/angular/*.js\n. \n\n\nAt this point we could manually load any of the files in HTML simply by:\n\n\nscript src=\njs/vendor/angular/angular.js\n/script\n\n\nscript src=\njs/vendor/angular/angular-resource.js\n/script\n\n\n!-- etc ... --\n\n\n\n\n\nInstead, we'll create a concatenated file that will include all of the AngularJS libraries. The concatenated file will also be created when running \nthe build process\n.\n\n\nCreate \n.build/concat-vendor/concat.angular.json\n with the following content:\n\n\n{\n    \nbuild\n: \njs/vendor/angular/all.js\n,\n    \ncwd\n: \n$THEME_DIR/js/vendor/angular\n,\n    \nfiles\n: [\n        \nangular.js\n,\n        \nangular-resource.js\n,\n        \nangular-sanitize.js\n,\n        \nangular-touch.js\n,\n        \nangular-ui-router.js\n,\n        \nui-utils.js\n\n    ],\n    \nthemes\n: [\n$THEME_NAME\n]\n}\n\n\n\n\nAlso, don't forget to replace \n$THEME_NAME\n with a valid theme name. This will ensure the task will be executed only when running the build process for a specific theme. Note that \n$THEME_DIR\n is a special string that will be replaced automatically by the build process with the full build path to your current theme directory.\n\n\nThe task will create \n$BUILD_PATH/$THEME_NAME/js/vendor/angular/all.js\n with all the libraries included.\n\n\nAt this point, after running the build process, we could manually load all the AngularJS libraries in HTML simply with one line:\n\n\nscript src=\njs/vendor/angular/all.js\n/script\n\n\n\n\n\nLoading the AngularJS libraries into our HTML\n\n\nFor this setup, we'll be using \nSwig templates\n to compose HTML documents, so we'll use the \nsrc/swig.json\n configuration file to automatically load our new libraries into the HTML of our application when running the build process. For more details, see \nLoading assets\n.\n\n\nUpdate \nsrc/swig.json\n to include:\n\n\n{\n    \njs_vendor\n: [\n        \n...\n,\n        {\n            \nname\n: \nvendor/angular/all\n,\n            \nthemes\n: [\n$THEME_NAME\n]\n        }\n    ]\n}\n\n\n\n\nThis will instruct Swig when running \nthe build process\n for \n$THEME_NAME\n to load the \n$BUILD_PATH/$THEME_NAME/js/vendor/angular/all.js\n script into the footer of our HTML pages.\n\n\n\n\nBasic application setup\n\n\nMain application module\n\n\nsrc/js/themes/$THEME_NAME/angular/app.js\n:\n\n\nWe declare the \napp\n module as the main application module, load other dependent modules and write a basic configuration:\n\n\n(function(){\n    'use strict';\n\n    angular.module('app', [\n        'ngResource',\n        'ngSanitize',\n        'ngTouch',\n        'ui.router',\n        'ui.utils',\n        'ui.jq'\n    ]);\n\n    var app = angular.module('app')\n        .config(\n        [ '$controllerProvider', '$compileProvider', '$filterProvider', '$provide', '$interpolateProvider',\n            function ($controllerProvider, $compileProvider, $filterProvider, $provide, $interpolateProvider) {\n                app.controller = $controllerProvider.register;\n                app.directive = $compileProvider.directive;\n                app.filter = $filterProvider.register;\n                app.factory = $provide.factory;\n                app.service = $provide.service;\n                app.constant = $provide.constant;\n                app.value = $provide.value;\n\n                $interpolateProvider.startSymbol('::');\n                $interpolateProvider.endSymbol('::');\n            }\n        ]);\n\n})();\n\n\n\n\nNote the \n$interpolateProvider\n configuration entries are customizing the symbol used for the interpolation markup from the default \n{{ variable }}\n to \n:: variable ::\n in order to prevent conflicts with \nSwig\n.\n\n\nRouter\n\n\nsrc/js/themes/$THEME_NAME/angular/config.router.js\n:\n\n\n(function(){\n    'use strict';\n\n    angular.module('app')\n        .run([ '$rootScope', '$state', '$stateParams',\n            function ($rootScope, $state, $stateParams) {\n                $rootScope.$state = $state;\n                $rootScope.$stateParams = $stateParams;\n            }\n        ])\n        .config(\n        [ '$stateProvider', '$urlRouterProvider',\n            function ($stateProvider, $urlRouterProvider) {\n\n                    // We'll add our routing here later\n\n            }\n        ]\n    );\n\n})();\n\n\n\n\nMain application controller\n\n\nsrc/js/themes/$THEME_NAME/angular/main.js\n:\n\n\nWe'll use \nAppCtrl\n to dynamically change \n$scope.app.settings.htmlClass\n from the router, when we change between pages with different layouts.\n\n\n(function () {\n    \nuse strict\n;\n\n    angular.module('app')\n        .controller('AppCtrl', [ '$scope', '$state',\n            function ($scope, $state) {\n\n                $scope.app = {\n                    settings: {\n                        htmlClass: ''\n                    }\n                };\n\n                $scope.$state = $state;\n\n            } ]);\n\n})();\n\n\n\n\nMain application JavaScript bundle\n\n\nNow that we've declared the main \napp\n module, the router and the main \nAppCtrl\n controller, let's load all of them into our main application JavaScript bundle, by using \nBrowserify\n.\n\n\nFrom \nsrc/js/themes/$THEME_NAME/main.js\n:\n\n\n// Angular App\nrequire('./angular/app.js');\nrequire('./angular/config.router.js');\nrequire('./angular/main.js');\n\n\n\n\nFrom \nsrc/js/themes/$THEME_NAME/app.js\n:\n\n\nrequire('./main');\n\n\n\n\nNote that \nwe could\n load all the files directly from \napp.js\n but instead we separate the AngularJS parts of the application into a new \nmain.js\n file which we'll then load from \napp.js\n.\n\n\nNow, after running \nthe build process\n, our custom JavaScript will be included in the \ntheme's build path\n into our main application JavaScript bundle: \n$BUILD_PATH/$THEME_NAME/js/app/app.js\n.\n\n\n\n\nMain application layout\n\n\nSince we're essentially building a SPA or \nSingle Page Application\n, we'll need a main HTML document which will load our application assets and the actual pages of the application via the router.\n\n\nConsider the file \nsrc/html/themes/$THEME_NAME/index.html\n:\n\n\n!DOCTYPE html\n\n\nhtml lang=\nen\n data-ng-app=\napp\n data-ng-controller=\nAppCtrl\n class=\nng-class:app.settings.htmlClass\n\n{% include \nlib/layout/html/_head.html\n %}\n\nbody\n\n\n\ndiv data-ui-view class=\nui-view-main\n/div\n\n\n{% include \nlib/layout/html/_footer_scripts.html\n %}\n\n\n\n\nThis page will load our application assets and initialize the \napp\n module and the \nAppCtrl\n controller.\n\n\n\n\nBasic layouts\n\n\nSwig templates\n\n\nConsider a basic layout in \nsrc/html/themes/$THEME_NAME/basic/_layout.html\n:\n\n\ndiv class=\ncontainer-fluid\n\n\n    \n!-- The page content --\n\n    \n!-- Define the content block --\n\n    \n!-- This will be used by pages that extend this layout to inject their content here --\n\n    {% block content %}{% endblock %}\n\n    {% include \nlib/layout/html/_footer_copyright.html\n %}\n\n\n/div\n\n\n\n\n\nA simple page in \nsrc/html/themes/$THEME_NAME/basic/simple-page.html\n:\n\n\n{% extends \nsrc/html/themes/$THEME_NAME/basic/_layout.html\n %}\n\n{% block content %}\n\n    \np\nThis is a simple page.\n/p\n\n\n{% endblock %}\n\n\n\n\nAnd another simple page in \nsrc/html/themes/$THEME_NAME/basic/another-simple-page.html\n:\n\n\n{% extends \nsrc/html/themes/$THEME_NAME/basic/_layout.html\n %}\n\n{% block content %}\n\n    \np\nThis is another simple page.\n/p\n\n\n{% endblock %}\n\n\n\n\nThe router\n\n\nUpdate the router file that we've created earlier in \nsrc/js/themes/$THEME_NAME/angular/config.router.js\n:\n\n\nfunction ($stateProvider, $urlRouterProvider) {\n\n    // Configure a default location for the router\n    $urlRouterProvider\n        .otherwise('/basic/simple-page');\n\n    // Add a 'basic' state group\n    $stateProvider\n        .state('basic', {\n            abstract: true,\n            url: '/basic',\n            template: '\ndiv ui-view class=\nui-view-main\n /\n'\n        });\n\n    // Add pages in the 'basic' state\n    $stateProvider\n        .state('basic.simple-page', {\n            url: '/simple-page',\n            templateUrl: 'basic/simple-page.html',\n            controller: ['$scope', function($scope){\n                // here we could update $scope.app.settings.htmlClass\n                // but for this basic example we won't need custom CSS classes applied to the 'html' tag;\n                // set it to an empty string to reset\n                $scope.app.settings.htmlClass = '';\n            }]\n        })\n        .state('basic.simple-page', {\n            url: '/another-simple-page',\n            templateUrl: 'basic/another-simple-page.html',\n            controller: ['$scope', function($scope){\n                // here we could update $scope.app.settings.htmlClass\n                // but for this basic example we won't need custom CSS classes applied to the 'html' tag;\n                // set it to an empty string to reset\n                $scope.app.settings.htmlClass = '';\n            }]\n        });\n\n}\n\n\n\n\nBuild and preview\n\n\nNow, after running \nthe build process\n, we should see the compiled HTML files in the \ntheme's build path\n:\n\n\n\n\n$BUILD_PATH/$THEME_NAME/index.html\n\n\n$BUILD_PATH/$THEME_NAME/basic/simple-page.html\n\n\n$BUILD_PATH/$THEME_NAME/basic/another-simple-page.html\n\n\n\n\nAnd, after running \nthe watchers\n we should be able to access the application from the following URLs:\n\n\n\n\n/\n\n\n/#/basic/simple-page\n\n\n/#/basic/another-simple-page\n\n\n\n\n\n\nComplex layouts\n\n\nNext, we're going to recreate the example from \nSidebar transitions\n and also use some additional elements in the context of our AngularJS SPA \nSingle Page Application\n.\n\n\nPrerequisites\n\n\nMake sure you're loading the following packages in your theme:\n\n\n\n\nEssential\n\n\nLayout\n\n\nSidebar\n\n\nNavbar\n\n\n\n\nSwig templates\n\n\nConsider the slightly more complex layout in \nsrc/html/themes/$THEME_NAME/advanced/_layout.html\n:\n\n\n!-- Include a simple navbar --\n\n{% include \nsrc/html/themes/$THEME_NAME/advanced/_navbar.html\n %}\n\n\n!-- Wrapper required for sidebar transitions --\n\n\ndiv class=\nst-container\n\n\n    \n!-- sidebars with the following effects MUST go OUTSIDE of the .st-pusher wrapper: --\n\n    \n!-- st-effect-1, st-effect-2, st-effect-4, st-effect-5, st-effect-9, st-effect-10, st-effect-11, st-effect-12, st-effect-13 --\n\n\n    \n!-- For this example, we'll be using the st-effect-1 transition --\n\n    \n!-- Include a simple sidebar --\n\n    {% include \nsrc/html/themes/$THEME_NAME/advanced/_sidebar.html\n { sidebarOptions: \nleft sidebar-size-2 sidebar-offset-0 sidebar-skin-dark sidebar-visible-desktop sidebar-visible-mobile\n, sidebarData: \nid=sidebar-menu data-type=collapse\n } %}\n\n    \n!-- content push wrapper --\n\n    \ndiv class=\nst-pusher\n id=\ncontent\n\n\n        \n!-- sidebars with the following effects MUST go INSIDE the .st-pusher wrapper: --\n\n        \n!-- st-effect-3, st-effect-6, st-effect-7, st-effect-8, st-effect-14 --\n\n\n        \n!-- this is the wrapper for the content --\n\n        \ndiv class=\nst-content\n\n\n            \n!-- extra div for emulating position:fixed of the menu --\n\n            \ndiv class=\nst-content-inner\n\n\n                \n!-- The page content --\n\n                \ndiv class=\ncontainer-fluid\n\n\n                    \n!-- Define the content block --\n\n                    \n!-- This will be used by pages that extend this layout to inject their content --\n\n                    {% block content %}{% endblock %}\n\n                \n/div\n\n                \n!-- // END .container-fluid --\n\n\n            \n/div\n\n            \n!-- // END .st-content-inner --\n\n\n        \n/div\n\n        \n!-- // END .st-content --\n\n\n    \n/div\n\n    \n!-- // END .st-pusher --\n\n\n    \n!-- Include the footer copyright --\n\n    {% include \nlib/layout/html/_footer_copyright.html\n %}\n\n\n/div\n\n\n!-- // END .st-container --\n\n\n\n\n\nA sidebar element in \nsrc/html/themes/$THEME_NAME/advanced/_sidebar.html\n:\n\n\ndiv class=\nsidebar{% if sidebarOptions %} {{ sidebarOptions }}{% endif %}\n{% if sidebarData %} {{ sidebarData }}{% endif %}\n\n    \ndiv data-scrollable\n\n        \nul class=\nsidebar-menu\n\n            \nli class=\nactive\na href=\n#\nspan\nSimple page\n/span\n/a\n/li\n\n            \nli\na href=\n#\nspan\nAnother simple page\n/span\n/a\n/li\n\n            \nli\na href=\n#\nspan\nSidebar transitions\n/span\n/a\n/li\n\n        \n/ul\n\n    \n/div\n\n\n/div\n\n\n\n\n\nA navbar element in \nsrc/html/themes/$THEME_NAME/advanced/_navbar.html\n:\n\n\nnav class=\nnavbar navbar-default navbar-fixed-top\n\n    \ndiv class=\ncontainer\n\n\n        \n!-- Group brand and toggle for better mobile display --\n\n        \ndiv class=\nnavbar-header\n\n            \na class=\nnavbar-brand\n href=\n#\nBrand\n/a\n\n            \nbutton type=\nbutton\n class=\nnavbar-toggle\n data-toggle=\ncollapse\n data-target=\n#collapse-example\n\n                \nspan class=\nsr-only\nToggle navigation\n/span\n\n                \nspan class=\nicon-bar\n/span\n\n                \nspan class=\nicon-bar\n/span\n\n                \nspan class=\nicon-bar\n/span\n\n            \n/button\n\n        \n/div\n\n\n        \n!-- Group nav links, menus, forms, and other content for toggling --\n\n        \ndiv class=\nnavbar-collapse collapse\n id=\ncollapse-example\n\n            \nul class=\nnav navbar-nav\n\n\n                \n!-- simple dropdown --\n\n                \nli class=\ndropdown active\n\n                    \na href=\n#\n class=\ndropdown-toggle\n data-toggle=\ndropdown\n\n                        Pages \nspan class=\ncaret\n/span\n\n                    \n/a\n\n                    \nul class=\ndropdown-menu\n role=\nmenu\n\n                        \nli class=\ndropdown-header\nBasic\n/li\n\n                        \nli class=\nactive\na href=\n#\nSimple page\n/a\n/li\n\n                        \nli\na href=\n#\nAnother simple page\n/a\n/li\n\n                        \nli class=\ndropdown-header\nAdvanced\n/li\n\n                        \nli\na href=\n#\nSidebar transitions\n/a\n/li\n\n                    \n/ul\n\n                \n/li\n\n                \n!-- // END simple dropdown --\n\n\n            \n/ul\n\n        \n/div\n\n\n    \n/div\n\n\n/nav\n\n\n\n\n\nAnd a page in \nsrc/html/themes/$THEME_NAME/advanced/page-sidebar-transitions.html\n:\n\n\n{% extends \nsrc/html/themes/$THEME_NAME/advanced/_layout.html\n %}\n\n{% block content %}\n    \np\nThis is a simple page.\n/p\n\n    \np\n\n        \na href=\n#sidebar-menu\n data-toggle=\nsidebar-menu\n data-effect=\nst-effect-1\n class=\nbtn btn-default\nSlide in on top\n/a\n\n    \n/p\n\n{% endblock %}\n\n\n\n\nAdditional styling required\n\n\nWhen using layouts with \nSidebar transitions\n add the following extra styling block to \nsrc/less/themes/$THEME_NAME/main.less\n:\n\n\n.st-layout .ui-view-main {\n    height: 100%;\n}\n\n\n\n\nThe router\n\n\nUpdate the router file in \nsrc/js/themes/$THEME_NAME/angular/config.router.js\n:\n\n\nfunction ($stateProvider, $urlRouterProvider) {\n\n    // ... code from previous example\n\n    // Add an 'advanced' state group\n    $stateProvider\n        .state('advanced', {\n            abstract: true,\n            url: '/advanced',\n            template: '\ndiv ui-view class=\nui-view-main\n /\n'\n        });\n\n    // Add pages in the 'advanced' state\n    $stateProvider\n        .state('advanced.page-sidebar-transitions', {\n            url: '/page-sidebar-transitions',\n            templateUrl: 'advanced/page-sidebar-transitions.html',\n            controller: ['$scope', function($scope){\n                // here we can update $scope.app.settings.htmlClass\n                // with the required CSS classes for the 'html' tag\n                $scope.app.settings.htmlClass = 'ls-top-navbar ls-bottom-footer show-sidebar sidebar-l2 st-layout';\n            }]\n        });\n\n}\n\n\n\n\nBuild and preview\n\n\nNow, after running \nthe build process\n, we should see the compiled HTML files in the \ntheme's build path\n, along with the files from the previous example:\n\n\n\n\n$BUILD_PATH/$THEME_NAME/index.html\n\n\n$BUILD_PATH/$THEME_NAME/basic/simple-page.html\n\n\n$BUILD_PATH/$THEME_NAME/basic/another-simple-page.html\n\n\n$BUILD_PATH/$THEME_NAME/advanced/page-sidebar-transitions.html\n\n\n\n\nAnd, after running \nthe watchers\n we should be able to access the application from the following URLs:\n\n\n\n\n/\n\n\n/#/basic/simple-page\n\n\n/#/basic/another-simple-page\n\n\n/#/advanced/page-sidebar-transitions\n\n\n\n\n\n\nNavigation directives\n\n\nYou've probably noticed in the previous example from \nComplex layouts\n that we've created a sidebar and a navbar but none of the links are actually working. Since the router is responsible for changing the \nstate\n or the \npage\n, any links must interact directly with the router.\n\n\nFor that we can use the \nui-sref\n directive from \nui.router.state\n. For more details, you can \nsee the official documentation\n.\n\n\nSidebar\n\n\nLet's update the sidebar from the previous example in \nsrc/html/themes/$THEME_NAME/advanced/_sidebar.html\n to the following:\n\n\ndiv class=\nsidebar{% if sidebarOptions %} {{ sidebarOptions }}{% endif %}\n{% if sidebarData %} {{ sidebarData }}{% endif %}\n\n    \ndiv data-scrollable\n\n        \nul class=\nsidebar-menu\n\n            \nli ui-sref-active=\nactive\n\n                \na ui-sref=\nbasic.simple-page\n\n                    \nspan\nSimple page\n/span\n\n                \n/a\n\n            \n/li\n\n            \nli ui-sref-active=\nactive\n\n                \na ui-sref=\nbasic.another-simple-page\n\n                    \nspan\nAnother simple page\n/span\n\n                \n/a\n\n            \n/li\n\n            \nli ui-sref-active=\nactive\n\n                \na ui-sref=\nadvanced.page-sidebar-transitions\n\n                    \nspan\nSidebar transitions\n/span\n\n                \n/a\n\n            \n/li\n\n        \n/ul\n\n    \n/div\n\n\n/div\n\n\n\n\n\nNotes\n:\n\n\n\n\nwe changed the \nhref\n attributes to the \nui-sref\n directive, each linking to a route name.\n\n\nwe removed the \nclass\n attribute along with the \nactive\n class name from the first \nli\n element and we've added the \nui-sref-active\n directive to every \nli\n element that will change the \nclass\n to \nactive\n dynamically when the current route matches the route name from the link using \nui-sref\n.\n\n\n\n\nSidebar submenus\n\n\nLet's go further and update the sidebar from the previous example in \nsrc/html/themes/$THEME_NAME/advanced/_sidebar.html\n to use submenus:\n\n\ndiv class=\nsidebar{% if sidebarOptions %} {{ sidebarOptions }}{% endif %}\n{% if sidebarData %} {{ sidebarData }}{% endif %}\n\n    \ndiv data-scrollable\n\n        \nul class=\nsidebar-menu\n\n\n            \n!-- The 'basic' menu --\n\n            \nli class=\nhasSubmenu\n ng-class=\n{ 'open active': $state.includes('basic') }\n\n\n                \n!-- 'basic' submenu trigger --\n\n                \na href=\n#basic-submenu\nspan\nBasic\n/span\n/a\n\n\n                \n!-- 'basic' submenu --\n\n                \nul id=\nbasic-submenu\n ng-class=\n{ 'in': $state.includes('basic') }\n\n                    \nli ui-sref-active=\nactive\n\n                        \na ui-sref=\nbasic.simple-page\n\n                            \nspan\nSimple page\n/span\n\n                        \n/a\n\n                    \n/li\n\n                    \nli ui-sref-active=\nactive\n\n                        \na ui-sref=\nbasic.another-simple-page\n\n                            \nspan\nAnother simple page\n/span\n\n                        \n/a\n\n                    \n/li\n\n                \n/ul\n\n                \n!-- // END 'basic' submenu --\n\n\n            \n/li\n\n            \n!-- // END 'basic' menu --\n    \n\n            \n!-- The 'advanced' menu --\n\n            \nli class=\nhasSubmenu\n ng-class=\n{ 'open active': $state.includes('advanced') }\n\n\n                \n!-- 'advanced' submenu trigger --\n\n                \na href=\n#advanced-submenu\nspan\nAdvanced\n/span\n/a\n\n\n                \n!-- 'advanced' submenu --\n\n                \nul id=\nadvanced-submenu\n ng-class=\n{ 'in': $state.includes('advanced') }\n\n                    \nli ui-sref-active=\nactive\n\n                        \na ui-sref=\nadvanced.page-sidebar-transitions\n\n                            \nspan\nSidebar transitions\n/span\n\n                        \n/a\n\n                    \n/li\n\n                \n/ul\n\n                \n!-- // END 'advanced' submenu --\n\n\n            \n/li\n\n            \n!-- // END 'advanced' menu --\n\n\n        \n/ul\n\n    \n/div\n\n\n/div\n\n\n\n\n\nNotes\n:\n\n\n\n\nwe replaced the one-level menu with two submenus, one for \nbasic\n pages and one for \nadvanced\n pages.\n\n\nwe are using standard \nsidebar submenus\n markup.\n\n\nwe are dynamically adding the classes required for \nopen submenus\n with \nng-class\n.\n\n\n\n\nNavbar\n\n\nLet's update the navbar from \nComplex layouts\n example in \nsrc/html/themes/$THEME_NAME/advanced/_navbar.html\n to use the navigation directives:\n\n\nnav class=\nnavbar navbar-default navbar-fixed-top\n\n    \ndiv class=\ncontainer\n\n\n        \n!-- Group brand and toggle for better mobile display --\n\n        \ndiv class=\nnavbar-header\n\n\n            \n!-- Link to basic/simple-page.html --\n\n            \na class=\nnavbar-brand\n ui-sref=\nbasic.simple-page\nHome page\n/a\n\n\n            \nbutton type=\nbutton\n class=\nnavbar-toggle\n data-toggle=\ncollapse\n data-target=\n#collapse-example\n\n                \nspan class=\nsr-only\nToggle navigation\n/span\n\n                \nspan class=\nicon-bar\n/span\n\n                \nspan class=\nicon-bar\n/span\n\n                \nspan class=\nicon-bar\n/span\n\n            \n/button\n\n        \n/div\n\n\n        \n!-- Group nav links, menus, forms, and other content for toggling --\n\n        \ndiv class=\nnavbar-collapse collapse\n id=\ncollapse-example\n\n            \nul class=\nnav navbar-nav\n\n\n                \n!-- Simple dropdown for 'basic' pages --\n\n                \nli class=\ndropdown\n ng-class=\n{ 'active': $state.includes('basic') }\n\n                    \na href=\n#\n class=\ndropdown-toggle\n data-toggle=\ndropdown\n\n                        Basic \nspan class=\ncaret\n/span\n\n                    \n/a\n\n                    \nul class=\ndropdown-menu\n role=\nmenu\n\n                        \nli ui-sref-active=\nactive\n\n                            \na ui-sref=\nbasic.simple-page\nSimple page\n/a\n\n                        \n/li\n\n                        \nli ui-sref-active=\nactive\n\n                            \na ui-sref=\nbasic.another-simple-page\nAnother simple page\n/a\n\n                        \n/li\n\n                    \n/ul\n\n                \n/li\n\n                \n!-- // END 'basic' dropdown --\n\n\n                \n!-- Simple dropdown for 'advanced' pages --\n\n                \nli class=\ndropdown\n ng-class=\n{ 'active': $state.includes('advanced') }\n\n                    \na href=\n#\n class=\ndropdown-toggle\n data-toggle=\ndropdown\n\n                        Advanced \nspan class=\ncaret\n/span\n\n                    \n/a\n\n                    \nul class=\ndropdown-menu\n role=\nmenu\n\n                        \nli ui-sref-active=\nactive\n\n                            \na ui-sref=\nadvanced.page-sidebar-transitions\nSidebar transitions\n/a\n\n                        \n/li\n\n                    \n/ul\n\n                \n/li\n\n                \n!-- // END 'advanced' dropdown --\n\n\n            \n/ul\n\n        \n/div\n\n\n    \n/div\n\n\n/nav\n\n\n\n\n\nNotes\n:\n\n\n\n\nwe replaced the sample dropdown with two dropdowns, one for \nbasic\n pages and one for \nadvanced\n pages.\n\n\nwe are dynamically adding the class required for \nactive\n dropdown menus with \nng-class\n.\n\n\n\n\n\n\nComponent directives\n\n\nMost of our proprietary assets include AngularJS directives.\n\n\nLayout directives\n\n\n\n\nLoad the \nLayout package\n.\n\n\nLoad the Layout directives, from \nsrc/js/themes/$THEME_NAME/main.js\n, after the AngularJS application:\n\n\n\n\n// Angular App\n// ...\n\n// Layout directives\nrequire('layout/js/angular/main');\n\n\n\n\nscrollable\n\n\nType \nA\n directive, applies on elements with the \ndata-scrollable\n attribute. The directive triggers the jQuery wrapper \n$.tkScrollable()\n on the element.\n\n\nscrollableH\n\n\nType \nA\n directive, applies on elements with the \ndata-scrollable-h\n attribute. The directive triggers the jQuery wrapper \n$.tkScrollable(options)\n on the element, with the following options:\n\n\n{\n    horizontal: true\n}\n\n\n\n\ngridalicious\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \ngridalicious\n. The directive triggers the jQuery wrapper \n$.tkGridalicious()\n on the element.\n\n\nisotope\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \nisotope\n. The directive triggers the jQuery wrapper \n$.tkIsotope()\n on the element.\n\n\nparallax\n\n\nType \nC\n directive, applies on elements with the \nclass\n attribute of \nparallax\n. The directive triggers the jQuery wrapper \n$.tkParallax()\n on the element.\n\n\n\n\nSidebar directives\n\n\n\n\nLoad the \nSidebar package\n.\n\n\nLoad the Sidebar directives, from \nsrc/js/themes/$THEME_NAME/main.js\n, after the AngularJS application:\n\n\n\n\n// Angular App\n// ...\n\n// Sidebar directives\nrequire('sidebar/js/angular/main');\n\n\n\n\nsidebar-collapse\n\n\nType \nA\n directive, applies on \n.sidebar\n elements with the \ndata-type\n attribute of \ncollapse\n. The directive triggers the jQuery wrapper \n$.tkSidebarCollapse()\n on the element.\n\n\nsidebar-dropdown\n\n\nType \nA\n directive, applies on \n.sidebar\n elements with the \ndata-type\n attribute of \ndropdown\n. The directive triggers the jQuery wrapper \n$.tkSidebarDropdown()\n on the element.\n\n\nsidebar-toggle-bar\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle-bar\n attribute of \ntrue\n, within \n.sidebar\n elements. The directive triggers the jQuery wrapper \n$.tkSidebarToggleBar()\n on the element.\n\n\n\n\nEssential directives\n\n\n\n\nLoad the \nEssential package\n.\n\n\nLoad the Essential directives, from \nsrc/js/themes/$THEME_NAME/main.js\n, after the AngularJS application:\n\n\n\n\n// Angular App\n// ...\n\n// Essential directives\nrequire('essential/js/angular/main');\n\n\n\n\ncarousel\n\n\nType \nC\n directive, applies on elements with the \nclass\n attribute of \ncarousel\n. The directive triggers the jQuery wrapper \n$.tkCarousel()\n on the element.\n\n\ncheck-all\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \ncheck-all\n. The directive triggers the jQuery wrapper \n$.tkCheckAll()\n on the element.\n\n\ncollapse\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \ncollapse\n. The directive triggers the jQuery wrapper \n$.tkCollapse()\n on the element.\n\n\ncover\n\n\nType \nC\n directive, applies on elements with the \nclass\n attribute of \ncover\n. The directive triggers the jQuery wrapper \n$.tkCover()\n on the element.\n\n\ndatepicker\n\n\nType \nC\n directive, applies on elements with the \nclass\n attribute of \ndatepicker\n. The directive triggers the jQuery wrapper \n$.tkDatePicker()\n on the element.\n\n\ndaterangepicker-report\n\n\nType \nC\n directive, applies on elements with the \nclass\n attribute of \ndaterangepicker-report\n. The directive triggers the jQuery wrapper \n$.tkDateRangePickerReport()\n on the element. \nUsed for demo purposes\n.\n\n\ndaterangepicker-reservation\n\n\nType \nC\n directive, applies on elements with the \nclass\n attribute of \ndaterangepicker-reservation\n. The directive triggers the jQuery wrapper \n$.tkDateRangePickerReservation()\n on the element. \nUsed for demo purposes\n.\n\n\nexpandable\n\n\nType \nC\n directive, applies on elements with the \nclass\n attribute of \nexpandable\n. The directive triggers the jQuery wrapper \n$.tkExpandable()\n on the element.\n\n\nminicolors\n\n\nType \nC\n directive, applies on elements with the \nclass\n attribute of \nminicolors\n. The directive triggers the jQuery wrapper \n$.tkMiniColors()\n on the element.\n\n\nmodal\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \nmodal\n. The directive triggers the jQuery wrapper \n$.tkModal()\n on the element.\n\n\nnestable\n\n\nType \nC\n directive, applies on elements with the \nclass\n attribute of \nnestable\n. The directive triggers the jQuery wrapper \n$.tkNestable()\n on the element.\n\n\npanel-collapse\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \npanel-collapse\n.\n\n\nselect2\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \nselect2\n or \nselect2-tags\n. The directive triggers the jQuery wrapper \n$.tkSelect2()\n on the element.\n\n\nselectpicker\n\n\nType \nC\n directive, applies on elements with the \nclass\n attribute of \nselectpicker\n. The directive triggers the jQuery wrapper \n$.tkSelectPicker()\n on the element.\n\n\nslider\n\n\nType \nA\n directive, applies on elements with the \ndata-slider\n attribute. The directive triggers the jQuery wrapper \n$.tkSlider()\n on the element when the \ndata-slider\n value is \ndefault\n and \n$.tkSliderFormatter()\n when the \ndata-slider\n value is \nformatter\n.\n\n\non-slide\n\n\nType \nA\n directive, applies on elements with the \ndata-on-slide\n attribute. The directive triggers the jQuery wrapper \n$.tkSliderUpdate()\n on the element.\n\n\nsummernote\n\n\nType \nC\n directive, applies on elements with the \nclass\n attribute of \nsummernote\n. The directive triggers the jQuery wrapper \n$.tkSummernote()\n on the element.\n\n\ndata-table\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \ndata-table\n. The directive triggers the jQuery wrapper \n$.tkDataTable()\n on the element.\n\n\ntab\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \ntab\n. The directive prevents the default click event for the element.\n\n\ntouch-spin\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \ntouch-spin\n. The directive triggers the jQuery wrapper \n$.tkTouchSpin()\n on the element.\n\n\ntree\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \ntree\n. The directive triggers the jQuery wrapper \n$.tkFancyTree()\n on the element.\n\n\nwizard\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \nwizard\n. The directive triggers the jQuery wrapper \n$.tkWizard()\n on the element.\n\n\n\n\nMaps directives\n\n\n\n\nLoad the \nMaps package\n.\n\n\nLoad the Maps directives, from \nsrc/js/themes/$THEME_NAME/main.js\n, after the AngularJS application:\n\n\n\n\n// Angular App\n// ...\n\n// Maps directives\nrequire('maps/js/angular/main');\n\n\n\n\ngoogle-maps\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \ngoogle-maps\n. The directive triggers the jQuery wrapper \n$.tkGoogleMap()\n on the element.\n\n\nvector-world-map-gdp\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \nvector-world-map-gdp\n. The directive triggers the jQuery wrapper \n$.tkVectorWorldMapGDP()\n on the element.\n\n\nvector-world-map-markers\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \nvector-world-map-markers\n. The directive triggers the jQuery wrapper \n$.tkVectorWorldMapMarkers()\n on the element.\n\n\nvector-usa-unemployment\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \nvector-usa-unemployment\n. The directive triggers the jQuery wrapper \n$.tkVectorUSAUnemployment()\n on the element.\n\n\nvector-region-selection\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \nvector-region-selection\n. The directive triggers the jQuery wrapper \n$.tkVectorRegionSelection()\n on the element.\n\n\nvector-france-elections\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \nvector-france-elections\n. The directive triggers the jQuery wrapper \n$.tkVectorFranceElections()\n on the element.\n\n\nvector-random-colors\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \nvector-random-colors\n. The directive triggers the jQuery wrapper \n$.tkVectorRandomColors()\n on the element.\n\n\nvector-mall-map\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \nvector-mall-map\n. The directive triggers the jQuery wrapper \n$.tkVectorMallMap()\n on the element.\n\n\nvector-projection-map\n\n\nType \nA\n directive, applies on elements with the \ndata-toggle\n attribute of \nvector-projection-map\n. The directive triggers the jQuery wrapper \n$.tkVectorProjectionMap()\n on the element.", 
            "title": "AngularJS"
        }, 
        {
            "location": "/code/angular/index.html#angularjs", 
            "text": "AngularJS  is a toolset for building the framework most suited to your application development. It is fully extensible and works well with other libraries. Every feature can be modified or replaced to suit your unique development workflow and feature needs.  This document aims to provide :   a guide for customizing an existing theme from our templates into an AngularJS SPA or  Single Page Application .  a basic understanding for the AngularJS setup we are using, should we provide AngularJS versions of our themes.", 
            "title": "AngularJS"
        }, 
        {
            "location": "/code/angular/index.html#requirements", 
            "text": "Packages  We'll create a basic AngularJS setup, using a couple of libraries:   angular  angular-resource  angular-ui-router  angular-sanitize  angular-ui-utils  angular-touch   Installation  You can check if the libraries are already installed by simply looking for the following directories:   bower_components/angular  bower_components/angular-resource  bower_components/angular-ui-router  bower_components/angular-sanitize  bower_components/angular-ui-utils  bower_components/angular-touch   Install using  Bower :  bower install --save \\\n    angular \\\n    angular-resource \\\n    angular-ui-router \\\n    angular-sanitize \\\n    angular-ui-utils \\\n    angular-touch  Preparing the assets  Before loading the new libraries into our HTML pages, we'll have to copy the libraries into our  theme's build path  when running  the build process .  Create  .build/copy-vendor/copy.angular.json  with the following content:  {\n     task :  copy-vendor-angular-scripts ,\n     cwd :  bower_components ,\n     src : [\n         angular/angular.js ,\n         angular-resource/angular-resource.js ,\n         angular-sanitize/angular-sanitize.js ,\n         angular-touch/angular-touch.js ,\n         angular-ui-router/release/angular-ui-router.js ,\n         angular-ui-utils/ui-utils.js \n    ],\n     dest :  js/vendor/angular ,\n     flatten : true,\n     themes : [ $THEME_NAME ]\n}  Don't forget to replace  $THEME_NAME  with a valid theme name. This will ensure the task will be executed only when running the build process for a specific theme.  The json file will be picked up automatically and executed when running pt. 5 of  the build process . The task will copy the files defined in the  src  array from  bower_components  into  $BUILD_PATH/$THEME_NAME/js/vendor/angular/*.js .   At this point we could manually load any of the files in HTML simply by:  script src= js/vendor/angular/angular.js /script  script src= js/vendor/angular/angular-resource.js /script  !-- etc ... --   Instead, we'll create a concatenated file that will include all of the AngularJS libraries. The concatenated file will also be created when running  the build process .  Create  .build/concat-vendor/concat.angular.json  with the following content:  {\n     build :  js/vendor/angular/all.js ,\n     cwd :  $THEME_DIR/js/vendor/angular ,\n     files : [\n         angular.js ,\n         angular-resource.js ,\n         angular-sanitize.js ,\n         angular-touch.js ,\n         angular-ui-router.js ,\n         ui-utils.js \n    ],\n     themes : [ $THEME_NAME ]\n}  Also, don't forget to replace  $THEME_NAME  with a valid theme name. This will ensure the task will be executed only when running the build process for a specific theme. Note that  $THEME_DIR  is a special string that will be replaced automatically by the build process with the full build path to your current theme directory.  The task will create  $BUILD_PATH/$THEME_NAME/js/vendor/angular/all.js  with all the libraries included.  At this point, after running the build process, we could manually load all the AngularJS libraries in HTML simply with one line:  script src= js/vendor/angular/all.js /script   Loading the AngularJS libraries into our HTML  For this setup, we'll be using  Swig templates  to compose HTML documents, so we'll use the  src/swig.json  configuration file to automatically load our new libraries into the HTML of our application when running the build process. For more details, see  Loading assets .  Update  src/swig.json  to include:  {\n     js_vendor : [\n         ... ,\n        {\n             name :  vendor/angular/all ,\n             themes : [ $THEME_NAME ]\n        }\n    ]\n}  This will instruct Swig when running  the build process  for  $THEME_NAME  to load the  $BUILD_PATH/$THEME_NAME/js/vendor/angular/all.js  script into the footer of our HTML pages.", 
            "title": "Requirements"
        }, 
        {
            "location": "/code/angular/index.html#basic-application-setup", 
            "text": "Main application module  src/js/themes/$THEME_NAME/angular/app.js :  We declare the  app  module as the main application module, load other dependent modules and write a basic configuration:  (function(){\n    'use strict';\n\n    angular.module('app', [\n        'ngResource',\n        'ngSanitize',\n        'ngTouch',\n        'ui.router',\n        'ui.utils',\n        'ui.jq'\n    ]);\n\n    var app = angular.module('app')\n        .config(\n        [ '$controllerProvider', '$compileProvider', '$filterProvider', '$provide', '$interpolateProvider',\n            function ($controllerProvider, $compileProvider, $filterProvider, $provide, $interpolateProvider) {\n                app.controller = $controllerProvider.register;\n                app.directive = $compileProvider.directive;\n                app.filter = $filterProvider.register;\n                app.factory = $provide.factory;\n                app.service = $provide.service;\n                app.constant = $provide.constant;\n                app.value = $provide.value;\n\n                $interpolateProvider.startSymbol('::');\n                $interpolateProvider.endSymbol('::');\n            }\n        ]);\n\n})();  Note the  $interpolateProvider  configuration entries are customizing the symbol used for the interpolation markup from the default  {{ variable }}  to  :: variable ::  in order to prevent conflicts with  Swig .  Router  src/js/themes/$THEME_NAME/angular/config.router.js :  (function(){\n    'use strict';\n\n    angular.module('app')\n        .run([ '$rootScope', '$state', '$stateParams',\n            function ($rootScope, $state, $stateParams) {\n                $rootScope.$state = $state;\n                $rootScope.$stateParams = $stateParams;\n            }\n        ])\n        .config(\n        [ '$stateProvider', '$urlRouterProvider',\n            function ($stateProvider, $urlRouterProvider) {\n\n                    // We'll add our routing here later\n\n            }\n        ]\n    );\n\n})();  Main application controller  src/js/themes/$THEME_NAME/angular/main.js :  We'll use  AppCtrl  to dynamically change  $scope.app.settings.htmlClass  from the router, when we change between pages with different layouts.  (function () {\n     use strict ;\n\n    angular.module('app')\n        .controller('AppCtrl', [ '$scope', '$state',\n            function ($scope, $state) {\n\n                $scope.app = {\n                    settings: {\n                        htmlClass: ''\n                    }\n                };\n\n                $scope.$state = $state;\n\n            } ]);\n\n})();  Main application JavaScript bundle  Now that we've declared the main  app  module, the router and the main  AppCtrl  controller, let's load all of them into our main application JavaScript bundle, by using  Browserify .  From  src/js/themes/$THEME_NAME/main.js :  // Angular App\nrequire('./angular/app.js');\nrequire('./angular/config.router.js');\nrequire('./angular/main.js');  From  src/js/themes/$THEME_NAME/app.js :  require('./main');  Note that  we could  load all the files directly from  app.js  but instead we separate the AngularJS parts of the application into a new  main.js  file which we'll then load from  app.js .  Now, after running  the build process , our custom JavaScript will be included in the  theme's build path  into our main application JavaScript bundle:  $BUILD_PATH/$THEME_NAME/js/app/app.js .", 
            "title": "Basic application setup"
        }, 
        {
            "location": "/code/angular/index.html#main-application-layout", 
            "text": "Since we're essentially building a SPA or  Single Page Application , we'll need a main HTML document which will load our application assets and the actual pages of the application via the router.  Consider the file  src/html/themes/$THEME_NAME/index.html :  !DOCTYPE html  html lang= en  data-ng-app= app  data-ng-controller= AppCtrl  class= ng-class:app.settings.htmlClass \n{% include  lib/layout/html/_head.html  %} body  div data-ui-view class= ui-view-main /div \n\n{% include  lib/layout/html/_footer_scripts.html  %}  This page will load our application assets and initialize the  app  module and the  AppCtrl  controller.", 
            "title": "Main application layout"
        }, 
        {
            "location": "/code/angular/index.html#basic-layouts", 
            "text": "Swig templates  Consider a basic layout in  src/html/themes/$THEME_NAME/basic/_layout.html :  div class= container-fluid \n\n     !-- The page content -- \n     !-- Define the content block -- \n     !-- This will be used by pages that extend this layout to inject their content here -- \n    {% block content %}{% endblock %}\n\n    {% include  lib/layout/html/_footer_copyright.html  %} /div   A simple page in  src/html/themes/$THEME_NAME/basic/simple-page.html :  {% extends  src/html/themes/$THEME_NAME/basic/_layout.html  %}\n\n{% block content %}\n\n     p This is a simple page. /p \n\n{% endblock %}  And another simple page in  src/html/themes/$THEME_NAME/basic/another-simple-page.html :  {% extends  src/html/themes/$THEME_NAME/basic/_layout.html  %}\n\n{% block content %}\n\n     p This is another simple page. /p \n\n{% endblock %}  The router  Update the router file that we've created earlier in  src/js/themes/$THEME_NAME/angular/config.router.js :  function ($stateProvider, $urlRouterProvider) {\n\n    // Configure a default location for the router\n    $urlRouterProvider\n        .otherwise('/basic/simple-page');\n\n    // Add a 'basic' state group\n    $stateProvider\n        .state('basic', {\n            abstract: true,\n            url: '/basic',\n            template: ' div ui-view class= ui-view-main  / '\n        });\n\n    // Add pages in the 'basic' state\n    $stateProvider\n        .state('basic.simple-page', {\n            url: '/simple-page',\n            templateUrl: 'basic/simple-page.html',\n            controller: ['$scope', function($scope){\n                // here we could update $scope.app.settings.htmlClass\n                // but for this basic example we won't need custom CSS classes applied to the 'html' tag;\n                // set it to an empty string to reset\n                $scope.app.settings.htmlClass = '';\n            }]\n        })\n        .state('basic.simple-page', {\n            url: '/another-simple-page',\n            templateUrl: 'basic/another-simple-page.html',\n            controller: ['$scope', function($scope){\n                // here we could update $scope.app.settings.htmlClass\n                // but for this basic example we won't need custom CSS classes applied to the 'html' tag;\n                // set it to an empty string to reset\n                $scope.app.settings.htmlClass = '';\n            }]\n        });\n\n}  Build and preview  Now, after running  the build process , we should see the compiled HTML files in the  theme's build path :   $BUILD_PATH/$THEME_NAME/index.html  $BUILD_PATH/$THEME_NAME/basic/simple-page.html  $BUILD_PATH/$THEME_NAME/basic/another-simple-page.html   And, after running  the watchers  we should be able to access the application from the following URLs:   /  /#/basic/simple-page  /#/basic/another-simple-page", 
            "title": "Basic layouts"
        }, 
        {
            "location": "/code/angular/index.html#complex-layouts", 
            "text": "Next, we're going to recreate the example from  Sidebar transitions  and also use some additional elements in the context of our AngularJS SPA  Single Page Application .  Prerequisites  Make sure you're loading the following packages in your theme:   Essential  Layout  Sidebar  Navbar   Swig templates  Consider the slightly more complex layout in  src/html/themes/$THEME_NAME/advanced/_layout.html :  !-- Include a simple navbar -- \n{% include  src/html/themes/$THEME_NAME/advanced/_navbar.html  %} !-- Wrapper required for sidebar transitions --  div class= st-container \n\n     !-- sidebars with the following effects MUST go OUTSIDE of the .st-pusher wrapper: -- \n     !-- st-effect-1, st-effect-2, st-effect-4, st-effect-5, st-effect-9, st-effect-10, st-effect-11, st-effect-12, st-effect-13 -- \n\n     !-- For this example, we'll be using the st-effect-1 transition -- \n     !-- Include a simple sidebar -- \n    {% include  src/html/themes/$THEME_NAME/advanced/_sidebar.html  { sidebarOptions:  left sidebar-size-2 sidebar-offset-0 sidebar-skin-dark sidebar-visible-desktop sidebar-visible-mobile , sidebarData:  id=sidebar-menu data-type=collapse  } %}\n\n     !-- content push wrapper -- \n     div class= st-pusher  id= content \n\n         !-- sidebars with the following effects MUST go INSIDE the .st-pusher wrapper: -- \n         !-- st-effect-3, st-effect-6, st-effect-7, st-effect-8, st-effect-14 -- \n\n         !-- this is the wrapper for the content -- \n         div class= st-content \n\n             !-- extra div for emulating position:fixed of the menu -- \n             div class= st-content-inner \n\n                 !-- The page content -- \n                 div class= container-fluid \n\n                     !-- Define the content block -- \n                     !-- This will be used by pages that extend this layout to inject their content -- \n                    {% block content %}{% endblock %}\n\n                 /div \n                 !-- // END .container-fluid -- \n\n             /div \n             !-- // END .st-content-inner -- \n\n         /div \n         !-- // END .st-content -- \n\n     /div \n     !-- // END .st-pusher -- \n\n     !-- Include the footer copyright -- \n    {% include  lib/layout/html/_footer_copyright.html  %} /div  !-- // END .st-container --   A sidebar element in  src/html/themes/$THEME_NAME/advanced/_sidebar.html :  div class= sidebar{% if sidebarOptions %} {{ sidebarOptions }}{% endif %} {% if sidebarData %} {{ sidebarData }}{% endif %} \n     div data-scrollable \n         ul class= sidebar-menu \n             li class= active a href= # span Simple page /span /a /li \n             li a href= # span Another simple page /span /a /li \n             li a href= # span Sidebar transitions /span /a /li \n         /ul \n     /div  /div   A navbar element in  src/html/themes/$THEME_NAME/advanced/_navbar.html :  nav class= navbar navbar-default navbar-fixed-top \n     div class= container \n\n         !-- Group brand and toggle for better mobile display -- \n         div class= navbar-header \n             a class= navbar-brand  href= # Brand /a \n             button type= button  class= navbar-toggle  data-toggle= collapse  data-target= #collapse-example \n                 span class= sr-only Toggle navigation /span \n                 span class= icon-bar /span \n                 span class= icon-bar /span \n                 span class= icon-bar /span \n             /button \n         /div \n\n         !-- Group nav links, menus, forms, and other content for toggling -- \n         div class= navbar-collapse collapse  id= collapse-example \n             ul class= nav navbar-nav \n\n                 !-- simple dropdown -- \n                 li class= dropdown active \n                     a href= #  class= dropdown-toggle  data-toggle= dropdown \n                        Pages  span class= caret /span \n                     /a \n                     ul class= dropdown-menu  role= menu \n                         li class= dropdown-header Basic /li \n                         li class= active a href= # Simple page /a /li \n                         li a href= # Another simple page /a /li \n                         li class= dropdown-header Advanced /li \n                         li a href= # Sidebar transitions /a /li \n                     /ul \n                 /li \n                 !-- // END simple dropdown -- \n\n             /ul \n         /div \n\n     /div  /nav   And a page in  src/html/themes/$THEME_NAME/advanced/page-sidebar-transitions.html :  {% extends  src/html/themes/$THEME_NAME/advanced/_layout.html  %}\n\n{% block content %}\n     p This is a simple page. /p \n     p \n         a href= #sidebar-menu  data-toggle= sidebar-menu  data-effect= st-effect-1  class= btn btn-default Slide in on top /a \n     /p \n{% endblock %}  Additional styling required  When using layouts with  Sidebar transitions  add the following extra styling block to  src/less/themes/$THEME_NAME/main.less :  .st-layout .ui-view-main {\n    height: 100%;\n}  The router  Update the router file in  src/js/themes/$THEME_NAME/angular/config.router.js :  function ($stateProvider, $urlRouterProvider) {\n\n    // ... code from previous example\n\n    // Add an 'advanced' state group\n    $stateProvider\n        .state('advanced', {\n            abstract: true,\n            url: '/advanced',\n            template: ' div ui-view class= ui-view-main  / '\n        });\n\n    // Add pages in the 'advanced' state\n    $stateProvider\n        .state('advanced.page-sidebar-transitions', {\n            url: '/page-sidebar-transitions',\n            templateUrl: 'advanced/page-sidebar-transitions.html',\n            controller: ['$scope', function($scope){\n                // here we can update $scope.app.settings.htmlClass\n                // with the required CSS classes for the 'html' tag\n                $scope.app.settings.htmlClass = 'ls-top-navbar ls-bottom-footer show-sidebar sidebar-l2 st-layout';\n            }]\n        });\n\n}  Build and preview  Now, after running  the build process , we should see the compiled HTML files in the  theme's build path , along with the files from the previous example:   $BUILD_PATH/$THEME_NAME/index.html  $BUILD_PATH/$THEME_NAME/basic/simple-page.html  $BUILD_PATH/$THEME_NAME/basic/another-simple-page.html  $BUILD_PATH/$THEME_NAME/advanced/page-sidebar-transitions.html   And, after running  the watchers  we should be able to access the application from the following URLs:   /  /#/basic/simple-page  /#/basic/another-simple-page  /#/advanced/page-sidebar-transitions", 
            "title": "Complex layouts"
        }, 
        {
            "location": "/code/angular/index.html#navigation-directives", 
            "text": "You've probably noticed in the previous example from  Complex layouts  that we've created a sidebar and a navbar but none of the links are actually working. Since the router is responsible for changing the  state  or the  page , any links must interact directly with the router.  For that we can use the  ui-sref  directive from  ui.router.state . For more details, you can  see the official documentation .  Sidebar  Let's update the sidebar from the previous example in  src/html/themes/$THEME_NAME/advanced/_sidebar.html  to the following:  div class= sidebar{% if sidebarOptions %} {{ sidebarOptions }}{% endif %} {% if sidebarData %} {{ sidebarData }}{% endif %} \n     div data-scrollable \n         ul class= sidebar-menu \n             li ui-sref-active= active \n                 a ui-sref= basic.simple-page \n                     span Simple page /span \n                 /a \n             /li \n             li ui-sref-active= active \n                 a ui-sref= basic.another-simple-page \n                     span Another simple page /span \n                 /a \n             /li \n             li ui-sref-active= active \n                 a ui-sref= advanced.page-sidebar-transitions \n                     span Sidebar transitions /span \n                 /a \n             /li \n         /ul \n     /div  /div   Notes :   we changed the  href  attributes to the  ui-sref  directive, each linking to a route name.  we removed the  class  attribute along with the  active  class name from the first  li  element and we've added the  ui-sref-active  directive to every  li  element that will change the  class  to  active  dynamically when the current route matches the route name from the link using  ui-sref .   Sidebar submenus  Let's go further and update the sidebar from the previous example in  src/html/themes/$THEME_NAME/advanced/_sidebar.html  to use submenus:  div class= sidebar{% if sidebarOptions %} {{ sidebarOptions }}{% endif %} {% if sidebarData %} {{ sidebarData }}{% endif %} \n     div data-scrollable \n         ul class= sidebar-menu \n\n             !-- The 'basic' menu -- \n             li class= hasSubmenu  ng-class= { 'open active': $state.includes('basic') } \n\n                 !-- 'basic' submenu trigger -- \n                 a href= #basic-submenu span Basic /span /a \n\n                 !-- 'basic' submenu -- \n                 ul id= basic-submenu  ng-class= { 'in': $state.includes('basic') } \n                     li ui-sref-active= active \n                         a ui-sref= basic.simple-page \n                             span Simple page /span \n                         /a \n                     /li \n                     li ui-sref-active= active \n                         a ui-sref= basic.another-simple-page \n                             span Another simple page /span \n                         /a \n                     /li \n                 /ul \n                 !-- // END 'basic' submenu -- \n\n             /li \n             !-- // END 'basic' menu --     \n\n             !-- The 'advanced' menu -- \n             li class= hasSubmenu  ng-class= { 'open active': $state.includes('advanced') } \n\n                 !-- 'advanced' submenu trigger -- \n                 a href= #advanced-submenu span Advanced /span /a \n\n                 !-- 'advanced' submenu -- \n                 ul id= advanced-submenu  ng-class= { 'in': $state.includes('advanced') } \n                     li ui-sref-active= active \n                         a ui-sref= advanced.page-sidebar-transitions \n                             span Sidebar transitions /span \n                         /a \n                     /li \n                 /ul \n                 !-- // END 'advanced' submenu -- \n\n             /li \n             !-- // END 'advanced' menu -- \n\n         /ul \n     /div  /div   Notes :   we replaced the one-level menu with two submenus, one for  basic  pages and one for  advanced  pages.  we are using standard  sidebar submenus  markup.  we are dynamically adding the classes required for  open submenus  with  ng-class .   Navbar  Let's update the navbar from  Complex layouts  example in  src/html/themes/$THEME_NAME/advanced/_navbar.html  to use the navigation directives:  nav class= navbar navbar-default navbar-fixed-top \n     div class= container \n\n         !-- Group brand and toggle for better mobile display -- \n         div class= navbar-header \n\n             !-- Link to basic/simple-page.html -- \n             a class= navbar-brand  ui-sref= basic.simple-page Home page /a \n\n             button type= button  class= navbar-toggle  data-toggle= collapse  data-target= #collapse-example \n                 span class= sr-only Toggle navigation /span \n                 span class= icon-bar /span \n                 span class= icon-bar /span \n                 span class= icon-bar /span \n             /button \n         /div \n\n         !-- Group nav links, menus, forms, and other content for toggling -- \n         div class= navbar-collapse collapse  id= collapse-example \n             ul class= nav navbar-nav \n\n                 !-- Simple dropdown for 'basic' pages -- \n                 li class= dropdown  ng-class= { 'active': $state.includes('basic') } \n                     a href= #  class= dropdown-toggle  data-toggle= dropdown \n                        Basic  span class= caret /span \n                     /a \n                     ul class= dropdown-menu  role= menu \n                         li ui-sref-active= active \n                             a ui-sref= basic.simple-page Simple page /a \n                         /li \n                         li ui-sref-active= active \n                             a ui-sref= basic.another-simple-page Another simple page /a \n                         /li \n                     /ul \n                 /li \n                 !-- // END 'basic' dropdown -- \n\n                 !-- Simple dropdown for 'advanced' pages -- \n                 li class= dropdown  ng-class= { 'active': $state.includes('advanced') } \n                     a href= #  class= dropdown-toggle  data-toggle= dropdown \n                        Advanced  span class= caret /span \n                     /a \n                     ul class= dropdown-menu  role= menu \n                         li ui-sref-active= active \n                             a ui-sref= advanced.page-sidebar-transitions Sidebar transitions /a \n                         /li \n                     /ul \n                 /li \n                 !-- // END 'advanced' dropdown -- \n\n             /ul \n         /div \n\n     /div  /nav   Notes :   we replaced the sample dropdown with two dropdowns, one for  basic  pages and one for  advanced  pages.  we are dynamically adding the class required for  active  dropdown menus with  ng-class .", 
            "title": "Navigation directives"
        }, 
        {
            "location": "/code/angular/index.html#component-directives", 
            "text": "Most of our proprietary assets include AngularJS directives.  Layout directives   Load the  Layout package .  Load the Layout directives, from  src/js/themes/$THEME_NAME/main.js , after the AngularJS application:   // Angular App\n// ...\n\n// Layout directives\nrequire('layout/js/angular/main');  scrollable  Type  A  directive, applies on elements with the  data-scrollable  attribute. The directive triggers the jQuery wrapper  $.tkScrollable()  on the element.  scrollableH  Type  A  directive, applies on elements with the  data-scrollable-h  attribute. The directive triggers the jQuery wrapper  $.tkScrollable(options)  on the element, with the following options:  {\n    horizontal: true\n}  gridalicious  Type  A  directive, applies on elements with the  data-toggle  attribute of  gridalicious . The directive triggers the jQuery wrapper  $.tkGridalicious()  on the element.  isotope  Type  A  directive, applies on elements with the  data-toggle  attribute of  isotope . The directive triggers the jQuery wrapper  $.tkIsotope()  on the element.  parallax  Type  C  directive, applies on elements with the  class  attribute of  parallax . The directive triggers the jQuery wrapper  $.tkParallax()  on the element.   Sidebar directives   Load the  Sidebar package .  Load the Sidebar directives, from  src/js/themes/$THEME_NAME/main.js , after the AngularJS application:   // Angular App\n// ...\n\n// Sidebar directives\nrequire('sidebar/js/angular/main');  sidebar-collapse  Type  A  directive, applies on  .sidebar  elements with the  data-type  attribute of  collapse . The directive triggers the jQuery wrapper  $.tkSidebarCollapse()  on the element.  sidebar-dropdown  Type  A  directive, applies on  .sidebar  elements with the  data-type  attribute of  dropdown . The directive triggers the jQuery wrapper  $.tkSidebarDropdown()  on the element.  sidebar-toggle-bar  Type  A  directive, applies on elements with the  data-toggle-bar  attribute of  true , within  .sidebar  elements. The directive triggers the jQuery wrapper  $.tkSidebarToggleBar()  on the element.   Essential directives   Load the  Essential package .  Load the Essential directives, from  src/js/themes/$THEME_NAME/main.js , after the AngularJS application:   // Angular App\n// ...\n\n// Essential directives\nrequire('essential/js/angular/main');  carousel  Type  C  directive, applies on elements with the  class  attribute of  carousel . The directive triggers the jQuery wrapper  $.tkCarousel()  on the element.  check-all  Type  A  directive, applies on elements with the  data-toggle  attribute of  check-all . The directive triggers the jQuery wrapper  $.tkCheckAll()  on the element.  collapse  Type  A  directive, applies on elements with the  data-toggle  attribute of  collapse . The directive triggers the jQuery wrapper  $.tkCollapse()  on the element.  cover  Type  C  directive, applies on elements with the  class  attribute of  cover . The directive triggers the jQuery wrapper  $.tkCover()  on the element.  datepicker  Type  C  directive, applies on elements with the  class  attribute of  datepicker . The directive triggers the jQuery wrapper  $.tkDatePicker()  on the element.  daterangepicker-report  Type  C  directive, applies on elements with the  class  attribute of  daterangepicker-report . The directive triggers the jQuery wrapper  $.tkDateRangePickerReport()  on the element.  Used for demo purposes .  daterangepicker-reservation  Type  C  directive, applies on elements with the  class  attribute of  daterangepicker-reservation . The directive triggers the jQuery wrapper  $.tkDateRangePickerReservation()  on the element.  Used for demo purposes .  expandable  Type  C  directive, applies on elements with the  class  attribute of  expandable . The directive triggers the jQuery wrapper  $.tkExpandable()  on the element.  minicolors  Type  C  directive, applies on elements with the  class  attribute of  minicolors . The directive triggers the jQuery wrapper  $.tkMiniColors()  on the element.  modal  Type  A  directive, applies on elements with the  data-toggle  attribute of  modal . The directive triggers the jQuery wrapper  $.tkModal()  on the element.  nestable  Type  C  directive, applies on elements with the  class  attribute of  nestable . The directive triggers the jQuery wrapper  $.tkNestable()  on the element.  panel-collapse  Type  A  directive, applies on elements with the  data-toggle  attribute of  panel-collapse .  select2  Type  A  directive, applies on elements with the  data-toggle  attribute of  select2  or  select2-tags . The directive triggers the jQuery wrapper  $.tkSelect2()  on the element.  selectpicker  Type  C  directive, applies on elements with the  class  attribute of  selectpicker . The directive triggers the jQuery wrapper  $.tkSelectPicker()  on the element.  slider  Type  A  directive, applies on elements with the  data-slider  attribute. The directive triggers the jQuery wrapper  $.tkSlider()  on the element when the  data-slider  value is  default  and  $.tkSliderFormatter()  when the  data-slider  value is  formatter .  on-slide  Type  A  directive, applies on elements with the  data-on-slide  attribute. The directive triggers the jQuery wrapper  $.tkSliderUpdate()  on the element.  summernote  Type  C  directive, applies on elements with the  class  attribute of  summernote . The directive triggers the jQuery wrapper  $.tkSummernote()  on the element.  data-table  Type  A  directive, applies on elements with the  data-toggle  attribute of  data-table . The directive triggers the jQuery wrapper  $.tkDataTable()  on the element.  tab  Type  A  directive, applies on elements with the  data-toggle  attribute of  tab . The directive prevents the default click event for the element.  touch-spin  Type  A  directive, applies on elements with the  data-toggle  attribute of  touch-spin . The directive triggers the jQuery wrapper  $.tkTouchSpin()  on the element.  tree  Type  A  directive, applies on elements with the  data-toggle  attribute of  tree . The directive triggers the jQuery wrapper  $.tkFancyTree()  on the element.  wizard  Type  A  directive, applies on elements with the  data-toggle  attribute of  wizard . The directive triggers the jQuery wrapper  $.tkWizard()  on the element.   Maps directives   Load the  Maps package .  Load the Maps directives, from  src/js/themes/$THEME_NAME/main.js , after the AngularJS application:   // Angular App\n// ...\n\n// Maps directives\nrequire('maps/js/angular/main');  google-maps  Type  A  directive, applies on elements with the  data-toggle  attribute of  google-maps . The directive triggers the jQuery wrapper  $.tkGoogleMap()  on the element.  vector-world-map-gdp  Type  A  directive, applies on elements with the  data-toggle  attribute of  vector-world-map-gdp . The directive triggers the jQuery wrapper  $.tkVectorWorldMapGDP()  on the element.  vector-world-map-markers  Type  A  directive, applies on elements with the  data-toggle  attribute of  vector-world-map-markers . The directive triggers the jQuery wrapper  $.tkVectorWorldMapMarkers()  on the element.  vector-usa-unemployment  Type  A  directive, applies on elements with the  data-toggle  attribute of  vector-usa-unemployment . The directive triggers the jQuery wrapper  $.tkVectorUSAUnemployment()  on the element.  vector-region-selection  Type  A  directive, applies on elements with the  data-toggle  attribute of  vector-region-selection . The directive triggers the jQuery wrapper  $.tkVectorRegionSelection()  on the element.  vector-france-elections  Type  A  directive, applies on elements with the  data-toggle  attribute of  vector-france-elections . The directive triggers the jQuery wrapper  $.tkVectorFranceElections()  on the element.  vector-random-colors  Type  A  directive, applies on elements with the  data-toggle  attribute of  vector-random-colors . The directive triggers the jQuery wrapper  $.tkVectorRandomColors()  on the element.  vector-mall-map  Type  A  directive, applies on elements with the  data-toggle  attribute of  vector-mall-map . The directive triggers the jQuery wrapper  $.tkVectorMallMap()  on the element.  vector-projection-map  Type  A  directive, applies on elements with the  data-toggle  attribute of  vector-projection-map . The directive triggers the jQuery wrapper  $.tkVectorProjectionMap()  on the element.", 
            "title": "Component directives"
        }, 
        {
            "location": "/reference/layout/index.html", 
            "text": "Layout\n\n\nWe rely heavily on various Bootstrap components such as the Bootstrap Grid System to create our layouts, so if you haven't done so already, we encourage you to continue by familiarizing yourself with Bootstrap.\n\n\nThe layout component\n:\n\n\n\n\nCustomizes Bootstrap's grid system spacings;\n\n\nProvides Swig partials for composing HTML pages in the \nlib/layout/html/\n directory.\n\n\nProvides examples of HTML pages composed from Swig partials in \nlib/layout/html/samples/\n directory.\n\n\n\n\nProvides elements:\n\n\n\n\nA basic footer copyright line.\n\n\nA sticky footer.\n\n\nAn application layout.\n\n\nSplit areas.\n\n\nScrollable areas.\n\n\n\n\n\n\n\n\n\n\nRequirements\n\n\nJavaScript\n\n\nTo load the layout component, from \nsrc/js/themes/$THEME_NAME/app.js\n:\n\n\n// Layout\nrequire('layout/js/main');\n\n\n\nThis will load \nlib/layout/js/main.js\n into our main application script bundle.\n\n\nLess\n\n\nFrom \nsrc/less/themes/$THEME_NAME/app.less\n:\n\n\n// Layout\n@import \"layout/less/layout\";\n\n\n\nWhich will load \nlib/layout/less/layout.less\n into our main application style bundle.\n\n\n\n\nAlternative\n\n\nIf working with Less and Browserify bundles is not your favorite thing, you can alternatively load the pre-built static assets we have included:\n\n\n!-- In the head of the HTML document --\n\n\nlink rel=\"stylesheet\" href=\"css/app/layout.css\" /\n\n\n\n!-- At the bottom of the HTML document --\n\n\nscript src=\"js/app/layout.js\"\n/script\n\n\n\n\n\n\nGetting started\n\n\nPlease refer to the official \nBootstrap documentation\n and \nBootstrap layout examples\n.\n\n\n\n\nSwig templates\n\n\nComposing HTML pages with Swig partials.\n\n\n\n\n\n\nlib/layout/html/_header.html\n:\n\n\nThis is the header and provides the opening \nhtml\n and \nbody\n tags of the HTML document.\n\n\n\n\n\n\nlib/layout/html/_head.html\n: \n\n\nThis is included from \n_header.html\n and provides the \nhead\n part of the HTML document.\n\n\n\n\n\n\nlib/layout/html/_head_includes.html\n: \n\n\nThis is included from \n_head.html\n and provides dynamic loading of assets required by the application in the \nhead\n section, both CSS and   JavaScript.\n\n\n\n\n\n\nlib/layout/html/_footer_scripts.html\n: \n\n\nThis provides the closing \nbody\n and \nhtml\n tags, but also provides dynamic loading of the JavaScript required by the application, before the   closing \nbody\n tag.\n\n\n\n\n\n\n\n\nLoading assets\n\n\nThe \n_head_includes.html\n and \n_footer_scripts.html\n Swig partials both contain logic to dynamically load the required application assets, by reading a JSON configuration file.\n\n\nConfiguration\n\n\nWe define which files will be loaded in \nsrc/swig.json\n.\n\n\nThe vendor CSS stylesheets with the \ncss_vendor\n key:\n\n\n\"css_vendor\": [\n    \"vendor/bootstrap\",\n    \"vendor/font-awesome\",\n    \"vendor/slick\"\n    ...\n]\n\n\n\nWill render in your HTML document as:\n\n\nlink rel=\"stylesheet\" href=\"css/vendor/bootstrap.css\" /\n\n\nlink rel=\"stylesheet\" href=\"css/vendor/font-awesome.css\" /\n\n\nlink rel=\"stylesheet\" href=\"css/vendor/slick.css\" /\n\n\n!-- etc. --\n\n\n\n\nThe application CSS stylesheets with the \ncss_modules\n key:\n\n\n\"css_modules\": [\n    \"app/essentials\",\n    \"app/layout\",\n    \"app/sidebar\",\n    \"app/sidebar-skins\"\n],\n\n\n\nWill render in your HTML document as:\n\n\nlink rel=\"stylesheet\" href=\"css/app/essentials.css\" /\n\n\nlink rel=\"stylesheet\" href=\"css/app/layout.css\" /\n\n\nlink rel=\"stylesheet\" href=\"css/app/sidebar.css\" /\n\n\n!-- etc. --\n\n\n\n\nSimilarly, we can configure the \njs_vendor\n and \njs_modules\n keys to load vendor and application scripts.\n\n\nNote that all the entries in this configuration are stored without a file extension (\n.css\n or \n.js\n).\n\n\nYou will notice the main application files (\njs/app/app.js\n and \ncss/app/app.css\n) are not stored in this configuration file, because they are considered special assets required by the application and will always be loaded by default.\n\n\nMinified assets and concatenated or separate libraries\n\n\nThe \n_head_includes.html\n and \n_footer_scripts.html\n Swig partials also contain logic to automatically load the minified version of the assets at build time and also toggle between using bundles and concatenated files or separate libraries. See how to \nenable minification\n and \nswitch concatenated files to separated libraries\n in \nthe build process\n.\n\n\n\n\nElements\n\n\nFooter\n\n\nBasic footer\n\n\nhtml\n\n    ...\n    \nbody\n\n\n        \n!-- Footer --\n\n        \ndiv class=\"footer\"\n\n            \nstrong\nYour product name\n/strong\n - Copyright\n        \n/div\n\n\n    \n/body\n\n\n/html\n\n\n\n\nSticky footer\n\n\nAdding the \nls-bottom-footer\n class on the \nhtml\n element will change the footer's position to \nfixed\n which will make it stick at the bottom area of the screen to ensure it's always visible at the same position even when the page scroll changes. It will also add the required extra spacing to the \nbody\n element to compensate for the height of the sticky footer.\n\n\nhtml class=\"ls-bottom-footer\"\n\n    ...\n\n/html\n\n\n\n\n\n\nSplit areas\n\n\ndiv class=\"split-vertical\"\n\n\n    \n!-- Split header --\n\n    \n!-- anything can go here --\n\n\n    \n!-- Split body --\n\n    \n!-- The split body will take all the remaining available height --\n\n    \n!-- height = split-vertical container height minus header and footer height --\n\n    \ndiv class=\"split-vertical-body\"\n\n        \ndiv class=\"split-vertical-cell\"\n\n\n            \n!-- scrollable area --\n\n            \ndiv data-scrollable\n\n\n                \n!-- content --\n\n                ...\n\n            \n/div\n\n\n        \n/div\n\n    \n/div\n\n\n    \n!-- Split footer --\n\n    \n!-- anything can go here --\n\n\n\n/div\n\n\n\n\nNote that the parent container of \nsplit-vertical\n needs to have the \nheight\n CSS property defined. For example, if we placed \nsplit-vertical\n directly under the \nbody\n element, then the \nhtml\n and \nbody\n would need to have \nheight: 100%; position: relative; overflow: hidden;\n.\n\n\n\n\nScrollable areas\n\n\nVertical scrollable area via the \ndata-scrollable\n attribute:\n\n\ndiv data-scrollable\n\n    ...\n\n/div\n\n\n\n\nHorizontal scrollable area via the \ndata-scrollable-h\n attribute:\n\n\ndiv data-scrollable-h\n\n    ...\n\n/div\n\n\n\n\n\n\nApplication layout with sticky footer, split and scrollable areas\n\n\nTo create a basic application layout, add the \napp-desktop\n or \napp-mobile\n class to the \nhtml\n element. \napp-mobile\n enables the application layout on both mobile and desktop devices.\n\n\nThis adds \nheight: 100%; overflow: hidden; position: relative;\n to the \nhtml\n, \nbody\n, \n#content \n .container-fluid\n and \n#content \n .container\n elements, taking the full height of the browser window.\n\n\nBasic HTML example\n\n\nhtml lang=\"en\" class=\"ls-bottom-footer app-desktop\"\n\n    ...\n    \nbody\n\n\n        \n!-- Main content area --\n\n        \ndiv id=\"content\"\n\n\n            \n!-- Split area --\n\n            \ndiv class=\"container-fluid split-vertical\"\n\n\n                \ndiv class=\"panel panel-default\"\n\n                    \ndiv class=\"panel-heading\"\n\n                        \nh4 class=\"panel-title\"\nContent Header\n/h4\n\n                    \n/div\n\n                    \ndiv class=\"panel-body\"\n\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad eos excepturi laboriosam nostrum provident voluptate. At doloremque ea molestias voluptate.\n                \n/div\n\n                \n/div\n\n\n                \n!-- Split body --\n\n                \n!-- The split body will take all the remaining available height --\n\n                \ndiv class=\"split-vertical-body\"\n\n                    \ndiv class=\"split-vertical-cell\"\n\n\n                        \n!-- Scrollable area --\n\n                        \ndiv data-scrollable\n\n                            \ndiv class=\"overflow-hidden\"\n\n\n                                \nh4\nScrollable Content Panel\n/h4\n\n                                \np\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Alias assumenda cum dolorem eveniet, illo labore mollitia rem totam veritatis voluptas.\n/p\n\n                                \nbr/\n\n\n                                \nh4\nScrollable Content Panel\n/h4\n\n                                \np\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Doloribus facilis quia voluptates! Iure, quibusdam ratione sunt unde ut vero voluptatibus.\n/p\n\n\n                            \n/div\n\n                        \n/div\n\n                        \n!-- // END [data-scrollable] --\n\n\n                    \n/div\n\n                    \n!-- // END .split-vertical-cell --\n\n\n                \n/div\n\n                \n!-- // END .split-vertical-body --\n\n\n            \n/div\n\n            \n!-- // END split area --\n\n\n        \n/div\n\n\n        \n!-- Footer --\n\n        \ndiv class=\"footer\"\n\n            \nstrong\nYour product name\n/strong\n - Copyright\n        \n/div\n\n\n    \n/body\n\n\n/html\n\n\n\n\nSwig example\n\n\nFor the following example, we'll recontruct the application layout example above, using \nSwig templates\n and some of the Swig partials included with the layout package, to compose HTML documents.\n\n\nConsider a page layout in \nsrc/html/themes/$THEME_NAME/_layout_app.html\n:\n\n\n!-- Start the HTML document --\n\n{% include \"lib/layout/html/_header.html\" { htmlClass: 'ls-bottom-footer app-desktop' } %}\n\n\n!-- The page content --\n\n\n!-- Define the content block --\n\n\n!-- This will be used by pages that extend this layout to inject their content --\n\n{% block content %}{% endblock %}\n\n\n!-- Include the footer copyright --\n\n{% include \"lib/layout/html/_footer_copyright.html\" %}\n\n\n!-- Complete the HTML document --\n\n{% include \"lib/layout/html/_footer_scripts.html\" %}\n\n\n\nAnd a simple page in \nsrc/html/themes/$THEME_NAME/page-simple-app.html\n:\n\n\n{% extends \"src/html/themes/$THEME_NAME/_layout_app.html\" %}\n\n{% block content %}\n\n    \n!-- Main content area --\n\n    \ndiv id=\"content\"\n\n\n        \n!-- Split area --\n\n        \ndiv class=\"container-fluid split-vertical\"\n\n\n            \ndiv class=\"panel panel-default\"\n\n                \ndiv class=\"panel-heading\"\n\n                    \nh4 class=\"panel-title\"\nContent Header\n/h4\n\n                \n/div\n\n                \ndiv class=\"panel-body\"\n\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad eos excepturi laboriosam nostrum provident voluptate. At doloremque ea molestias voluptate.\n                \n/div\n\n            \n/div\n\n\n            \n!-- Split body --\n\n            \n!-- The split body will take all the remaining available height --\n\n            \ndiv class=\"split-vertical-body\"\n\n                \ndiv class=\"split-vertical-cell\"\n\n\n                    \n!-- Scrollable area --\n\n                    \ndiv data-scrollable\n\n                        \ndiv class=\"overflow-hidden\"\n\n\n                            \nh4\nScrollable Content Panel\n/h4\n\n                            \np\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Alias assumenda cum dolorem eveniet, illo labore mollitia rem totam veritatis voluptas.\n/p\n\n                            \nbr/\n\n\n                            \nh4\nScrollable Content Panel\n/h4\n\n                            \np\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Doloribus facilis quia voluptates! Iure, quibusdam ratione sunt unde ut vero voluptatibus.\n/p\n\n\n                        \n/div\n\n                    \n/div\n\n                    \n!-- // END [data-scrollable] --\n\n\n                \n/div\n\n                \n!-- // END .split-vertical-cell --\n\n\n            \n/div\n\n            \n!-- // END .split-vertical-body --\n\n\n        \n/div\n\n        \n!-- // END split area --\n\n\n    \n/div\n\n    \n!-- // END #content --\n\n\n{% endblock %}\n\n\n\nNow, you can follow through the \nbuild process\n and see the compiled HTML result in your \ntheme's build path\n: \n\n\n\n\n$BUILD_PATH/$THEME_NAME/page-simple-app.html", 
            "title": "Layout"
        }, 
        {
            "location": "/reference/layout/index.html#layout", 
            "text": "We rely heavily on various Bootstrap components such as the Bootstrap Grid System to create our layouts, so if you haven't done so already, we encourage you to continue by familiarizing yourself with Bootstrap.  The layout component :   Customizes Bootstrap's grid system spacings;  Provides Swig partials for composing HTML pages in the  lib/layout/html/  directory.  Provides examples of HTML pages composed from Swig partials in  lib/layout/html/samples/  directory.   Provides elements:   A basic footer copyright line.  A sticky footer.  An application layout.  Split areas.  Scrollable areas.", 
            "title": "Layout"
        }, 
        {
            "location": "/reference/layout/index.html#requirements", 
            "text": "JavaScript  To load the layout component, from  src/js/themes/$THEME_NAME/app.js :  // Layout\nrequire('layout/js/main');  This will load  lib/layout/js/main.js  into our main application script bundle.  Less  From  src/less/themes/$THEME_NAME/app.less :  // Layout\n@import \"layout/less/layout\";  Which will load  lib/layout/less/layout.less  into our main application style bundle.   Alternative  If working with Less and Browserify bundles is not your favorite thing, you can alternatively load the pre-built static assets we have included:  !-- In the head of the HTML document --  link rel=\"stylesheet\" href=\"css/app/layout.css\" /  !-- At the bottom of the HTML document --  script src=\"js/app/layout.js\" /script", 
            "title": "Requirements"
        }, 
        {
            "location": "/reference/layout/index.html#getting-started", 
            "text": "Please refer to the official  Bootstrap documentation  and  Bootstrap layout examples .", 
            "title": "Getting started"
        }, 
        {
            "location": "/reference/layout/index.html#swig-templates", 
            "text": "Composing HTML pages with Swig partials.    lib/layout/html/_header.html :  This is the header and provides the opening  html  and  body  tags of the HTML document.    lib/layout/html/_head.html :   This is included from  _header.html  and provides the  head  part of the HTML document.    lib/layout/html/_head_includes.html :   This is included from  _head.html  and provides dynamic loading of assets required by the application in the  head  section, both CSS and   JavaScript.    lib/layout/html/_footer_scripts.html :   This provides the closing  body  and  html  tags, but also provides dynamic loading of the JavaScript required by the application, before the   closing  body  tag.", 
            "title": "Swig templates"
        }, 
        {
            "location": "/reference/layout/index.html#loading-assets", 
            "text": "The  _head_includes.html  and  _footer_scripts.html  Swig partials both contain logic to dynamically load the required application assets, by reading a JSON configuration file.  Configuration  We define which files will be loaded in  src/swig.json .  The vendor CSS stylesheets with the  css_vendor  key:  \"css_vendor\": [\n    \"vendor/bootstrap\",\n    \"vendor/font-awesome\",\n    \"vendor/slick\"\n    ...\n]  Will render in your HTML document as:  link rel=\"stylesheet\" href=\"css/vendor/bootstrap.css\" /  link rel=\"stylesheet\" href=\"css/vendor/font-awesome.css\" /  link rel=\"stylesheet\" href=\"css/vendor/slick.css\" /  !-- etc. --   The application CSS stylesheets with the  css_modules  key:  \"css_modules\": [\n    \"app/essentials\",\n    \"app/layout\",\n    \"app/sidebar\",\n    \"app/sidebar-skins\"\n],  Will render in your HTML document as:  link rel=\"stylesheet\" href=\"css/app/essentials.css\" /  link rel=\"stylesheet\" href=\"css/app/layout.css\" /  link rel=\"stylesheet\" href=\"css/app/sidebar.css\" /  !-- etc. --   Similarly, we can configure the  js_vendor  and  js_modules  keys to load vendor and application scripts.  Note that all the entries in this configuration are stored without a file extension ( .css  or  .js ).  You will notice the main application files ( js/app/app.js  and  css/app/app.css ) are not stored in this configuration file, because they are considered special assets required by the application and will always be loaded by default.  Minified assets and concatenated or separate libraries  The  _head_includes.html  and  _footer_scripts.html  Swig partials also contain logic to automatically load the minified version of the assets at build time and also toggle between using bundles and concatenated files or separate libraries. See how to  enable minification  and  switch concatenated files to separated libraries  in  the build process .", 
            "title": "Loading assets"
        }, 
        {
            "location": "/reference/layout/index.html#elements", 
            "text": "Footer  Basic footer  html \n    ...\n     body \n\n         !-- Footer -- \n         div class=\"footer\" \n             strong Your product name /strong  - Copyright\n         /div \n\n     /body  /html   Sticky footer  Adding the  ls-bottom-footer  class on the  html  element will change the footer's position to  fixed  which will make it stick at the bottom area of the screen to ensure it's always visible at the same position even when the page scroll changes. It will also add the required extra spacing to the  body  element to compensate for the height of the sticky footer.  html class=\"ls-bottom-footer\" \n    ... /html    Split areas  div class=\"split-vertical\" \n\n     !-- Split header -- \n     !-- anything can go here -- \n\n     !-- Split body -- \n     !-- The split body will take all the remaining available height -- \n     !-- height = split-vertical container height minus header and footer height -- \n     div class=\"split-vertical-body\" \n         div class=\"split-vertical-cell\" \n\n             !-- scrollable area -- \n             div data-scrollable \n\n                 !-- content -- \n                ...\n\n             /div \n\n         /div \n     /div \n\n     !-- Split footer -- \n     !-- anything can go here --  /div   Note that the parent container of  split-vertical  needs to have the  height  CSS property defined. For example, if we placed  split-vertical  directly under the  body  element, then the  html  and  body  would need to have  height: 100%; position: relative; overflow: hidden; .   Scrollable areas  Vertical scrollable area via the  data-scrollable  attribute:  div data-scrollable \n    ... /div   Horizontal scrollable area via the  data-scrollable-h  attribute:  div data-scrollable-h \n    ... /div    Application layout with sticky footer, split and scrollable areas  To create a basic application layout, add the  app-desktop  or  app-mobile  class to the  html  element.  app-mobile  enables the application layout on both mobile and desktop devices.  This adds  height: 100%; overflow: hidden; position: relative;  to the  html ,  body ,  #content   .container-fluid  and  #content   .container  elements, taking the full height of the browser window.  Basic HTML example  html lang=\"en\" class=\"ls-bottom-footer app-desktop\" \n    ...\n     body \n\n         !-- Main content area -- \n         div id=\"content\" \n\n             !-- Split area -- \n             div class=\"container-fluid split-vertical\" \n\n                 div class=\"panel panel-default\" \n                     div class=\"panel-heading\" \n                         h4 class=\"panel-title\" Content Header /h4 \n                     /div \n                     div class=\"panel-body\" \n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad eos excepturi laboriosam nostrum provident voluptate. At doloremque ea molestias voluptate.\n                 /div \n                 /div \n\n                 !-- Split body -- \n                 !-- The split body will take all the remaining available height -- \n                 div class=\"split-vertical-body\" \n                     div class=\"split-vertical-cell\" \n\n                         !-- Scrollable area -- \n                         div data-scrollable \n                             div class=\"overflow-hidden\" \n\n                                 h4 Scrollable Content Panel /h4 \n                                 p Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias assumenda cum dolorem eveniet, illo labore mollitia rem totam veritatis voluptas. /p \n                                 br/ \n\n                                 h4 Scrollable Content Panel /h4 \n                                 p Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloribus facilis quia voluptates! Iure, quibusdam ratione sunt unde ut vero voluptatibus. /p \n\n                             /div \n                         /div \n                         !-- // END [data-scrollable] -- \n\n                     /div \n                     !-- // END .split-vertical-cell -- \n\n                 /div \n                 !-- // END .split-vertical-body -- \n\n             /div \n             !-- // END split area -- \n\n         /div \n\n         !-- Footer -- \n         div class=\"footer\" \n             strong Your product name /strong  - Copyright\n         /div \n\n     /body  /html   Swig example  For the following example, we'll recontruct the application layout example above, using  Swig templates  and some of the Swig partials included with the layout package, to compose HTML documents.  Consider a page layout in  src/html/themes/$THEME_NAME/_layout_app.html :  !-- Start the HTML document -- \n{% include \"lib/layout/html/_header.html\" { htmlClass: 'ls-bottom-footer app-desktop' } %} !-- The page content --  !-- Define the content block --  !-- This will be used by pages that extend this layout to inject their content -- \n{% block content %}{% endblock %} !-- Include the footer copyright -- \n{% include \"lib/layout/html/_footer_copyright.html\" %} !-- Complete the HTML document -- \n{% include \"lib/layout/html/_footer_scripts.html\" %}  And a simple page in  src/html/themes/$THEME_NAME/page-simple-app.html :  {% extends \"src/html/themes/$THEME_NAME/_layout_app.html\" %}\n\n{% block content %}\n\n     !-- Main content area -- \n     div id=\"content\" \n\n         !-- Split area -- \n         div class=\"container-fluid split-vertical\" \n\n             div class=\"panel panel-default\" \n                 div class=\"panel-heading\" \n                     h4 class=\"panel-title\" Content Header /h4 \n                 /div \n                 div class=\"panel-body\" \n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad eos excepturi laboriosam nostrum provident voluptate. At doloremque ea molestias voluptate.\n                 /div \n             /div \n\n             !-- Split body -- \n             !-- The split body will take all the remaining available height -- \n             div class=\"split-vertical-body\" \n                 div class=\"split-vertical-cell\" \n\n                     !-- Scrollable area -- \n                     div data-scrollable \n                         div class=\"overflow-hidden\" \n\n                             h4 Scrollable Content Panel /h4 \n                             p Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias assumenda cum dolorem eveniet, illo labore mollitia rem totam veritatis voluptas. /p \n                             br/ \n\n                             h4 Scrollable Content Panel /h4 \n                             p Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloribus facilis quia voluptates! Iure, quibusdam ratione sunt unde ut vero voluptatibus. /p \n\n                         /div \n                     /div \n                     !-- // END [data-scrollable] -- \n\n                 /div \n                 !-- // END .split-vertical-cell -- \n\n             /div \n             !-- // END .split-vertical-body -- \n\n         /div \n         !-- // END split area -- \n\n     /div \n     !-- // END #content -- \n\n{% endblock %}  Now, you can follow through the  build process  and see the compiled HTML result in your  theme's build path :    $BUILD_PATH/$THEME_NAME/page-simple-app.html", 
            "title": "Elements"
        }, 
        {
            "location": "/reference/sidebar/index.html", 
            "text": "Sidebar\n\n\nThe sidebar component\n provides:\n\n\n\n\nSidebar page layouts\n\n\nSidebar transitions\n\n\nSidebar menus: Dropdowns, Collapsibles, Tree views, List groups\n\n\nSidebar elements: Scrollable areas, Tabs, UI elements, Form components, User profiles, Branding\n\n\n\n\n\n\nRequirements\n\n\nDependencies\n\n\n\n\nLayout\n\n\n\n\nJavaScript\n\n\nTo load the sidebar component, from \nsrc/js/themes/$THEME_NAME/app.js\n:\n\n\n// Sidebar\nrequire('sidebar/js/main');\n\n\n\nThis will load \nlib/sidebar/js/main.js\n into our main application script bundle.\n\n\nLess\n\n\nFrom \nsrc/less/themes/$THEME_NAME/app.less\n:\n\n\n// Sidebar\n@import \"sidebar/less/sidebar\";\n\n\n\nWhich will load \nlib/sidebar/less/sidebar.less\n into our main application style bundle.\n\n\n\n\nRTL Support\n\n\nAdd to \nsrc/less/themes/$THEME_NAME/app.less\n, after the main component:\n\n\n// Sidebar RTL\n@import \"sidebar/less/sidebar-rtl\";\n\n\n\n\n\nAlternative\n\n\nIf working with Less and Browserify bundles is not your favorite thing, you can alternatively load the pre-built static assets we have included:\n\n\n!-- In the head of the HTML document --\n\n\nlink rel=\"stylesheet\" href=\"css/app/sidebar.css\" /\n\n\n\n!-- At the bottom of the HTML document --\n\n\nscript src=\"js/app/sidebar.js\"\n/script\n\n\n\n\n\n\nJavaScript API\n\n\nYou can interact with an initialized sidebar directly from JavaScript.\n\n\nsidebar.open(id, [options])\n\n\nOpens a sidebar by it's \nid\n attribute.\n\n\noptions\n (optional):\n\n\n{\n    // The sidebar transition effect class name.\n    effect: \"st-effect-1\",\n\n    // The sidebar transition duration in miliseconds.\n    duration: 550,\n\n    // Enable the sidebar overlay.\n    overlay: false\n}\n\n\n\nsidebar.close(id, [options])\n\n\nCloses a sidebar by it's \nid\n attribute.\n\n\noptions\n (optional):\n\n\n{\n    // The sidebar transition effect class name.\n    effect: \"st-effect-1\"\n}\n\n\n\nsidebar.options(sidebar)\n\n\nAccepts a sidebar argument (jQuery object).\nReturns the sidebar options object.\n\n\n\n\njQuery API\n\n\nYou can initialize and interact with the sidebar component via the jQuery wrappers.\n\n\n$.tkSidebar(options)\n\n\nInitializes a new sidebar.\n\n\n$('#my-sidebar').tkSidebar({\n    menuType: 'collapse',\n    toggleBar: false\n});\n\n\n\n$.tkSidebarToggleBar()\n\n\nAdds a toggle bar to a sidebar.\n\n\n$('#my-sidebar').tkSidebarToggleBar();\n\n\n\nYou can also enable the toggle bar directly when calling \n$.tkSidebar(options)\n with the option \ntoggleBar\n set to \ntrue\n:\n\n\n$('#my-sidebar').tkSidebar({\n    menuType: 'collapse',\n    toggleBar: true\n});\n\n\n\n$.tkSidebarCollapse()\n\n\nInitializes a sidebar with collapsible menus.\n\n\n$('#my-sidebar').tkSidebarCollapse();\n\n\n\nThis is the same as calling \n$.tkSidebar(options)\n with the \nmenuType\n option set to \ncollapse\n.\n\n\n$.tkSidebarDropdown()\n\n\nInitializes a sidebar with dropdown menus.\n\n\n$('#my-sidebar').tkSidebarDropdown();\n\n\n\nThis is the same as calling \n$.tkSidebar(options)\n with the \nmenuType\n option set to \ndropdown\n.\n\n\nChange menu type programatically\n\n\nYou can dynamically change the menu type of an already initialized sidebar, by calling \n$.tkSidebarDropdown()\n on a element that was initialized with collapsible menus and \n$.tkSidebarCollapse()\n on a element that was initialized with dropdown menus.\n\n\n\n\nEvents\n\n\nsidebar.shown\n\n\n$(document).on('sidebar.shown', function (event, data) {\n    if (data.target == \"#my-sidebar\") {\n        // do something when #my-sidebar is completely visible\n        console.log(data.sidebar);\n    }\n});\n\n\n\nsidebar.hidden\n\n\n$(document).on('sidebar.hidden', function (event, data) {\n    if (data.target == \"#my-sidebar\") {\n        // do something when #my-sidebar is completely hidden\n        console.log(data.sidebar);\n    }\n});\n\n\n\nsidebar.show\n\n\n$(document).on('sidebar.show', function (event, data) {\n    if (data.target == \"#my-sidebar\") {\n        // do something when #my-sidebar starts to open\n        console.log(data.sidebar);\n    }\n});\n\n\n\nsidebar.hide\n\n\n$(document).on('sidebar.hide', function (event, data) {\n    if (data.target == \"#my-sidebar\") {\n        // do something when #my-sidebar starts to close\n        console.log(data.sidebar);\n    }\n});\n\n\n\n\n\nMarkup API\n\n\nYou can initialize a sidebar directly through markup, by adding the \nsidebar\n class to any element.\n\n\ndiv class=\"sidebar\" id=\"sidebar\"\n/div\n\n\n\n\nAny sidebar element must have a unique \nid\n attribute.\n\n\n\n\nSidebar menus\n\n\nTo initialize a sidebar with collapsible menus:\n\n\ndiv class=\"sidebar\" id=\"sidebar\" data-type=\"collapse\"\n/div\n\n\n\n\nOr, dropdown menus:\n\n\ndiv class=\"sidebar\" id=\"sidebar\" data-type=\"dropdown\"\n/div\n\n\n\n\nTo create a menu, add an unordered list with the class \nsidebar-menu\n. You can have multiple sidebar menus within the same sidebar.\n\n\ndiv class=\"sidebar\" id=\"sidebar\"\n\n\n    \n!-- A simple sidebar menu --\n\n    \nul class=\"sidebar-menu\"\n\n        \nli\na href=\"#\"\nspan\nMy menu item\n/span\n/a\n/li\n\n    \n/ul\n\n\n    \n!-- // Arbitrary markup here --\n\n\n    \n!-- Another sidebar menu within the same sidebar --\n\n    \nul class=\"sidebar-menu\"\n\n        \nli\na href=\"#\"\nspan\nAnother menu item\n/span\n/a\n/li\n\n    \n/ul\n\n\n\n/div\n\n\n\n\nSidebar submenus\n\n\nWhether you're using dropdown or collapsible menus, the HTML markup for submenus will alway be the same:\n\n\ndiv class=\"sidebar\" id=\"sidebar\" data-type=\"dropdown\"\n\n    \nul class=\"sidebar-menu\"\n\n\n        \n!-- Top level menu items --\n\n        \nli\na href=\"#\"\nspan\nMy menu item\n/span\n/a\n/li\n\n\n        \n!-- Submenus --\n\n        \nli class=\"hasSubmenu\"\n\n            \na href=\"#submenu\"\nspan\nMy submenu trigger\n/span\n/a\n\n            \nul id=\"submenu\"\n\n                \nli\na href=\"#\"\nspan\nMy submenu item\n/span\n/a\n/li\n\n            \n/ul\n\n        \n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\nNote that when we create a submenu, we always:\n\n\n\n\nnest another \nul\n into a parent top level \nli\n.\n\n\nadd the class \nhasSubmenu\n on the parent top level \nli\n.\n\n\nadd a unique id attribute on the nested \nul\n submenu.\n\n\nreference the submenu id on the \nhref\n attribute of the parent link.\n\n\n\n\nActive menu items\n\n\ndiv class=\"sidebar\" id=\"sidebar\" data-type=\"dropdown\"\n\n    \nul class=\"sidebar-menu\"\n\n\n        \n!-- Top level menu items --\n\n        \nli class=\"active\"\na href=\"#\"\nspan\nMy menu item\n/span\n/a\n/li\n\n\n        \n!-- Submenus --\n\n        \nli class=\"hasSubmenu open\"\n\n            \na href=\"#submenu\"\nspan\nMy submenu trigger\n/span\n/a\n\n            \nul id=\"submenu\"\n\n                \nli\na href=\"#\"\nspan\nMy submenu item\n/span\n/a\n/li\n\n            \n/ul\n\n        \n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\nNote:\n\n\n\n\nthe \nactive\n class can be added to any \nli\n, top level or submenus;\n\n\n\n\nOpen submenus\n\n\ndiv class=\"sidebar\" id=\"sidebar\" data-type=\"collapse\"\n\n    \nul class=\"sidebar-menu\"\n\n\n        \n!-- Submenus --\n\n        \nli class=\"hasSubmenu open\"\n\n            \na href=\"#submenu\"\nspan\nMy submenu trigger\n/span\n/a\n\n            \nul id=\"submenu\" class=\"in\"\n\n                \nli\na href=\"#\"\nspan\nMy submenu item\n/span\n/a\n/li\n\n            \n/ul\n\n        \n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\nNote:\n\n\n\n\nthe \nopen\n class can be added to any \nli.hasSubmenu\n;\n\n\nwhen using collapsible submenus, we must add an additional \nin\n class to the submenu \nul\n in order to make it open by default.\n\n\n\n\nIcons\n\n\ndiv class=\"sidebar\" id=\"sidebar\"\n\n    \nul class=\"sidebar-menu\"\n\n        \nli\n\n            \na href=\"#\"\n\n                \ni class=\"fa fa-bar-chart\"\n/i\n\n                \nspan\nCharts\n/span\n\n            \n/a\n\n        \n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\n\nSidebar list groups\n\n\nDefault\n\n\nAdd the \nlist-group-menu\n class to any \nlist-group\n unordered list within the \nsidebar\n element to create a simple, but stylish, one level menu.\n\n\ndiv class=\nsidebar\n id=\nsidebar\n\n\n    \nh4 class=\ncategory\ni class=\nfa fa-folder-open\n/i\n Default\n/h4\n\n    \ndiv class=\nsidebar-block\n\n        \nul class=\nlist-group list-group-menu\n\n            \nli class=\nlist-group-item\n\n                \na href=\n#\nspan class=\nbadge pull-right\n120+\n/span\n Design\n/a\n\n            \n/li\n\n            \nli class=\nlist-group-item active\n\n                \na href=\n#\nspan class=\nbadge pull-right\n30+\n/span\n Programming\n/a\n\n            \n/li\n\n            \nli class=\nlist-group-item\n\n                \na href=\n#\nspan class=\nbadge pull-right\n40+\n/span\n WordPress\n/a\n\n            \n/li\n\n            \nli class=\nlist-group-item\n\n                \na href=\n#\nspan class=\nbadge pull-right\n60+\n/span\n Workflow\n/a\n\n            \n/li\n\n            \nli class=\nlist-group-item\n\n                \na href=\n#\nspan class=\nbadge pull-right\n15+\n/span\n HTML\n/a\n\n            \n/li\n\n            \nli class=\nlist-group-item\n\n                \na href=\n#\nspan class=\nbadge pull-right\n25+\n/span\n CSS\n/a\n\n            \n/li\n\n            \nli class=\nlist-group-item\n\n                \na href=\n#\nspan class=\nbadge pull-right\n35+\n/span\n iOS\n/a\n\n            \n/li\n\n            \nli class=\nlist-group-item\n\n                \na href=\n#\nspan class=\nbadge pull-right\n20+\n/span\n Free\n/a\n\n            \n/li\n\n        \n/ul\n\n    \n/div\n\n\n\n/div\n\n\n\n\n\nStriped\n\n\nAdditionaly, add the \nlist-group-striped\n class to any \nlist-group-menu\n within the \nsidebar\n element to enable a striped style type.\n\n\ndiv class=\nsidebar\n id=\nsidebar\n\n\n    \nh4 class=\ncategory\ni class=\nfa fa-folder-open\n/i\n Striped\n/h4\n\n    \nul class=\nsidebar-block list-group list-group-menu list-group-striped\n\n        \nli class=\nlist-group-item\n\n            \na href=\n#\nspan class=\nbadge pull-right\n120+\n/span\n Design\n/a\n\n        \n/li\n\n        \nli class=\nlist-group-item active\n\n            \na href=\n#\nspan class=\nbadge pull-right\n30+\n/span\n Programming\n/a\n\n        \n/li\n\n        \nli class=\nlist-group-item\n\n            \na href=\n#\nspan class=\nbadge pull-right\n40+\n/span\n WordPress\n/a\n\n        \n/li\n\n        \nli class=\nlist-group-item\n\n            \na href=\n#\nspan class=\nbadge pull-right\n60+\n/span\n Workflow\n/a\n\n        \n/li\n\n        \nli class=\nlist-group-item\n\n            \na href=\n#\nspan class=\nbadge pull-right\n15+\n/span\n HTML\n/a\n\n        \n/li\n\n        \nli class=\nlist-group-item\n\n            \na href=\n#\nspan class=\nbadge pull-right\n25+\n/span\n CSS\n/a\n\n        \n/li\n\n        \nli class=\nlist-group-item\n\n            \na href=\n#\nspan class=\nbadge pull-right\n35+\n/span\n iOS\n/a\n\n        \n/li\n\n        \nli class=\nlist-group-item\n\n            \na href=\n#\nspan class=\nbadge pull-right\n20+\n/span\n Free\n/a\n\n        \n/li\n\n    \n/ul\n\n\n\n/div\n\n\n\n\n\nMinimal\n\n\nAdd the \nlist-group-minimal\n class to any \nlist-group-menu\n unordered list within the \nsidebar\n element to remove borders.\n\n\ndiv class=\nsidebar\n id=\nsidebar\n\n\n    \nh4 class=\ncategory\ni class=\nfa fa-folder-open\n/i\n Minimal\n/h4\n\n    \nul class=\nsidebar-block list-group list-group-menu list-group-minimal\n\n        \nli class=\nlist-group-item\n\n            \na href=\n#\nspan class=\nbadge pull-right\n120+\n/span\n Design\n/a\n\n        \n/li\n\n        \nli class=\nlist-group-item active\n\n            \na href=\n#\nspan class=\nbadge pull-right\n30+\n/span\n Programming\n/a\n\n        \n/li\n\n        \nli class=\nlist-group-item\n\n            \na href=\n#\nspan class=\nbadge pull-right\n40+\n/span\n WordPress\n/a\n\n        \n/li\n\n        \nli class=\nlist-group-item\n\n            \na href=\n#\nspan class=\nbadge pull-right\n60+\n/span\n Workflow\n/a\n\n        \n/li\n\n        \nli class=\nlist-group-item\n\n            \na href=\n#\nspan class=\nbadge pull-right\n15+\n/span\n HTML\n/a\n\n        \n/li\n\n        \nli class=\nlist-group-item\n\n            \na href=\n#\nspan class=\nbadge pull-right\n25+\n/span\n CSS\n/a\n\n        \n/li\n\n        \nli class=\nlist-group-item\n\n            \na href=\n#\nspan class=\nbadge pull-right\n35+\n/span\n iOS\n/a\n\n        \n/li\n\n        \nli class=\nlist-group-item\n\n            \na href=\n#\nspan class=\nbadge pull-right\n20+\n/span\n Free\n/a\n\n        \n/li\n\n    \n/ul\n\n\n\n/div\n\n\n\n\n\n\n\nSidebar tree views\n\n\nIn addition to dropdown menus, collapsible menus and list group menus, you can also have sidebars with \ntree views\n.\n\n\ndiv class=\nsidebar right sidebar-size-2 sidebar-offset-0 sidebar-skin-white sidebar-visible-desktop\n\n    \ndiv data-scrollable\n\n        \nh4 class=\ncategory\ni class=\nfa fa-folder-open\n/i\n Tree Views\n/h4\n\n        \ndiv class=\nsidebar-block sidebar-block-full\n\n\n            \n!-- Tree view --\n\n            \ndiv data-toggle=\ntree\n\n                \nul style=\ndisplay: none;\n\n                    \nli class=\nactive\nitem1\n/li\n\n                    \nli\nitem2\n/li\n\n                    \nli class=\nfolder expanded\n\n                        Folder \nem\n1\n/em\n\n                        \nul\n\n                            \nli\nSub-item 3.1\n                                \nul\n\n                                    \nli\nSub-item 3.1.1\n/li\n\n                                    \nli\nSub-item 3.1.2\n/li\n\n                                \n/ul\n\n                            \n/li\n\n                            \nli\nSub-item 3.2\n                                \nul\n\n                                    \nli\nSub-item 3.2.1\n/li\n\n                                    \nli\nSub-item 3.2.2\n/li\n\n                                \n/ul\n\n                            \n/li\n\n                        \n/ul\n\n                    \n/li\n\n                    \nli class=\nexpanded\n\n                        Document with children\n                        \nul\n\n                            \nli class=\nexpanded\nSub-item 4.1\n                                \nul\n\n                                    \nli\nSub-item 4.1.1\n/li\n\n                                    \nli\nSub-item 4.1.2\n/li\n\n                                \n/ul\n\n                            \n/li\n\n                            \nli\nSub-item 4.2\n                                \nul\n\n                                    \nli\nSub-item 4.2.1\n/li\n\n                                    \nli\nSub-item 4.2.2\n/li\n\n                                \n/ul\n\n                            \n/li\n\n                        \n/ul\n\n                    \n/li\n\n                    \nli class=\nfolder expanded\n\n                        Folder \nem\n2\n/em\n\n                        \nul\n\n                            \nli\nSub-item 5.1\n                                \nul\n\n                                    \nli\nSub-item 5.1.1\n/li\n\n                                    \nli\nSub-item 5.1.2\n/li\n\n                                \n/ul\n\n                            \n/li\n\n                            \nli\nSub-item 5.2\n                                \nul\n\n                                    \nli\nSub-item 5.2.1\n/li\n\n                                    \nli\nSub-item 5.2.2\n/li\n\n                                \n/ul\n\n                            \n/li\n\n                        \n/ul\n\n                    \n/li\n\n                \n/ul\n\n            \n/div\n\n            \n!-- // END tree view --\n\n\n        \n/div\n\n        \n!-- // END .sidebar-block --\n\n\n    \n/div\n\n    \n!-- // END scrollable --\n\n\n\n/div\n\n\n\n\n\n\n\nScrollable sidebar\n\n\nWhen we have many menu items or other sidebar elements, it's probably desirable to make use of a scrollable area within the sidebar, which can be useful specially on small screens of mobile devices.\n\n\ndiv class=\"sidebar\" id=\"sidebar\"\n\n    \ndiv data-scrollable\n\n        \n!-- anything that goes here is scrollable (if necessary) --\n\n    \n/div\n\n\n/div\n\n\n\n\n\n\nSidebar positioning\n\n\nTo position a sidebar, add the \nleft\n or \nright\n class to the sidebar element.\n\n\ndiv class=\"sidebar left\" id=\"sidebar\"\n/div\n\n\n\n\n\n\nSidebar visiblity\n\n\nBy default, all sidebars are hidden on any device screen. To make a sidebar visible by default, add any of the following classes to the sidebar element:\n\n\n\n\nsidebar-visible-desktop\n for desktop;\n\n\nsidebar-visible-mobile\n for mobile screens.\n\n\n\n\ndiv class=\nsidebar left sidebar-visible-desktop\n id=\nsidebar\n/div\n\n\n\n\n\nTo display the sidebars on the page that have at least one of the \nsidebar-visible-*\n classes, you must also apply the \nshow-sidebar\n class to the \nhtml\n tag.\n\n\n\n\nSidebar size\n\n\nFixed size\n\n\nAny screen size\n:\n\n\nThere are three predefined classes for fixed pixel based sizes that we can apply to a sidebar element:\n\n\n\n\nsidebar-size-1\n: applies a width of \n56px\n to the sidebar and hides all content within the sidebar except the main menu icons;\n\n\nsidebar-size-2\n: applies a width of \n200px\n to the sidebar;\n\n\nsidebar-size-3\n: applies a width of \n250px\n to the sidebar;\n\n\n\n\nsidebar-offset-$size\n: \n\n\n\n\nrequired for any sidebar element;\n\n\nsets the position of the sidebar in relation to other sidebar elements and the rest of the layout;\n\n\nallows multiple sidebars to be placed in specific placements on each side;\n\n\n$size\n must be one of the predefined sizes (1-3);\n\n\nfor example, a sidebar element with \n.left\n and \n.sidebar-offset-2\n will leave a gap for another \n.sidebar-size-2\n element, starting from the left of the screen;\n\n\nfor a single sidebar on it's side (left or right), the \n$size\n needs to be \n0\n, so add the class \nsidebar-offset-0\n to the sidebar element;\n\n\n\n\n\n\n\n\nSpecific screen sizes\n:\n\n\nAdditionally, we can control the size of our sidebars on any specific screen size, by adding the follwing classes to the sidebar element:\n\n\n\n\nsidebar-size-$screen-$size\n: applies the sidebar \n$size\n on a specific \n$screen\n;\n\n\nsidebar-offset-$screen-$size\n: required when using the class above.\n\n\n\n\n$screen\n can be substituted with any of the following: \nxs\n, \nsm\n, \nmd\n, \nlg\n.\n\n\nExamples\n:\n\n\n\n\n\n\nA single sidebar of 200px width, visible on desktop by default and positioned on the left:\n\n\ndiv class=\"sidebar left sidebar-visible-desktop sidebar-size-2 sidebar-offset-0\" id=\"sidebar\"\n/div\n\n\n\n\n\n\n\n\nTwo sidebars, visible on desktop by default and positioned on the left, next to each other, and additionally:\n\n\nThe \nfirst sidebar\n has a width of 56px;\n\n\nThe \nsecond sidebar\n has a width of 200px.\n\n\n!-- First sidebar --\n\n\ndiv class=\"sidebar left sidebar-visible-desktop sidebar-size-1 sidebar-offset-0\" id=\"first-sidebar\"\n/div\n\n\n\n!-- Second sidebar --\n\n\ndiv class=\"sidebar left sidebar-visible-desktop sidebar-size-2 sidebar-offset-1\" id=\"second-sidebar\"\n/div\n\n\n\n\n\n\n\n\nTwo sidebars, visible on desktop by default and positioned on the left, next to each other, and additionally:\n\n\nThe \nfirst sidebar\n has a width of 56px on desktop \nand\n is visible by default on mobile \nand\n has a width of 200px on mobile;\n\n\nThe \nsecond sidebar\n has a width of 250px.\n\n\n!-- First sidebar --\n\n\ndiv class=\"sidebar left sidebar-visible-desktop sidebar-visible-mobile sidebar-size-1 sidebar-offset-0 sidebar-size-xs-2 sidebar-offset-xs-0\" id=\"first-sidebar\"\n/div\n\n\n\n!-- Second sidebar --\n\n\ndiv class=\"sidebar left sidebar-visible-desktop sidebar-size-3 sidebar-offset-1\" id=\"second-sidebar\"\n/div\n\n\n\n\n\n\n\n\nPercentage size\n\n\nIn addition to the predefined fixed pixel based sizes, the sidebars can also have a percentage based width, between 25% to 100% in 1% increments.\n\n\nAdd the \nsidebar-size-$SIZEpc\n class to the sidebar element, substituting \n$SIZE\n with any value from 25 to 100. Additionally, you can condition the \n$SIZE\n to a specific \n$screen\n size with \nsidebar-size-$screen-$SIZEpc\n.\n\n\nLimitations\n:\n\n\nNote that you can't use a mix of two sidebars that are positioned on the same size (e.g. both left), when both sidebars have to be visible at once and when one of the sidebars has a fixed pixel based width and the other sidebar has a percentage based width.\n\n\nExamples\n:\n\n\nA sidebar visible on desktop, positioned on left, has a width of 200px by default on any screen size, has a width of 25% on large desktop screens and 30% on medium desktop screens:\n\n\ndiv class=\"sidebar left sidebar-visible-desktop sidebar-size-2 sidebar-offset-0 sidebar-size-md-30pc sidebar-size-lg-25pc\" id=\"sidebar\"\n/div\n\n\n\n\n\n\nSidebar skins\n\n\nThere are two core sidebar skins included. Apply one of the following classes to the \nsidebar\n element.\n\n\n\n\nsidebar-skin-dark\n\n\nsidebar-skin-white\n\n\n\n\nExample\n:\n\n\ndiv class=\nsidebar left sidebar-visible-desktop sidebar-size-2 sidebar-offset-0 sidebar-skin-white\n id=\nsidebar\n/div\n\n\n\n\n\n\n\nSidebar page layouts\n\n\nUp to this point we've covered the structure of a sidebar element, creating sidebar menus and the usage for various sidebar options like the size and position. Now, it's time to understand sidebars in the context of a complete page layout.\n\n\nWhen using sidebars, we must instruct the layout where the sidebars are positioned on the page in order to accommodate them. The following classes must be added on the \nhtml\n element, that will apply the required layout spacings when we display sidebars.\n\n\n\n\nSingle sidebar on one side\n\n\nThese classes must be used when there is single sidebar on each side. For example, one sidebar on the left side and/or one sidebar on the right side.\n\n\nWhen using fixed px based sidebar sizes\n\n\nSubstitute \n$size\n with any valid sidebar size class suffix: \n1\n, \n2\n or \n3\n:\n\n\nAny screen size\n:\n\n\n\n\nsidebar-l$size\n used for a fixed-width left sidebar on any screen size.\n\n\nsidebar-r$size\n used for a fixed-width right sidebar on any screen size.\n\n\n\n\nSpecific screen size\n:\n\n\nWe can control sidebar page layouts on specific screen sizes. Substitute \n$screen\n with \nxs\n, \nsm\n, \nmd\n or \nlg\n:\n\n\n\n\nsidebar-l$size-$screen\n\n\nsidebar-r$size-$screen\n\n\n\n\nWhen using fluid percentage based sidebar sizes\n\n\nSubstitute \n$SIZE\n with any value between \n25\n and \n100\n:\n\n\nAny screen size\n:\n\n\n\n\nsidebar-l-$SIZEpc\n used for a fluid-width left sidebar on any screen size.\n\n\nsidebar-r-$SIZEpc\n used for a fluid-width right sidebar on any screen size.\n\n\n\n\nSpecific screen size\n:\n\n\nSubstitute \n$screen\n with \nxs\n, \nsm\n, \nmd\n or \nlg\n:\n\n\n\n\nsidebar-l-$SIZEpc-$screen\n\n\nsidebar-r-$SIZEpc-$screen\n\n\n\n\n\n\nMultiple sidebars on one side\n\n\nThese classes must be used when there are multiple sidebars on each side. Substitute \n$sizes\n with a number formed from concatenating any of the valid sidebar sizes (\n1\n, \n2\n or \n3\n) used for the corresponding side, respecting the order of the sidebars from left to right. \n\n\nFor example, when there are 2 sidebars on the left next to each other, first sidebar of size \n1\n and second sidebar of size \n2\n, we will use \nsidebar-l-sum-12\n. If there is another sidebar on the same page, on the right side, of size \n2\n, we will also use the \nsidebar-r2\n class.\n\n\nAny screen size\n:\n\n\n\n\nsidebar-l-sum-$sizes\n used for multiple left sidebars on any screen size.\n\n\nsidebar-r-sum-$sizes\n used for multiple right sidebars on any screen size.\n\n\n\n\nSpecific screen size\n:\n\n\nSubstitute \n$screen\n with \nxs\n, \nsm\n, \nmd\n or \nlg\n:\n\n\n\n\nsidebar-l-sum-$screen-$sizes\n\n\nsidebar-r-sum-$screen-$sizes\n\n\n\n\n\n\nFor the following examples, we'll be using \nSwig templates\n. Also, note that some of the Swig templates used to construct page layouts in the following examples are explained in the \nlayout component\n.\n\n\nOne left sidebar example\n:\n\n\nIn this example, we'll create a simple layout with a single left sidebar and use them in context of a page in the application.\n\n\nConsider a page layout in \nsrc/html/themes/$THEME_NAME/_layout_single_sidebar.html\n:\n\n\n!-- Start the HTML document --\n\n{% include \"lib/layout/html/_header.html\" { htmlClass: 'show-sidebar sidebar-l2' } %}\n\n\n!-- Include a simple sidebar --\n\n{% include \"src/html/themes/$THEME_NAME/_simple_sidebar.html\" { sidebarOptions: \"left sidebar-size-2 sidebar-offset-0 sidebar-skin-dark sidebar-visible-desktop sidebar-visible-mobile\", sidebarData: \"id=sidebar-menu data-type=dropdown\" } %}\n\n\n!-- The page content --\n\n\ndiv id=\"content\"\n\n    \ndiv class=\"container-fluid\"\n\n\n       \n!-- Define the content block --\n\n       \n!-- This will be used by pages that extend this layout to inject their content --\n\n        {% block content %}{% endblock %}\n\n    \n/div\n\n\n/div\n\n\n\n!-- Complete the HTML document --\n\n{% include \"lib/layout/html/_footer_scripts.html\" %}\n\n\n\nAnd a simple sidebar element in \nsrc/html/themes/$THEME_NAME/_simple_sidebar.html\n:\n\n\ndiv class=\"sidebar{% if sidebarOptions %} {{ sidebarOptions }}{% endif %}\"{% if sidebarData %} {{ sidebarData }}{% endif %}\n\n    \ndiv data-scrollable\n\n        \nul class=\"sidebar-menu\"\n\n            \nli class=\"active\"\na href=\"#\"\nspan\nSample Menu\n/span\n/a\n/li\n\n            \nli class=\"hasSubmenu\"\n\n                \na href=\"#submenu\"\nspan\nSubmenu\n/span\n/a\n\n                \nul id=\"submenu\"\n\n                    \nli\na href=\"#\"\nspan\nSample Menu\n/span\n/a\n/li\n\n                    \nli\na href=\"#\"\nspan\nSample Menu\n/span\n/a\n/li\n\n                \n/ul\n\n            \n/li\n\n            \nli\na href=\"\"\nspan\nSample Menu\n/span\n/a\n/li\n\n            \nli\na href=\"\"\nspan\nSample Menu\n/span\n/a\n/li\n\n        \n/ul\n\n    \n/div\n\n\n/div\n\n\n\n\nAnd a simple page in \nsrc/html/themes/$THEME_NAME/page-single-sidebar.html\n:\n\n\n{% extends \"src/html/themes/$THEME_NAME/_layout_single_sidebar.html\" %}\n\n{% block content %}\n    \np\nThis is a simple page.\n/p\n\n{% endblock %}\n\n\n\nMultiple sidebars example\n:\n\n\nIn this example, we'll create a layout with 2 left sidebars and use them in context of a page in the application.\n\n\nConsider a page layout in \nsrc/html/themes/$THEME_NAME/_layout_multi_sidebars.html\n:\n\n\n!-- Start the HTML document --\n\n{% include \"lib/layout/html/_header.html\" { htmlClass: 'show-sidebar sidebar-l-sum-12' } %}\n\n\n!-- 1st left sidebar --\n\n{% include \"src/html/themes/$THEME_NAME/_simple_sidebar.html\" { sidebarOptions: \"left sidebar-size-1 sidebar-offset-0 sidebar-skin-dark sidebar-visible-desktop sidebar-visible-mobile\", sidebarData: \"id=sidebar-menu data-type=dropdown\" } %}\n\n\n!-- 2nd left sidebar --\n\n{% include \"src/html/themes/$THEME_NAME/_simple_sidebar.html\" { sidebarOptions: \"left sidebar-size-2 sidebar-offset-1 sidebar-skin-white sidebar-visible-desktop\", sidebarData: \"id=sidebar-menu-2 data-type=dropdown\" } %}\n\n\n!-- The page content --\n\n\ndiv id=\"content\"\n\n    \ndiv class=\"container-fluid\"\n\n\n       \n!-- Define the content block --\n\n       \n!-- This will be used by pages that extend this layout to inject their content --\n\n        {% block content %}{% endblock %}\n\n    \n/div\n\n\n/div\n\n\n\n!-- Complete the HTML document --\n\n{% include \"lib/layout/html/_footer_scripts.html\" %}\n\n\n\nAnd a simple page in \nsrc/html/themes/$THEME_NAME/page-multi-sidebars.html\n:\n\n\n{% extends \"src/html/themes/$THEME_NAME/_layout_multi_sidebars.html\" %}\n\n{% block content %}\n    \np\nThis is a simple page.\n/p\n\n{% endblock %}\n\n\n\nNote that we're using the same sidebar Swig template we have created from the previous example \nsrc/html/themes/$THEME_NAME/_simple_sidebar.html\n.\n\n\nNow, you can follow through the \nbuild process\n and see the compiled HTML result in your \ntheme's build path\n: \n\n\n\n\n$BUILD_PATH/$THEME_NAME/page-single-sidebar.html\n\n\n$BUILD_PATH/$THEME_NAME/page-multi-sidebars.html\n\n\n\n\n\n\nSidebar transitions\n\n\nTransition effects for off-canvas views.\n\n\nTo enable sidebar transitions we must do a few things. First, add the \nst-layout\n class to the \nhtml\n document.\n\n\nWithin the \nbody\n element:\n\n\n!-- Wrapper required for sidebar transitions --\n\n\ndiv class=\"st-container\"\n\n\n    \n!-- sidebars with the following effects MUST go OUTSIDE of the .st-pusher wrapper: --\n\n    \n!-- st-effect-1, st-effect-2, st-effect-4, st-effect-5, st-effect-9, st-effect-10, st-effect-11, st-effect-12, st-effect-13 --\n\n\n    \n!-- content push wrapper --\n\n    \ndiv class=\"st-pusher\" id=\"content\"\n\n\n        \n!-- sidebars with the following effects MUST go INSIDE the .st-pusher wrapper: --\n\n        \n!-- st-effect-3, st-effect-6, st-effect-7, st-effect-8, st-effect-14 --\n\n\n        \n!-- this is the wrapper for the content --\n\n        \ndiv class=\"st-content\"\n\n\n            \n!-- extra div for emulating position:fixed of the menu --\n\n            \ndiv class=\"st-content-inner\"\n\n\n                \n!-- Your page content --\n\n\n            \n/div\n\n            \n!-- // END .st-content-inner --\n\n\n        \n/div\n\n        \n!-- // END .st-content --\n\n\n    \n/div\n\n    \n!-- // END .st-pusher --\n\n\n\n/div\n\n\n!-- // END .st-container --\n\n\n\n\nEffects\n\n\nThere are 14 effects that can be used for sidebar transitions. The effect is configured directly on the toggle button that triggers the display of the sidebar. Add the \ndata-toggle\n attribute to any link, anywhere in the document, with a value of \nsidebar-menu\n, with the \nhref\n attribute value set to the target sidebar id and the \ndata-effect\n attribute with a valid effect class name (\nst-effect-1\n to \nst-effect-14\n).\n\n\nSlide in on top\n\n\na href=\"#sidebar-menu\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-1\" class=\"btn btn-default\"\nSlide in on top\n/a\n\n\n\n\nReveal\n\n\na href=\"#st-effect-2\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-2\" class=\"btn btn-default\"\nReveal\n/a\n\n\n\n\nPush\n\n\na href=\"#st-effect-3\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-3\" class=\"btn btn-default\"\nPush\n/a\n\n\n\n\nSlide along\n\n\na href=\"#st-effect-4\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-4\" class=\"btn btn-default\"\nSlide along\n/a\n\n\n\n\nReverse slide out\n\n\na href=\"#st-effect-5\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-5\" class=\"btn btn-default\"\nReverse slide out\n/a\n\n\n\n\nRotate pusher\n\n\na href=\"#st-effect-6\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-6\" class=\"btn btn-default\"\nRotate Pusher\n/a\n\n\n\n\n3D rotate in\n\n\na href=\"#st-effect-7\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-7\" class=\"btn btn-default\"\n3D rotate in\n/a\n\n\n\n\n3D rotate out\n\n\na href=\"#st-effect-8\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-8\" class=\"btn btn-default\"\n3D rotate out\n/a\n\n\n\n\nScale down pusher\n\n\na href=\"#st-effect-9\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-9\" class=\"btn btn-default\"\nScale down pusher\n/a\n\n\n\n\nScale up\n\n\na href=\"#st-effect-10\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-10\" class=\"btn btn-default\"\nScale up\n/a\n\n\n\n\nScale and rotate pusher\n\n\na href=\"#st-effect-11\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-11\" class=\"btn btn-default\"\nScale \namp; rotate pusher\n/a\n\n\n\n\nOpen door\n\n\na href=\"#st-effect-12\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-12\" class=\"btn btn-default\"\nOpen door\n/a\n\n\n\n\nFall down\n\n\na href=\"#st-effect-13\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-13\" class=\"btn btn-default\"\nFall down\n/a\n\n\n\n\nDelayed 3D rotate\n\n\na href=\"#st-effect-14\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-14\" class=\"btn btn-default\"\nDelayed 3D rotate\n/a\n\n\n\n\nExample\n\n\nIn this example, we'll create a layout configured for sidebar transitions, with a single left sidebar and use them in context of a page in the application.\n\n\nConsider a page layout in \nsrc/html/themes/$THEME_NAME/_layout_sidebar_transition.html\n:\n\n\n!-- Start the HTML document --\n\n{% include \"lib/layout/html/_header.html\" { htmlClass: 'show-sidebar sidebar-l2 st-layout' } %}\n\n\n!-- Wrapper required for sidebar transitions --\n\n\ndiv class=\"st-container\"\n\n\n    \n!-- sidebars with the following effects MUST go OUTSIDE of the .st-pusher wrapper: --\n\n    \n!-- st-effect-1, st-effect-2, st-effect-4, st-effect-5, st-effect-9, st-effect-10, st-effect-11, st-effect-12, st-effect-13 --\n\n\n    \n!-- For this example, we'll be using the st-effect-1 transition --\n\n    \n!-- Include a simple sidebar --\n\n    {% include \"src/html/themes/$THEME_NAME/_simple_sidebar.html\" { sidebarOptions: \"left sidebar-size-2 sidebar-offset-0 sidebar-skin-dark sidebar-visible-desktop sidebar-visible-mobile\", sidebarData: \"id=sidebar-menu data-type=dropdown\" } %}\n\n    \n!-- content push wrapper --\n\n    \ndiv class=\"st-pusher\" id=\"content\"\n\n\n        \n!-- sidebars with the following effects MUST go INSIDE the .st-pusher wrapper: --\n\n        \n!-- st-effect-3, st-effect-6, st-effect-7, st-effect-8, st-effect-14 --\n\n\n        \n!-- this is the wrapper for the content --\n\n        \ndiv class=\"st-content\"\n\n\n            \n!-- extra div for emulating position:fixed of the menu --\n\n            \ndiv class=\"st-content-inner\"\n\n\n                \n!-- The page content --\n\n                \ndiv class=\"container-fluid\"\n\n\n                    \n!-- Define the content block --\n\n                    \n!-- This will be used by pages that extend this layout to inject their content --\n\n                    {% block content %}{% endblock %}\n\n                \n/div\n\n\n            \n/div\n\n            \n!-- // END .st-content-inner --\n\n\n        \n/div\n\n        \n!-- // END .st-content --\n\n\n    \n/div\n\n    \n!-- // END .st-pusher --\n\n\n\n/div\n\n\n!-- // END .st-container --\n\n\n\n!-- Complete the HTML document --\n\n{% include \"lib/layout/html/_footer_scripts.html\" %}\n\n\n\nAnd a simple sidebar element in \nsrc/html/themes/$THEME_NAME/_simple_sidebar.html\n:\n\n\ndiv class=\"sidebar{% if sidebarOptions %} {{ sidebarOptions }}{% endif %}\"{% if sidebarData %} {{ sidebarData }}{% endif %}\n\n    \ndiv data-scrollable\n\n        \nul class=\"sidebar-menu\"\n\n            \nli class=\"active\"\na href=\"#\"\nspan\nSample Menu\n/span\n/a\n/li\n\n            \nli class=\"hasSubmenu\"\n\n                \na href=\"#submenu\"\nspan\nSubmenu\n/span\n/a\n\n                \nul id=\"submenu\"\n\n                    \nli\na href=\"#\"\nspan\nSample Menu\n/span\n/a\n/li\n\n                    \nli\na href=\"#\"\nspan\nSample Menu\n/span\n/a\n/li\n\n                \n/ul\n\n            \n/li\n\n            \nli\na href=\"\"\nspan\nSample Menu\n/span\n/a\n/li\n\n            \nli\na href=\"\"\nspan\nSample Menu\n/span\n/a\n/li\n\n        \n/ul\n\n    \n/div\n\n\n/div\n\n\n\n\nAnd a simple page in \nsrc/html/themes/$THEME_NAME/page-sidebar-transition.html\n:\n\n\n{% extends \"src/html/themes/$THEME_NAME/_layout_sidebar_transition.html\" %}\n\n{% block content %}\n    \np\nThis is a simple page.\n/p\n\n    \np\n\n        \na href=\"#sidebar-menu\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-1\" class=\"btn btn-default\"\nSlide in on top\n/a\n\n    \n/p\n\n{% endblock %}\n\n\n\nNow, you can follow through the \nbuild process\n and see the compiled HTML result in your \ntheme's build path\n: \n\n\n\n\n$BUILD_PATH/$THEME_NAME/page-sidebar-transition.html\n\n\n\n\n\n\nSidebar elements\n\n\nSidebar tabs\n\n\ndiv class=\"sidebar left sidebar-size-2 sidebar-offset-0 sidebar-skin-dark sidebar-visible-desktop\" id=\"sidebar-menu\"\n\n\n    \n!-- Split wrapper --\n\n    \ndiv class=\"split-vertical\"\n\n\n        \n!-- Tabbable component --\n\n        \ndiv class=\"tabbable tabs-icons tabs-primary\"\n\n\n            \n!-- Standard Bootstrap Tab Nav --\n\n            \nul class=\"nav nav-tabs\"\n\n                \nli class=\"active\"\n\n                    \na href=\"#sidebar-tabs-l1\" data-toggle=\"tab\"\n\n                        \ni class=\"fa fa-bar-chart-o\"\n/i\n\n                    \n/a\n\n                \n/li\n\n                \nli\n\n                    \na href=\"#sidebar-tabs-l2\" data-toggle=\"tab\"\n\n                        \ni class=\"fa fa-comments\"\n/i\n\n                    \n/a\n\n                \n/li\n\n            \n/ul\n\n            \n!-- // END .nav --\n\n\n        \n/div\n\n        \n!-- // END .tabbable --\n\n\n        \n!-- Split body --\n\n        \ndiv class=\"split-vertical-body\"\n\n            \ndiv class=\"split-vertical-cell\"\n\n\n                \n!-- Standard Bootstrap Tab Content --\n\n                \ndiv class=\"tab-content\"\n\n\n                    \n!-- Tab pane --\n\n                    \ndiv class=\"tab-pane active\" id=\"sidebar-tabs-l1\"\n\n                        \ndiv data-scrollable\n\n                            \nh4 class=\"category\"\nTab #1\n/h4\n\n                            \ndiv class=\"sidebar-block\"\n\n                                \np\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Ab amet architecto aspernatur, autem, beatae commodi consequatur dolores ducimus ea eius est ex, expedita neque ratione saepe tempora unde ut. Doloremque!\n/p\n\n                            \n/div\n\n                        \n/div\n\n                    \n/div\n\n                    \n!-- // END .tab-pane --\n\n\n                    \n!-- Tab pane --\n\n                    \ndiv class=\"tab-pane\" id=\"sidebar-tabs-l2\"\n\n                        \ndiv data-scrollable\n\n                            \nh4 class=\"category\"\nTab #2\n/h4\n\n                            \ndiv class=\"sidebar-block\"\n\n                                \np\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Ab amet architecto aspernatur, autem, beatae commodi consequatur dolores ducimus ea eius est ex, expedita neque ratione saepe tempora unde ut. Doloremque!\n/p\n\n                            \n/div\n\n                        \n/div\n\n                    \n/div\n\n                    \n!-- // END .tab-pane --\n\n\n                \n/div\n\n                \n!-- // END .tab-content --\n\n\n            \n/div\n\n        \n/div\n\n        \n!-- // END split body --\n\n\n    \n/div\n\n    \n!-- // END split wrapper --\n\n\n\n/div\n\n\n\n\nSidebar buttons\n\n\ndiv class=\"sidebar left sidebar-size-2 sidebar-offset-0 sidebar-skin-dark sidebar-visible-desktop\" id=\"sidebar-menu\"\n\n    \ndiv data-scrollable\n\n\n        \ndiv class=\"category\"\nRegular Buttons\n/div\n\n        \ndiv class=\"sidebar-block\"\n\n            \nbutton class=\"btn btn-block btn-white\"\nWhite\n/button\n\n            \nbutton class=\"btn btn-block btn-default\"\nDefault\n/button\n\n            \nbutton class=\"btn btn-block btn-success\"\nSuccess\n/button\n\n            \nbutton class=\"btn btn-block btn-warning\"\nWarning\n/button\n\n            \nbutton class=\"btn btn-block btn-danger\"\nDanger\n/button\n\n        \n/div\n\n\n        \ndiv class=\"category\"\nStacked Buttons\n/div\n\n        \ndiv class=\"sidebar-block\"\n\n            \nbutton class=\"btn btn-block btn-default btn-icon-stacked\"\n\n                \ni class=\"fa fa-2x fa-facebook\"\n/i\n \n                \nspan\nJoin using \nbr\nFacebook\n/span\n\n            \n/button\n\n            \nbutton class=\"btn btn-block btn-primary btn-icon-stacked\"\n\n                \ni class=\"fa fa-2x fa-twitter\"\n/i\n \n                \nspan\nJoin using your\nbr\nTwitter Account\n/span\n\n            \n/button\n\n            \nbutton class=\"btn btn-block btn-info btn-icon-stacked\"\n\n                \ni class=\"fa fa-2x fa-dribbble\"\n/i\n \n                \nspan\nJoin using your\nbr\nDribble Account\n/span\n\n            \n/button\n\n        \n/div\n\n\n    \n/div\n\n\n/div\n\n\n\n\nSidebar progress bars\n\n\ndiv class=\nsidebar left sidebar-size-2 sidebar-offset-0 sidebar-skin-dark sidebar-visible-desktop\n id=\nsidebar-menu\n\n    \ndiv data-scrollable\n\n\n        \ndiv class=\ncategory\nProgress Bars\n/div\n\n        \ndiv class=\nsidebar-block\n\n            \ndiv class=\nprogress\n\n                \ndiv class=\nprogress-bar\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n                    \nspan class=\nsr-only\n60% Complete\n/span\n\n                \n/div\n\n            \n/div\n\n            \ndiv class=\nprogress\n\n                \ndiv class=\nprogress-bar progress-bar-success\n role=\nprogressbar\n aria-valuenow=\n40\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 40%;\n\n                    \nspan class=\nsr-only\n40% Complete\n/span\n\n                \n/div\n\n            \n/div\n\n            \ndiv class=\nprogress\n\n                \ndiv class=\nprogress-bar progress-bar-warning\n role=\nprogressbar\n aria-valuenow=\n74\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 74%;\n\n                    \nspan class=\nsr-only\n74% Complete\n/span\n\n                \n/div\n\n            \n/div\n\n            \ndiv class=\nprogress\n\n                \ndiv class=\nprogress-bar progress-bar-danger\n role=\nprogressbar\n aria-valuenow=\n56\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 56%;\n\n                    \nspan class=\nsr-only\n56% Complete\n/span\n\n                \n/div\n\n            \n/div\n\n        \n/div\n\n\n    \n/div\n\n\n/div", 
            "title": "Sidebar"
        }, 
        {
            "location": "/reference/sidebar/index.html#sidebar", 
            "text": "The sidebar component  provides:   Sidebar page layouts  Sidebar transitions  Sidebar menus: Dropdowns, Collapsibles, Tree views, List groups  Sidebar elements: Scrollable areas, Tabs, UI elements, Form components, User profiles, Branding", 
            "title": "Sidebar"
        }, 
        {
            "location": "/reference/sidebar/index.html#requirements", 
            "text": "Dependencies   Layout   JavaScript  To load the sidebar component, from  src/js/themes/$THEME_NAME/app.js :  // Sidebar\nrequire('sidebar/js/main');  This will load  lib/sidebar/js/main.js  into our main application script bundle.  Less  From  src/less/themes/$THEME_NAME/app.less :  // Sidebar\n@import \"sidebar/less/sidebar\";  Which will load  lib/sidebar/less/sidebar.less  into our main application style bundle.   RTL Support  Add to  src/less/themes/$THEME_NAME/app.less , after the main component:  // Sidebar RTL\n@import \"sidebar/less/sidebar-rtl\";   Alternative  If working with Less and Browserify bundles is not your favorite thing, you can alternatively load the pre-built static assets we have included:  !-- In the head of the HTML document --  link rel=\"stylesheet\" href=\"css/app/sidebar.css\" /  !-- At the bottom of the HTML document --  script src=\"js/app/sidebar.js\" /script", 
            "title": "Requirements"
        }, 
        {
            "location": "/reference/sidebar/index.html#javascript-api", 
            "text": "You can interact with an initialized sidebar directly from JavaScript.  sidebar.open(id, [options])  Opens a sidebar by it's  id  attribute.  options  (optional):  {\n    // The sidebar transition effect class name.\n    effect: \"st-effect-1\",\n\n    // The sidebar transition duration in miliseconds.\n    duration: 550,\n\n    // Enable the sidebar overlay.\n    overlay: false\n}  sidebar.close(id, [options])  Closes a sidebar by it's  id  attribute.  options  (optional):  {\n    // The sidebar transition effect class name.\n    effect: \"st-effect-1\"\n}  sidebar.options(sidebar)  Accepts a sidebar argument (jQuery object).\nReturns the sidebar options object.", 
            "title": "JavaScript API"
        }, 
        {
            "location": "/reference/sidebar/index.html#jquery-api", 
            "text": "You can initialize and interact with the sidebar component via the jQuery wrappers.  $.tkSidebar(options)  Initializes a new sidebar.  $('#my-sidebar').tkSidebar({\n    menuType: 'collapse',\n    toggleBar: false\n});  $.tkSidebarToggleBar()  Adds a toggle bar to a sidebar.  $('#my-sidebar').tkSidebarToggleBar();  You can also enable the toggle bar directly when calling  $.tkSidebar(options)  with the option  toggleBar  set to  true :  $('#my-sidebar').tkSidebar({\n    menuType: 'collapse',\n    toggleBar: true\n});  $.tkSidebarCollapse()  Initializes a sidebar with collapsible menus.  $('#my-sidebar').tkSidebarCollapse();  This is the same as calling  $.tkSidebar(options)  with the  menuType  option set to  collapse .  $.tkSidebarDropdown()  Initializes a sidebar with dropdown menus.  $('#my-sidebar').tkSidebarDropdown();  This is the same as calling  $.tkSidebar(options)  with the  menuType  option set to  dropdown .  Change menu type programatically  You can dynamically change the menu type of an already initialized sidebar, by calling  $.tkSidebarDropdown()  on a element that was initialized with collapsible menus and  $.tkSidebarCollapse()  on a element that was initialized with dropdown menus.", 
            "title": "jQuery API"
        }, 
        {
            "location": "/reference/sidebar/index.html#events", 
            "text": "sidebar.shown  $(document).on('sidebar.shown', function (event, data) {\n    if (data.target == \"#my-sidebar\") {\n        // do something when #my-sidebar is completely visible\n        console.log(data.sidebar);\n    }\n});  sidebar.hidden  $(document).on('sidebar.hidden', function (event, data) {\n    if (data.target == \"#my-sidebar\") {\n        // do something when #my-sidebar is completely hidden\n        console.log(data.sidebar);\n    }\n});  sidebar.show  $(document).on('sidebar.show', function (event, data) {\n    if (data.target == \"#my-sidebar\") {\n        // do something when #my-sidebar starts to open\n        console.log(data.sidebar);\n    }\n});  sidebar.hide  $(document).on('sidebar.hide', function (event, data) {\n    if (data.target == \"#my-sidebar\") {\n        // do something when #my-sidebar starts to close\n        console.log(data.sidebar);\n    }\n});", 
            "title": "Events"
        }, 
        {
            "location": "/reference/sidebar/index.html#markup-api", 
            "text": "You can initialize a sidebar directly through markup, by adding the  sidebar  class to any element.  div class=\"sidebar\" id=\"sidebar\" /div   Any sidebar element must have a unique  id  attribute.", 
            "title": "Markup API"
        }, 
        {
            "location": "/reference/sidebar/index.html#sidebar-menus", 
            "text": "To initialize a sidebar with collapsible menus:  div class=\"sidebar\" id=\"sidebar\" data-type=\"collapse\" /div   Or, dropdown menus:  div class=\"sidebar\" id=\"sidebar\" data-type=\"dropdown\" /div   To create a menu, add an unordered list with the class  sidebar-menu . You can have multiple sidebar menus within the same sidebar.  div class=\"sidebar\" id=\"sidebar\" \n\n     !-- A simple sidebar menu -- \n     ul class=\"sidebar-menu\" \n         li a href=\"#\" span My menu item /span /a /li \n     /ul \n\n     !-- // Arbitrary markup here -- \n\n     !-- Another sidebar menu within the same sidebar -- \n     ul class=\"sidebar-menu\" \n         li a href=\"#\" span Another menu item /span /a /li \n     /ul  /div   Sidebar submenus  Whether you're using dropdown or collapsible menus, the HTML markup for submenus will alway be the same:  div class=\"sidebar\" id=\"sidebar\" data-type=\"dropdown\" \n     ul class=\"sidebar-menu\" \n\n         !-- Top level menu items -- \n         li a href=\"#\" span My menu item /span /a /li \n\n         !-- Submenus -- \n         li class=\"hasSubmenu\" \n             a href=\"#submenu\" span My submenu trigger /span /a \n             ul id=\"submenu\" \n                 li a href=\"#\" span My submenu item /span /a /li \n             /ul \n         /li \n     /ul  /div   Note that when we create a submenu, we always:   nest another  ul  into a parent top level  li .  add the class  hasSubmenu  on the parent top level  li .  add a unique id attribute on the nested  ul  submenu.  reference the submenu id on the  href  attribute of the parent link.   Active menu items  div class=\"sidebar\" id=\"sidebar\" data-type=\"dropdown\" \n     ul class=\"sidebar-menu\" \n\n         !-- Top level menu items -- \n         li class=\"active\" a href=\"#\" span My menu item /span /a /li \n\n         !-- Submenus -- \n         li class=\"hasSubmenu open\" \n             a href=\"#submenu\" span My submenu trigger /span /a \n             ul id=\"submenu\" \n                 li a href=\"#\" span My submenu item /span /a /li \n             /ul \n         /li \n     /ul  /div   Note:   the  active  class can be added to any  li , top level or submenus;   Open submenus  div class=\"sidebar\" id=\"sidebar\" data-type=\"collapse\" \n     ul class=\"sidebar-menu\" \n\n         !-- Submenus -- \n         li class=\"hasSubmenu open\" \n             a href=\"#submenu\" span My submenu trigger /span /a \n             ul id=\"submenu\" class=\"in\" \n                 li a href=\"#\" span My submenu item /span /a /li \n             /ul \n         /li \n     /ul  /div   Note:   the  open  class can be added to any  li.hasSubmenu ;  when using collapsible submenus, we must add an additional  in  class to the submenu  ul  in order to make it open by default.   Icons  div class=\"sidebar\" id=\"sidebar\" \n     ul class=\"sidebar-menu\" \n         li \n             a href=\"#\" \n                 i class=\"fa fa-bar-chart\" /i \n                 span Charts /span \n             /a \n         /li \n     /ul  /div", 
            "title": "Sidebar menus"
        }, 
        {
            "location": "/reference/sidebar/index.html#sidebar-list-groups", 
            "text": "Default  Add the  list-group-menu  class to any  list-group  unordered list within the  sidebar  element to create a simple, but stylish, one level menu.  div class= sidebar  id= sidebar \n\n     h4 class= category i class= fa fa-folder-open /i  Default /h4 \n     div class= sidebar-block \n         ul class= list-group list-group-menu \n             li class= list-group-item \n                 a href= # span class= badge pull-right 120+ /span  Design /a \n             /li \n             li class= list-group-item active \n                 a href= # span class= badge pull-right 30+ /span  Programming /a \n             /li \n             li class= list-group-item \n                 a href= # span class= badge pull-right 40+ /span  WordPress /a \n             /li \n             li class= list-group-item \n                 a href= # span class= badge pull-right 60+ /span  Workflow /a \n             /li \n             li class= list-group-item \n                 a href= # span class= badge pull-right 15+ /span  HTML /a \n             /li \n             li class= list-group-item \n                 a href= # span class= badge pull-right 25+ /span  CSS /a \n             /li \n             li class= list-group-item \n                 a href= # span class= badge pull-right 35+ /span  iOS /a \n             /li \n             li class= list-group-item \n                 a href= # span class= badge pull-right 20+ /span  Free /a \n             /li \n         /ul \n     /div  /div   Striped  Additionaly, add the  list-group-striped  class to any  list-group-menu  within the  sidebar  element to enable a striped style type.  div class= sidebar  id= sidebar \n\n     h4 class= category i class= fa fa-folder-open /i  Striped /h4 \n     ul class= sidebar-block list-group list-group-menu list-group-striped \n         li class= list-group-item \n             a href= # span class= badge pull-right 120+ /span  Design /a \n         /li \n         li class= list-group-item active \n             a href= # span class= badge pull-right 30+ /span  Programming /a \n         /li \n         li class= list-group-item \n             a href= # span class= badge pull-right 40+ /span  WordPress /a \n         /li \n         li class= list-group-item \n             a href= # span class= badge pull-right 60+ /span  Workflow /a \n         /li \n         li class= list-group-item \n             a href= # span class= badge pull-right 15+ /span  HTML /a \n         /li \n         li class= list-group-item \n             a href= # span class= badge pull-right 25+ /span  CSS /a \n         /li \n         li class= list-group-item \n             a href= # span class= badge pull-right 35+ /span  iOS /a \n         /li \n         li class= list-group-item \n             a href= # span class= badge pull-right 20+ /span  Free /a \n         /li \n     /ul  /div   Minimal  Add the  list-group-minimal  class to any  list-group-menu  unordered list within the  sidebar  element to remove borders.  div class= sidebar  id= sidebar \n\n     h4 class= category i class= fa fa-folder-open /i  Minimal /h4 \n     ul class= sidebar-block list-group list-group-menu list-group-minimal \n         li class= list-group-item \n             a href= # span class= badge pull-right 120+ /span  Design /a \n         /li \n         li class= list-group-item active \n             a href= # span class= badge pull-right 30+ /span  Programming /a \n         /li \n         li class= list-group-item \n             a href= # span class= badge pull-right 40+ /span  WordPress /a \n         /li \n         li class= list-group-item \n             a href= # span class= badge pull-right 60+ /span  Workflow /a \n         /li \n         li class= list-group-item \n             a href= # span class= badge pull-right 15+ /span  HTML /a \n         /li \n         li class= list-group-item \n             a href= # span class= badge pull-right 25+ /span  CSS /a \n         /li \n         li class= list-group-item \n             a href= # span class= badge pull-right 35+ /span  iOS /a \n         /li \n         li class= list-group-item \n             a href= # span class= badge pull-right 20+ /span  Free /a \n         /li \n     /ul  /div", 
            "title": "Sidebar list groups"
        }, 
        {
            "location": "/reference/sidebar/index.html#sidebar-tree-views", 
            "text": "In addition to dropdown menus, collapsible menus and list group menus, you can also have sidebars with  tree views .  div class= sidebar right sidebar-size-2 sidebar-offset-0 sidebar-skin-white sidebar-visible-desktop \n     div data-scrollable \n         h4 class= category i class= fa fa-folder-open /i  Tree Views /h4 \n         div class= sidebar-block sidebar-block-full \n\n             !-- Tree view -- \n             div data-toggle= tree \n                 ul style= display: none; \n                     li class= active item1 /li \n                     li item2 /li \n                     li class= folder expanded \n                        Folder  em 1 /em \n                         ul \n                             li Sub-item 3.1\n                                 ul \n                                     li Sub-item 3.1.1 /li \n                                     li Sub-item 3.1.2 /li \n                                 /ul \n                             /li \n                             li Sub-item 3.2\n                                 ul \n                                     li Sub-item 3.2.1 /li \n                                     li Sub-item 3.2.2 /li \n                                 /ul \n                             /li \n                         /ul \n                     /li \n                     li class= expanded \n                        Document with children\n                         ul \n                             li class= expanded Sub-item 4.1\n                                 ul \n                                     li Sub-item 4.1.1 /li \n                                     li Sub-item 4.1.2 /li \n                                 /ul \n                             /li \n                             li Sub-item 4.2\n                                 ul \n                                     li Sub-item 4.2.1 /li \n                                     li Sub-item 4.2.2 /li \n                                 /ul \n                             /li \n                         /ul \n                     /li \n                     li class= folder expanded \n                        Folder  em 2 /em \n                         ul \n                             li Sub-item 5.1\n                                 ul \n                                     li Sub-item 5.1.1 /li \n                                     li Sub-item 5.1.2 /li \n                                 /ul \n                             /li \n                             li Sub-item 5.2\n                                 ul \n                                     li Sub-item 5.2.1 /li \n                                     li Sub-item 5.2.2 /li \n                                 /ul \n                             /li \n                         /ul \n                     /li \n                 /ul \n             /div \n             !-- // END tree view -- \n\n         /div \n         !-- // END .sidebar-block -- \n\n     /div \n     !-- // END scrollable --  /div", 
            "title": "Sidebar tree views"
        }, 
        {
            "location": "/reference/sidebar/index.html#scrollable-sidebar", 
            "text": "When we have many menu items or other sidebar elements, it's probably desirable to make use of a scrollable area within the sidebar, which can be useful specially on small screens of mobile devices.  div class=\"sidebar\" id=\"sidebar\" \n     div data-scrollable \n         !-- anything that goes here is scrollable (if necessary) -- \n     /div  /div", 
            "title": "Scrollable sidebar"
        }, 
        {
            "location": "/reference/sidebar/index.html#sidebar-positioning", 
            "text": "To position a sidebar, add the  left  or  right  class to the sidebar element.  div class=\"sidebar left\" id=\"sidebar\" /div", 
            "title": "Sidebar positioning"
        }, 
        {
            "location": "/reference/sidebar/index.html#sidebar-visiblity", 
            "text": "By default, all sidebars are hidden on any device screen. To make a sidebar visible by default, add any of the following classes to the sidebar element:   sidebar-visible-desktop  for desktop;  sidebar-visible-mobile  for mobile screens.   div class= sidebar left sidebar-visible-desktop  id= sidebar /div   To display the sidebars on the page that have at least one of the  sidebar-visible-*  classes, you must also apply the  show-sidebar  class to the  html  tag.", 
            "title": "Sidebar visiblity"
        }, 
        {
            "location": "/reference/sidebar/index.html#sidebar-size", 
            "text": "Fixed size  Any screen size :  There are three predefined classes for fixed pixel based sizes that we can apply to a sidebar element:   sidebar-size-1 : applies a width of  56px  to the sidebar and hides all content within the sidebar except the main menu icons;  sidebar-size-2 : applies a width of  200px  to the sidebar;  sidebar-size-3 : applies a width of  250px  to the sidebar;   sidebar-offset-$size :    required for any sidebar element;  sets the position of the sidebar in relation to other sidebar elements and the rest of the layout;  allows multiple sidebars to be placed in specific placements on each side;  $size  must be one of the predefined sizes (1-3);  for example, a sidebar element with  .left  and  .sidebar-offset-2  will leave a gap for another  .sidebar-size-2  element, starting from the left of the screen;  for a single sidebar on it's side (left or right), the  $size  needs to be  0 , so add the class  sidebar-offset-0  to the sidebar element;     Specific screen sizes :  Additionally, we can control the size of our sidebars on any specific screen size, by adding the follwing classes to the sidebar element:   sidebar-size-$screen-$size : applies the sidebar  $size  on a specific  $screen ;  sidebar-offset-$screen-$size : required when using the class above.   $screen  can be substituted with any of the following:  xs ,  sm ,  md ,  lg .  Examples :    A single sidebar of 200px width, visible on desktop by default and positioned on the left:  div class=\"sidebar left sidebar-visible-desktop sidebar-size-2 sidebar-offset-0\" id=\"sidebar\" /div     Two sidebars, visible on desktop by default and positioned on the left, next to each other, and additionally:  The  first sidebar  has a width of 56px;  The  second sidebar  has a width of 200px.  !-- First sidebar --  div class=\"sidebar left sidebar-visible-desktop sidebar-size-1 sidebar-offset-0\" id=\"first-sidebar\" /div  !-- Second sidebar --  div class=\"sidebar left sidebar-visible-desktop sidebar-size-2 sidebar-offset-1\" id=\"second-sidebar\" /div     Two sidebars, visible on desktop by default and positioned on the left, next to each other, and additionally:  The  first sidebar  has a width of 56px on desktop  and  is visible by default on mobile  and  has a width of 200px on mobile;  The  second sidebar  has a width of 250px.  !-- First sidebar --  div class=\"sidebar left sidebar-visible-desktop sidebar-visible-mobile sidebar-size-1 sidebar-offset-0 sidebar-size-xs-2 sidebar-offset-xs-0\" id=\"first-sidebar\" /div  !-- Second sidebar --  div class=\"sidebar left sidebar-visible-desktop sidebar-size-3 sidebar-offset-1\" id=\"second-sidebar\" /div     Percentage size  In addition to the predefined fixed pixel based sizes, the sidebars can also have a percentage based width, between 25% to 100% in 1% increments.  Add the  sidebar-size-$SIZEpc  class to the sidebar element, substituting  $SIZE  with any value from 25 to 100. Additionally, you can condition the  $SIZE  to a specific  $screen  size with  sidebar-size-$screen-$SIZEpc .  Limitations :  Note that you can't use a mix of two sidebars that are positioned on the same size (e.g. both left), when both sidebars have to be visible at once and when one of the sidebars has a fixed pixel based width and the other sidebar has a percentage based width.  Examples :  A sidebar visible on desktop, positioned on left, has a width of 200px by default on any screen size, has a width of 25% on large desktop screens and 30% on medium desktop screens:  div class=\"sidebar left sidebar-visible-desktop sidebar-size-2 sidebar-offset-0 sidebar-size-md-30pc sidebar-size-lg-25pc\" id=\"sidebar\" /div", 
            "title": "Sidebar size"
        }, 
        {
            "location": "/reference/sidebar/index.html#sidebar-skins", 
            "text": "There are two core sidebar skins included. Apply one of the following classes to the  sidebar  element.   sidebar-skin-dark  sidebar-skin-white   Example :  div class= sidebar left sidebar-visible-desktop sidebar-size-2 sidebar-offset-0 sidebar-skin-white  id= sidebar /div", 
            "title": "Sidebar skins"
        }, 
        {
            "location": "/reference/sidebar/index.html#sidebar-page-layouts", 
            "text": "Up to this point we've covered the structure of a sidebar element, creating sidebar menus and the usage for various sidebar options like the size and position. Now, it's time to understand sidebars in the context of a complete page layout.  When using sidebars, we must instruct the layout where the sidebars are positioned on the page in order to accommodate them. The following classes must be added on the  html  element, that will apply the required layout spacings when we display sidebars.   Single sidebar on one side  These classes must be used when there is single sidebar on each side. For example, one sidebar on the left side and/or one sidebar on the right side.  When using fixed px based sidebar sizes  Substitute  $size  with any valid sidebar size class suffix:  1 ,  2  or  3 :  Any screen size :   sidebar-l$size  used for a fixed-width left sidebar on any screen size.  sidebar-r$size  used for a fixed-width right sidebar on any screen size.   Specific screen size :  We can control sidebar page layouts on specific screen sizes. Substitute  $screen  with  xs ,  sm ,  md  or  lg :   sidebar-l$size-$screen  sidebar-r$size-$screen   When using fluid percentage based sidebar sizes  Substitute  $SIZE  with any value between  25  and  100 :  Any screen size :   sidebar-l-$SIZEpc  used for a fluid-width left sidebar on any screen size.  sidebar-r-$SIZEpc  used for a fluid-width right sidebar on any screen size.   Specific screen size :  Substitute  $screen  with  xs ,  sm ,  md  or  lg :   sidebar-l-$SIZEpc-$screen  sidebar-r-$SIZEpc-$screen    Multiple sidebars on one side  These classes must be used when there are multiple sidebars on each side. Substitute  $sizes  with a number formed from concatenating any of the valid sidebar sizes ( 1 ,  2  or  3 ) used for the corresponding side, respecting the order of the sidebars from left to right.   For example, when there are 2 sidebars on the left next to each other, first sidebar of size  1  and second sidebar of size  2 , we will use  sidebar-l-sum-12 . If there is another sidebar on the same page, on the right side, of size  2 , we will also use the  sidebar-r2  class.  Any screen size :   sidebar-l-sum-$sizes  used for multiple left sidebars on any screen size.  sidebar-r-sum-$sizes  used for multiple right sidebars on any screen size.   Specific screen size :  Substitute  $screen  with  xs ,  sm ,  md  or  lg :   sidebar-l-sum-$screen-$sizes  sidebar-r-sum-$screen-$sizes    For the following examples, we'll be using  Swig templates . Also, note that some of the Swig templates used to construct page layouts in the following examples are explained in the  layout component .  One left sidebar example :  In this example, we'll create a simple layout with a single left sidebar and use them in context of a page in the application.  Consider a page layout in  src/html/themes/$THEME_NAME/_layout_single_sidebar.html :  !-- Start the HTML document -- \n{% include \"lib/layout/html/_header.html\" { htmlClass: 'show-sidebar sidebar-l2' } %} !-- Include a simple sidebar -- \n{% include \"src/html/themes/$THEME_NAME/_simple_sidebar.html\" { sidebarOptions: \"left sidebar-size-2 sidebar-offset-0 sidebar-skin-dark sidebar-visible-desktop sidebar-visible-mobile\", sidebarData: \"id=sidebar-menu data-type=dropdown\" } %} !-- The page content --  div id=\"content\" \n     div class=\"container-fluid\" \n\n        !-- Define the content block -- \n        !-- This will be used by pages that extend this layout to inject their content -- \n        {% block content %}{% endblock %}\n\n     /div  /div  !-- Complete the HTML document -- \n{% include \"lib/layout/html/_footer_scripts.html\" %}  And a simple sidebar element in  src/html/themes/$THEME_NAME/_simple_sidebar.html :  div class=\"sidebar{% if sidebarOptions %} {{ sidebarOptions }}{% endif %}\"{% if sidebarData %} {{ sidebarData }}{% endif %} \n     div data-scrollable \n         ul class=\"sidebar-menu\" \n             li class=\"active\" a href=\"#\" span Sample Menu /span /a /li \n             li class=\"hasSubmenu\" \n                 a href=\"#submenu\" span Submenu /span /a \n                 ul id=\"submenu\" \n                     li a href=\"#\" span Sample Menu /span /a /li \n                     li a href=\"#\" span Sample Menu /span /a /li \n                 /ul \n             /li \n             li a href=\"\" span Sample Menu /span /a /li \n             li a href=\"\" span Sample Menu /span /a /li \n         /ul \n     /div  /div   And a simple page in  src/html/themes/$THEME_NAME/page-single-sidebar.html :  {% extends \"src/html/themes/$THEME_NAME/_layout_single_sidebar.html\" %}\n\n{% block content %}\n     p This is a simple page. /p \n{% endblock %}  Multiple sidebars example :  In this example, we'll create a layout with 2 left sidebars and use them in context of a page in the application.  Consider a page layout in  src/html/themes/$THEME_NAME/_layout_multi_sidebars.html :  !-- Start the HTML document -- \n{% include \"lib/layout/html/_header.html\" { htmlClass: 'show-sidebar sidebar-l-sum-12' } %} !-- 1st left sidebar -- \n{% include \"src/html/themes/$THEME_NAME/_simple_sidebar.html\" { sidebarOptions: \"left sidebar-size-1 sidebar-offset-0 sidebar-skin-dark sidebar-visible-desktop sidebar-visible-mobile\", sidebarData: \"id=sidebar-menu data-type=dropdown\" } %} !-- 2nd left sidebar -- \n{% include \"src/html/themes/$THEME_NAME/_simple_sidebar.html\" { sidebarOptions: \"left sidebar-size-2 sidebar-offset-1 sidebar-skin-white sidebar-visible-desktop\", sidebarData: \"id=sidebar-menu-2 data-type=dropdown\" } %} !-- The page content --  div id=\"content\" \n     div class=\"container-fluid\" \n\n        !-- Define the content block -- \n        !-- This will be used by pages that extend this layout to inject their content -- \n        {% block content %}{% endblock %}\n\n     /div  /div  !-- Complete the HTML document -- \n{% include \"lib/layout/html/_footer_scripts.html\" %}  And a simple page in  src/html/themes/$THEME_NAME/page-multi-sidebars.html :  {% extends \"src/html/themes/$THEME_NAME/_layout_multi_sidebars.html\" %}\n\n{% block content %}\n     p This is a simple page. /p \n{% endblock %}  Note that we're using the same sidebar Swig template we have created from the previous example  src/html/themes/$THEME_NAME/_simple_sidebar.html .  Now, you can follow through the  build process  and see the compiled HTML result in your  theme's build path :    $BUILD_PATH/$THEME_NAME/page-single-sidebar.html  $BUILD_PATH/$THEME_NAME/page-multi-sidebars.html", 
            "title": "Sidebar page layouts"
        }, 
        {
            "location": "/reference/sidebar/index.html#sidebar-transitions", 
            "text": "Transition effects for off-canvas views.  To enable sidebar transitions we must do a few things. First, add the  st-layout  class to the  html  document.  Within the  body  element:  !-- Wrapper required for sidebar transitions --  div class=\"st-container\" \n\n     !-- sidebars with the following effects MUST go OUTSIDE of the .st-pusher wrapper: -- \n     !-- st-effect-1, st-effect-2, st-effect-4, st-effect-5, st-effect-9, st-effect-10, st-effect-11, st-effect-12, st-effect-13 -- \n\n     !-- content push wrapper -- \n     div class=\"st-pusher\" id=\"content\" \n\n         !-- sidebars with the following effects MUST go INSIDE the .st-pusher wrapper: -- \n         !-- st-effect-3, st-effect-6, st-effect-7, st-effect-8, st-effect-14 -- \n\n         !-- this is the wrapper for the content -- \n         div class=\"st-content\" \n\n             !-- extra div for emulating position:fixed of the menu -- \n             div class=\"st-content-inner\" \n\n                 !-- Your page content -- \n\n             /div \n             !-- // END .st-content-inner -- \n\n         /div \n         !-- // END .st-content -- \n\n     /div \n     !-- // END .st-pusher --  /div  !-- // END .st-container --   Effects  There are 14 effects that can be used for sidebar transitions. The effect is configured directly on the toggle button that triggers the display of the sidebar. Add the  data-toggle  attribute to any link, anywhere in the document, with a value of  sidebar-menu , with the  href  attribute value set to the target sidebar id and the  data-effect  attribute with a valid effect class name ( st-effect-1  to  st-effect-14 ).  Slide in on top  a href=\"#sidebar-menu\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-1\" class=\"btn btn-default\" Slide in on top /a   Reveal  a href=\"#st-effect-2\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-2\" class=\"btn btn-default\" Reveal /a   Push  a href=\"#st-effect-3\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-3\" class=\"btn btn-default\" Push /a   Slide along  a href=\"#st-effect-4\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-4\" class=\"btn btn-default\" Slide along /a   Reverse slide out  a href=\"#st-effect-5\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-5\" class=\"btn btn-default\" Reverse slide out /a   Rotate pusher  a href=\"#st-effect-6\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-6\" class=\"btn btn-default\" Rotate Pusher /a   3D rotate in  a href=\"#st-effect-7\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-7\" class=\"btn btn-default\" 3D rotate in /a   3D rotate out  a href=\"#st-effect-8\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-8\" class=\"btn btn-default\" 3D rotate out /a   Scale down pusher  a href=\"#st-effect-9\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-9\" class=\"btn btn-default\" Scale down pusher /a   Scale up  a href=\"#st-effect-10\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-10\" class=\"btn btn-default\" Scale up /a   Scale and rotate pusher  a href=\"#st-effect-11\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-11\" class=\"btn btn-default\" Scale  amp; rotate pusher /a   Open door  a href=\"#st-effect-12\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-12\" class=\"btn btn-default\" Open door /a   Fall down  a href=\"#st-effect-13\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-13\" class=\"btn btn-default\" Fall down /a   Delayed 3D rotate  a href=\"#st-effect-14\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-14\" class=\"btn btn-default\" Delayed 3D rotate /a   Example  In this example, we'll create a layout configured for sidebar transitions, with a single left sidebar and use them in context of a page in the application.  Consider a page layout in  src/html/themes/$THEME_NAME/_layout_sidebar_transition.html :  !-- Start the HTML document -- \n{% include \"lib/layout/html/_header.html\" { htmlClass: 'show-sidebar sidebar-l2 st-layout' } %} !-- Wrapper required for sidebar transitions --  div class=\"st-container\" \n\n     !-- sidebars with the following effects MUST go OUTSIDE of the .st-pusher wrapper: -- \n     !-- st-effect-1, st-effect-2, st-effect-4, st-effect-5, st-effect-9, st-effect-10, st-effect-11, st-effect-12, st-effect-13 -- \n\n     !-- For this example, we'll be using the st-effect-1 transition -- \n     !-- Include a simple sidebar -- \n    {% include \"src/html/themes/$THEME_NAME/_simple_sidebar.html\" { sidebarOptions: \"left sidebar-size-2 sidebar-offset-0 sidebar-skin-dark sidebar-visible-desktop sidebar-visible-mobile\", sidebarData: \"id=sidebar-menu data-type=dropdown\" } %}\n\n     !-- content push wrapper -- \n     div class=\"st-pusher\" id=\"content\" \n\n         !-- sidebars with the following effects MUST go INSIDE the .st-pusher wrapper: -- \n         !-- st-effect-3, st-effect-6, st-effect-7, st-effect-8, st-effect-14 -- \n\n         !-- this is the wrapper for the content -- \n         div class=\"st-content\" \n\n             !-- extra div for emulating position:fixed of the menu -- \n             div class=\"st-content-inner\" \n\n                 !-- The page content -- \n                 div class=\"container-fluid\" \n\n                     !-- Define the content block -- \n                     !-- This will be used by pages that extend this layout to inject their content -- \n                    {% block content %}{% endblock %}\n\n                 /div \n\n             /div \n             !-- // END .st-content-inner -- \n\n         /div \n         !-- // END .st-content -- \n\n     /div \n     !-- // END .st-pusher --  /div  !-- // END .st-container --  !-- Complete the HTML document -- \n{% include \"lib/layout/html/_footer_scripts.html\" %}  And a simple sidebar element in  src/html/themes/$THEME_NAME/_simple_sidebar.html :  div class=\"sidebar{% if sidebarOptions %} {{ sidebarOptions }}{% endif %}\"{% if sidebarData %} {{ sidebarData }}{% endif %} \n     div data-scrollable \n         ul class=\"sidebar-menu\" \n             li class=\"active\" a href=\"#\" span Sample Menu /span /a /li \n             li class=\"hasSubmenu\" \n                 a href=\"#submenu\" span Submenu /span /a \n                 ul id=\"submenu\" \n                     li a href=\"#\" span Sample Menu /span /a /li \n                     li a href=\"#\" span Sample Menu /span /a /li \n                 /ul \n             /li \n             li a href=\"\" span Sample Menu /span /a /li \n             li a href=\"\" span Sample Menu /span /a /li \n         /ul \n     /div  /div   And a simple page in  src/html/themes/$THEME_NAME/page-sidebar-transition.html :  {% extends \"src/html/themes/$THEME_NAME/_layout_sidebar_transition.html\" %}\n\n{% block content %}\n     p This is a simple page. /p \n     p \n         a href=\"#sidebar-menu\" data-toggle=\"sidebar-menu\" data-effect=\"st-effect-1\" class=\"btn btn-default\" Slide in on top /a \n     /p \n{% endblock %}  Now, you can follow through the  build process  and see the compiled HTML result in your  theme's build path :    $BUILD_PATH/$THEME_NAME/page-sidebar-transition.html", 
            "title": "Sidebar transitions"
        }, 
        {
            "location": "/reference/sidebar/index.html#sidebar-elements", 
            "text": "Sidebar tabs  div class=\"sidebar left sidebar-size-2 sidebar-offset-0 sidebar-skin-dark sidebar-visible-desktop\" id=\"sidebar-menu\" \n\n     !-- Split wrapper -- \n     div class=\"split-vertical\" \n\n         !-- Tabbable component -- \n         div class=\"tabbable tabs-icons tabs-primary\" \n\n             !-- Standard Bootstrap Tab Nav -- \n             ul class=\"nav nav-tabs\" \n                 li class=\"active\" \n                     a href=\"#sidebar-tabs-l1\" data-toggle=\"tab\" \n                         i class=\"fa fa-bar-chart-o\" /i \n                     /a \n                 /li \n                 li \n                     a href=\"#sidebar-tabs-l2\" data-toggle=\"tab\" \n                         i class=\"fa fa-comments\" /i \n                     /a \n                 /li \n             /ul \n             !-- // END .nav -- \n\n         /div \n         !-- // END .tabbable -- \n\n         !-- Split body -- \n         div class=\"split-vertical-body\" \n             div class=\"split-vertical-cell\" \n\n                 !-- Standard Bootstrap Tab Content -- \n                 div class=\"tab-content\" \n\n                     !-- Tab pane -- \n                     div class=\"tab-pane active\" id=\"sidebar-tabs-l1\" \n                         div data-scrollable \n                             h4 class=\"category\" Tab #1 /h4 \n                             div class=\"sidebar-block\" \n                                 p Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab amet architecto aspernatur, autem, beatae commodi consequatur dolores ducimus ea eius est ex, expedita neque ratione saepe tempora unde ut. Doloremque! /p \n                             /div \n                         /div \n                     /div \n                     !-- // END .tab-pane -- \n\n                     !-- Tab pane -- \n                     div class=\"tab-pane\" id=\"sidebar-tabs-l2\" \n                         div data-scrollable \n                             h4 class=\"category\" Tab #2 /h4 \n                             div class=\"sidebar-block\" \n                                 p Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab amet architecto aspernatur, autem, beatae commodi consequatur dolores ducimus ea eius est ex, expedita neque ratione saepe tempora unde ut. Doloremque! /p \n                             /div \n                         /div \n                     /div \n                     !-- // END .tab-pane -- \n\n                 /div \n                 !-- // END .tab-content -- \n\n             /div \n         /div \n         !-- // END split body -- \n\n     /div \n     !-- // END split wrapper --  /div   Sidebar buttons  div class=\"sidebar left sidebar-size-2 sidebar-offset-0 sidebar-skin-dark sidebar-visible-desktop\" id=\"sidebar-menu\" \n     div data-scrollable \n\n         div class=\"category\" Regular Buttons /div \n         div class=\"sidebar-block\" \n             button class=\"btn btn-block btn-white\" White /button \n             button class=\"btn btn-block btn-default\" Default /button \n             button class=\"btn btn-block btn-success\" Success /button \n             button class=\"btn btn-block btn-warning\" Warning /button \n             button class=\"btn btn-block btn-danger\" Danger /button \n         /div \n\n         div class=\"category\" Stacked Buttons /div \n         div class=\"sidebar-block\" \n             button class=\"btn btn-block btn-default btn-icon-stacked\" \n                 i class=\"fa fa-2x fa-facebook\" /i  \n                 span Join using  br Facebook /span \n             /button \n             button class=\"btn btn-block btn-primary btn-icon-stacked\" \n                 i class=\"fa fa-2x fa-twitter\" /i  \n                 span Join using your br Twitter Account /span \n             /button \n             button class=\"btn btn-block btn-info btn-icon-stacked\" \n                 i class=\"fa fa-2x fa-dribbble\" /i  \n                 span Join using your br Dribble Account /span \n             /button \n         /div \n\n     /div  /div   Sidebar progress bars  div class= sidebar left sidebar-size-2 sidebar-offset-0 sidebar-skin-dark sidebar-visible-desktop  id= sidebar-menu \n     div data-scrollable \n\n         div class= category Progress Bars /div \n         div class= sidebar-block \n             div class= progress \n                 div class= progress-bar  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n                     span class= sr-only 60% Complete /span \n                 /div \n             /div \n             div class= progress \n                 div class= progress-bar progress-bar-success  role= progressbar  aria-valuenow= 40  aria-valuemin= 0  aria-valuemax= 100  style= width: 40%; \n                     span class= sr-only 40% Complete /span \n                 /div \n             /div \n             div class= progress \n                 div class= progress-bar progress-bar-warning  role= progressbar  aria-valuenow= 74  aria-valuemin= 0  aria-valuemax= 100  style= width: 74%; \n                     span class= sr-only 74% Complete /span \n                 /div \n             /div \n             div class= progress \n                 div class= progress-bar progress-bar-danger  role= progressbar  aria-valuenow= 56  aria-valuemin= 0  aria-valuemax= 100  style= width: 56%; \n                     span class= sr-only 56% Complete /span \n                 /div \n             /div \n         /div \n\n     /div  /div", 
            "title": "Sidebar elements"
        }, 
        {
            "location": "/reference/navbar/index.html", 
            "text": "Navbar\n\n\nThe navbar package provides a large range of elements compatible with the Bootstrap Navbar component, starting from simple menus and dropdowns, to form elements, toggle buttons and other custom widget areas such as notifications, messages, files and more.\n\n\n\n\nRequirements\n\n\nJavaScript\n\n\nTo load the navbar package, from \nsrc/js/themes/$THEME_NAME/app.js\n:\n\n\n// Navbar package\nrequire('navbar/js/main');\n\n\n\nThis will load \nlib/navbar/js/main.js\n into our main application script bundle.\n\n\nLess\n\n\nFrom \nsrc/less/themes/$THEME_NAME/app.less\n:\n\n\n// Navbar package\n@import \"navbar/less/navbar\";\n\n\n\nWhich will load \nlib/navbar/less/navbar.less\n into our main application style bundle.\n\n\n\n\nRTL Support\n\n\nAdd to \nsrc/less/themes/$THEME_NAME/app.less\n, after the main component:\n\n\n// Navbar RTL\n@import \"navbar/less/navbar-rtl\";\n\n\n\n\n\nAlternative\n\n\nIf working with Less and Browserify bundles is not your favorite thing, you can alternatively load the pre-built static assets we have included:\n\n\n!-- In the head of the HTML document --\n\n\nlink rel=\"stylesheet\" href=\"css/app/navbar.css\" /\n\n\n\n!-- At the bottom of the HTML document --\n\n\nscript src=\"js/app/navbar.js\"\n/script\n\n\n\n\n\n\nBasic usage\n\n\nWe'll be using standard navbars included with Bootstrap, with some additional options. For the basic usage, see the official \nBootstrap documentation\n. Additionally, see the official \nBootstrap navbar examples\n.\n\n\nHere's a basic example of the main navbar structure. You can use it along with most of the following navbar examples.\n\n\nnav class=\nnavbar navbar-default\n\n    \ndiv class=\ncontainer-fluid\n\n\n        \n!-- Group brand and toggle for better mobile display --\n\n        \ndiv class=\nnavbar-header\n\n            \na class=\nnavbar-brand\n href=\n#\nBrand\n/a\n\n            \nbutton type=\nbutton\n class=\nnavbar-toggle\n data-toggle=\ncollapse\n data-target=\n#collapse-example-default\n\n                \nspan class=\nsr-only\nToggle navigation\n/span\n\n                \nspan class=\nicon-bar\n/span\n\n                \nspan class=\nicon-bar\n/span\n\n                \nspan class=\nicon-bar\n/span\n\n            \n/button\n\n        \n/div\n\n\n        \n!-- Group nav links, menus, forms, and other content for toggling --\n\n        \ndiv class=\nnavbar-collapse collapse\n id=\ncollapse-example-default\n\n            \n!-- ... --\n\n        \n/div\n\n\n    \n/div\n\n\n/nav\n\n\n\n\n\n\n\nNavbar skins\n\n\nDefault skin\n\n\nTo enable the default light skin, add the \nnavbar-default\n class to any \nnavbar\n element.\n\n\ndiv class=\"navbar navbar-default\"\n/div\n\n\n\n\nPrimary skin\n\n\nTo use the primary skin, simply apply the \nnavbar-primary\n class on the main \nnavbar\n container. \n\n\ndiv class=\"navbar navbar-primary\"\n/div\n\n\n\n\nInverse skin\n\n\nTo use the darker inverse skin, simply apply the \nnavbar-inverse\n class on the main \nnavbar\n container. \n\n\ndiv class=\"navbar navbar-inverse\"\n/div\n\n\n\n\n\n\nNavbar size\n\n\nThe default navbar is \n50px\n tall.\n\n\nSmall\n\n\nTo use the small navbar, \n42px\n tall, simply apply the \nnavbar-size-small\n class on the main navbar container.\n\n\ndiv class=\"navbar navbar-default navbar-size-small\"\n/div\n\n\n\n\nLarge\n\n\nTo use the large navbar, \n64px\n tall, simply apply the \nnavbar-size-large\n class on the main navbar container. Note that the large navbar applies only for medium to large screens and takes the default size for small and mobile screens.\n\n\ndiv class=\"navbar navbar-default navbar-size-large\"\n/div\n\n\n\n\nExtra large\n\n\nTo use the extra large navbar, \n80px\n tall, simply apply the \nnavbar-size-xlarge\n class on the main navbar container. Note that the extra large navbar, just like the large navbar, applies only for medium to large screens and takes the default size for small and mobile screens.\n\n\ndiv class=\"navbar navbar-default navbar-size-xlarge\"\n/div\n\n\n\n\n\n\nNavbar elements\n\n\nSimple dropdown\n\n\nWithin \nnavbar-collapse\n:\n\n\nul class=\nnav navbar-nav\n\n\n    \n!-- simple dropdown --\n\n    \nli class=\ndropdown\n\n        \na href=\n#\n class=\ndropdown-toggle\n data-toggle=\ndropdown\n\n            Dropdown \nspan class=\ncaret\n/span\n\n        \n/a\n\n        \nul class=\ndropdown-menu\n role=\nmenu\n\n            \nli class=\ndropdown-header\nHeading\n/li\n\n            \nli\na href=\n#\nEssentials\n/a\n/li\n\n            \nli class=\nactive\na href=\n#\nActive Link\n/a\n/li\n\n            \nli\na href=\n#\nTimeline\n/a\n/li\n\n            \nli\na href=\n#\nCharts\n/a\n/li\n\n            \nli\na href=\n#\nLayouts\n/a\n/li\n\n            \nli class=\ndropdown-header\nHeading\n/li\n\n            \nli\na href=\n#\nSidebars\n/a\n/li\n\n            \nli\na href=\n#\nMaps\n/a\n/li\n\n            \nli\na href=\n#\nMedia\n/a\n/li\n\n        \n/ul\n\n    \n/li\n\n    \n!-- // END simple dropdown --\n\n\n\n/ul\n\n\n\n\n\nHover dropdown\n\n\nYou can trigger the display of dropdown menus on mouse over events instead of the default click, by adding the \nnavbar-dropdown-hover\n class on the \nnavbar\n element.\n\n\ndiv class=\"navbar navbar-default navbar-dropdown-hover\"\n/div\n\n\n\n\nLogin dropdown form\n\n\nWithin \nnavbar-collapse\n:\n\n\nul class=\nnav navbar-nav\n\n\n    \n!-- Login --\n\n    \nli class=\ndropdown\n\n        \na href=\n#\n class=\ndropdown-toggle\n data-toggle=\ndropdown\n\n            \ni class=\nfa fa-fw fa-lock\n/i\n Login\n        \n/a\n\n        \ndiv class=\ndropdown-menu dropdown-size-280\n\n            \nform\n\n                \ndiv class=\nform-group\n\n                    \ndiv class=\ninput-group\n\n                        \nspan class=\ninput-group-addon\ni class=\nfa fa-user\n/i\n/span\n\n                        \ninput type=\ntext\n class=\nform-control\n placeholder=\nUsername\n\n                    \n/div\n\n                \n/div\n\n                \ndiv class=\nform-group\n\n                    \ndiv class=\ninput-group\n\n                        \nspan class=\ninput-group-addon\ni class=\nfa fa-shield\n/i\n/span\n\n                        \ninput type=\npassword\n class=\nform-control\n placeholder=\nPassword\n\n                    \n/div\n\n                \n/div\n\n                \ndiv class=\ntext-center\n\n                    \nbutton type=\nsubmit\n class=\nbtn btn-primary\n\n                        Login \ni class=\nfa fa-sign-in\n/i\n\n                    \n/button\n\n                \n/div\n\n            \n/form\n\n        \n/div\n\n    \n/li\n\n    \n!-- // END login --\n\n\n\n/ul\n\n\n\n\n\nSign up dropdown form\n\n\nWithin \nnavbar-collapse\n:\n\n\nul class=\nnav navbar-nav\n\n\n    \n!-- Sign up --\n\n    \nli class=\ndropdown\n\n        \na href=\n#\n class=\ndropdown-toggle\n data-toggle=\ndropdown\n\n            \ni class=\nfa fa-fw fa-plus\n/i\n Sign Up\n        \n/a\n\n        \ndiv class=\ndropdown-menu dropdown-size-280\n\n            \nform\n\n                \ndiv class=\nrow\n\n                    \ndiv class=\ncol-md-6\n\n                        \ndiv class=\nform-group form-control-default\n\n                            \nlabel for=\nexampleInputFirstName\nFirst name\n/label\n\n                            \ninput type=\ntext\n class=\nform-control\n id=\nexampleInputFirstName\n placeholder=\nYour first name\n\n                        \n/div\n\n                    \n/div\n\n                    \ndiv class=\ncol-md-6\n\n                        \ndiv class=\nform-group form-control-default\n\n                            \nlabel for=\nexampleInputLastName\nLast name\n/label\n\n                            \ninput type=\ntext\n class=\nform-control\n id=\nexampleInputLastName\n placeholder=\nYour last name\n\n                        \n/div\n\n                    \n/div\n\n                \n/div\n\n                \ndiv class=\nform-group form-control-default required\n\n                    \nlabel for=\nexampleInputEmail1\nEmail address\n/label\n\n                    \ninput type=\nemail\n class=\nform-control\n id=\nexampleInputEmail1\n placeholder=\nEnter email\n\n                \n/div\n\n                \ndiv class=\nform-group form-control-default required\n\n                    \nlabel for=\nexampleInputPassword1\nPassword\n/label\n\n                    \ninput type=\npassword\n class=\nform-control\n id=\nexampleInputPassword1\n placeholder=\nPassword\n\n                \n/div\n\n                \nbutton type=\nsubmit\n class=\nbtn btn-primary\nSubmit\n/button\n\n            \n/form\n\n        \n/div\n\n    \n/li\n\n    \n!-- // END sign up --\n\n\n\n/ul\n\n\n\n\n\nDatepicker\n\n\nWithin \nnavbar-collapse\n:\n\n\nul class=\nnav navbar-nav\n\n\n    \n!-- datepicker --\n\n    \nli class=\ndropdown notifications\n\n        \na href=\n#\n class=\ndropdown-toggle\n data-toggle=\ndropdown\n\n            \ni class=\nfa fa-calendar-o\n/i\n\n            \nspan class=\nbadge small floating\n4\n/span\n\n        \n/a\n\n\n        \ndiv class=\ndropdown-menu\n style=\nwidth: auto !important\n\n            \ndiv class=\ndatepicker\n/div\n\n        \n/div\n\n    \n/li\n\n    \n!-- // END datepicker --\n\n\n\n/ul\n\n\n\n\n\nNotifications\n\n\nWithin \nnavbar-collapse\n:\n\n\nul class=\nnav navbar-nav\n\n\n    \n!-- notifications --\n\n    \nli class=\ndropdown notifications updates\n\n        \na href=\n#\n class=\ndropdown-toggle\n data-toggle=\ndropdown\n\n            \ni class=\nfa fa-bell-o\n/i\n\n            \nspan class=\nbadge badge-primary\n4\n/span\n\n        \n/a\n\n        \nul class=\ndropdown-menu\n role=\nnotification\n\n            \nli class=\ndropdown-header\nNotifications\n/li\n\n            \nli class=\nmedia\n\n                \ndiv class=\npull-right\n\n                    \nspan class=\nlabel label-success\nNew\n/span\n\n                \n/div\n\n                \ndiv class=\nmedia-left\n\n                    \nimg src=\nimages/people/50/guy-2.jpg\n alt=\npeople\n class=\nimg-circle\n width=\n30\n\n                \n/div\n\n                \ndiv class=\nmedia-body\n\n                    \na href=\n#\nAdrian D.\n/a\n posted \na href=\n#\na photo\n/a\n \n                    on his timeline. \nbr/\n\n                    \nspan class=\ntext-caption text-muted\n5 mins ago\n/span\n\n                \n/div\n\n            \n/li\n\n            \nli class=\nmedia\n\n                \ndiv class=\npull-right\n\n                    \nspan class=\nlabel label-success\nNew\n/span\n\n                \n/div\n\n                \ndiv class=\nmedia-left\n\n                    \nimg src=\nimages/people/50/guy-6.jpg\n alt=\npeople\n class=\nimg-circle\n width=\n30\n\n                \n/div\n\n                \ndiv class=\nmedia-body\n\n                    \na href=\n#\nBill\n/a\n posted \na href=\n#\na comment\n/a\n \n                    on Adrian's recent \na href=\n#\npost\n/a\n. \nbr/\n\n                    \nspan class=\ntext-caption text-muted\n3 hrs ago\n/span\n\n                \n/div\n\n            \n/li\n\n            \nli class=\nmedia\n\n                \ndiv class=\nmedia-left\n\n                    \nspan class=\nicon-block s30 bg-grey-200\n\n                        \ni class=\nfa fa-plus\n/i\n\n                    \n/span\n\n                \n/div\n\n                \ndiv class=\nmedia-body\n\n                    \na href=\n#\nMary D.\n/a\n and \na href=\n#\nMichelle\n/a\n are now friends.\n                    \np\nspan class=\ntext-caption text-muted\n1 day ago\n/span\n/p\n\n                    \na href=\nimg class=\nwidth-30 img-circle\n src=\nimages/people/50/woman-6.jpg\n alt=\npeople\n/a\n\n                    \na href=\nimg class=\nwidth-30 img-circle\n src=\nimages/people/50/woman-3.jpg\n alt=\npeople\n/a\n\n                \n/div\n\n            \n/li\n\n        \n/ul\n\n    \n/li\n\n    \n!-- // END notifications --\n\n\n\n/ul\n\n\n\n\n\nMessages\n\n\nWithin \nnavbar-collapse\n:\n\n\nul class=\nnav navbar-nav\n\n\n    \n!-- messages --\n\n    \nli class=\ndropdown notifications\n\n        \na href=\n#\n class=\ndropdown-toggle\n data-toggle=\ndropdown\n\n            \ni class=\nfa fa-envelope-o\n/i\n\n            \nspan class=\nbadge floating badge-danger\n12\n/span\n\n        \n/a\n\n        \nul class=\ndropdown-menu\n\n            \nli class=\nmedia\n\n                \ndiv class=\nmedia-left\n\n                    \na href=\n#\n\n                        \nimg class=\nmedia-object thumb\n src=\nimages/people/50/guy-2.jpg\n alt=\npeople\n\n                    \n/a\n\n                \n/div\n\n                \ndiv class=\nmedia-body\n\n                    \ndiv class=\npull-right\n\n                        \nspan class=\nlabel label-default\n5 min\n/span\n\n                    \n/div\n\n                    \nh5 class=\nmedia-heading\nAdrian D.\n/h5\n\n                    \np class=\nmargin-none\nLorem ipsum dolor sit amet, consectetur adipisicing elit.\n/p\n\n                \n/div\n\n            \n/li\n\n            \nli class=\nmedia\n\n                \ndiv class=\nmedia-left\n\n                    \na href=\n#\n\n                        \nimg class=\nmedia-object thumb\n src=\nimages/people/50/woman-7.jpg\n alt=\npeople\n\n                    \n/a\n\n                \n/div\n\n                \ndiv class=\nmedia-body\n\n                    \ndiv class=\npull-right\n\n                        \nspan class=\nlabel label-default\n2 days\n/span\n\n                    \n/div\n\n                    \nh5 class=\nmedia-heading\nJane B.\n/h5\n\n                    \np class=\nmargin-none\nLorem ipsum dolor sit amet, consectetur adipisicing elit.\n/p\n\n                \n/div\n\n            \n/li\n\n            \nli class=\nmedia\n\n                \ndiv class=\nmedia-left\n\n                    \na href=\n#\n\n                        \nimg class=\nmedia-object thumb\n src=\nimages/people/50/guy-8.jpg\n alt=\npeople\n\n                    \n/a\n\n                \n/div\n\n                \ndiv class=\nmedia-body\n\n                    \ndiv class=\npull-right\n\n                        \nspan class=\nlabel label-default\n3 days\n/span\n\n                    \n/div\n\n                    \nh5 class=\nmedia-heading\nAndrew M.\n/h5\n\n                    \np class=\nmargin-none\nLorem ipsum dolor sit amet, consectetur adipisicing elit.\n/p\n\n                \n/div\n\n            \n/li\n\n        \n/ul\n\n    \n/li\n\n    \n!-- // END messages --\n\n\n\n/ul\n\n\n\n\n\nFiles\n\n\nWithin \nnavbar-collapse\n:\n\n\nul class=\nnav navbar-nav\n\n\n    \n!-- files --\n\n    \nli class=\ndropdown notifications files\n\n        \na href=\n#\n class=\ndropdown-toggle btn\n data-toggle=\ndropdown\n\n            \ni class=\nfa fa-folder-open\n/i\n\n            \nspan class=\nbadge floating badge-primary\n4\n/span\n\n        \n/a\n\n        \nul class=\ndropdown-menu\n\n            \nli class=\nmedia\n\n                \ndiv class=\npull-left\n\n                    \nimg src=\nimages/food1.jpg\n alt=\nfood\n class=\nimg-rounded\n/\n\n                \n/div\n\n                \ndiv class=\nmedia-body\n\n                    \nh5 class=\ntitle margin-none\na href=\n#\nScreen Shot 2014-11-..\n/a\n/h5\n\n                    \nsmall class=\ntext-muted\n2 hrs ago\n/small\n\n                \n/div\n\n            \n/li\n\n            \nli class=\nmedia\n\n                \ndiv class=\npull-left\n\n                    \nimg src=\nimages/place1.jpg\n alt=\nfood\n class=\nimg-rounded\n/\n\n                \n/div\n\n                \ndiv class=\nmedia-body\n\n                    \nh5 class=\ntitle margin-none\na href=\n#\nScreen Shot 2014-11-..\n/a\n/h5\n\n                    \nsmall class=\ntext-muted\n3 days ago\n/small\n\n                \n/div\n\n            \n/li\n\n            \nli class=\nmedia\n\n                \ndiv class=\npull-left\n\n                    \nimg src=\nimages/place2.jpg\n alt=\nfood\n class=\nimg-rounded\n/\n\n                \n/div\n\n                \ndiv class=\nmedia-body\n\n                    \nh5 class=\ntitle margin-none\na href=\n#\nScreen Shot 2014-11-..\n/a\n/h5\n\n                    \nsmall class=\ntext-muted\n8 days ago\n/small\n\n                \n/div\n\n            \n/li\n\n        \n/ul\n\n    \n/li\n\n    \n!-- // END files --\n\n\n\n/ul\n\n\n\n\n\nUser\n\n\nWithin \nnavbar-collapse\n:\n\n\nul class=\nnav navbar-nav\n\n\n    \n!-- user --\n\n    \nli class=\ndropdown user\n\n        \na href=\n#\n class=\ndropdown-toggle\n data-toggle=\ndropdown\n\n            \nimg src=\nimages/people/110/guy-6.jpg\n alt=\npeople\n class=\nimg-circle\n/\n \n            Bill \nspan class=\ncaret\n/span\n\n        \n/a\n\n        \nul class=\ndropdown-menu\n role=\nmenu\n\n            \nli\na href=\n#\ni class=\nfa fa-user\n/i\nProfile\n/a\n/li\n\n            \nli\na href=\n#\ni class=\nfa fa-wrench\n/i\nSettings\n/a\n/li\n\n            \nli\na href=\n#\ni class=\nfa fa-sign-out\n/i\nLogout\n/a\n/li\n\n        \n/ul\n\n    \n/li\n\n    \n!-- // END user --\n\n\n\n/ul\n\n\n\n\n\nCountry flags\n\n\nWithin \nnavbar-collapse\n:\n\n\nul class=\nnav navbar-nav\n\n\n    \n!-- country flags --\n\n    \nli class=\ndropdown flags\n\n        \na href=\n#\n class=\ndropdown-toggle\n data-toggle=\ndropdown\n\n            \nimg src=\nimages/flags/Flag_of_the_United_States.svg\n alt=\nUnited States\n /\n\n            \nspan class=\ncaret\n/span\n\n        \n/a\n\n        \nul class=\ndropdown-menu min-width-none\n role=\nmenu\n\n            \nli class=\nactive text-center\n\n                \na href=\n#\n\n                    \nimg src=\nimages/flags/Flag_of_the_United_States.svg\n alt=\nUSA\n /\n\n                \n/a\n\n            \n/li\n\n            \nli class=\ntext-center\n\n                \na href=\n#\n\n                    \nimg src=\nimages/flags/Flag_of_France.svg\n alt=\nFrance\n /\n\n                \n/a\n\n            \n/li\n\n            \nli class=\ntext-center\n\n                \na href=\n#\n\n                    \nimg src=\nimages/flags/Flag_of_Germany.svg\n alt=\nGermany\n /\n\n                \n/a\n\n            \n/li\n\n            \nli class=\ntext-center\n\n                \na href=\n#\n\n                    \nimg src=\nimages/flags/Flag_of_Romania.svg\n alt=\nRomania\n /\n\n                \n/a\n\n            \n/li\n\n            \nli class=\ntext-center\n\n                \na href=\n#\n\n                    \nimg src=\nimages/flags/Flag_of_Poland.svg\n alt=\nPoland\n/\n\n                \n/a\n\n            \n/li\n\n        \n/ul\n\n    \n/li\n\n    \n!-- // END country flags --\n\n\n\n/ul\n\n\n\n\n\nToggle buttons\n\n\ndiv class=\nnavbar-header\n\n\n    \n!-- The left toggle button --\n\n    \na class=\ntoggle active pull-left\n href=\n#\ni class=\nfa fa-bars\n/i\n/a\n\n\n    \n!-- Brand --\n\n    \na class=\nnavbar-brand\n href=\n#\nBrand\n/a\n\n\n    \n!-- The toggle buttons must also have the .visible-xs class applied --\n\n    \n!-- So they're visible only on mobile; For demo purposes we left this class unapplied --\n\n    \n!-- Also the button with .pull-right will move the button to the right on mobile --\n\n    \na class=\ntoggle pull-right\n href=\n#\ni class=\nfa fa-bars\n/i\n/a\n\n\n\n/div\n\n\n\n\n\nSimple menu\n\n\nWithin \nnavbar-collapse\n:\n\n\nul class=\nnav navbar-nav\n\n\n    \n!-- simple menus --\n\n    \nli\na href=\n#\ni class=\nfa fa-home fa-fw\n/i\n/a\n/li\n\n    \nli\na href=\n#\nLink\n/a\n/li\n\n    \nli\na href=\n#\ni class=\nfa fa-graduation-cap fa-fw\n/i\n Icon\n/a\n/li\n\n    \n!-- // END simple menus --\n\n\n\n/ul\n\n\n\n\n\nRegular buttons\n\n\nWithin \nnavbar-collapse\n:\n\n\n!-- buttons --\n\n\na href=\n#\n class=\nbtn navbar-btn btn-default\nDefault\n/a\n\n\na href=\n#\n class=\nbtn navbar-btn btn-primary\ni class=\nfa fa-home\n/i\n Primary\n/a\n\n\n!-- // END buttons --\n\n\n\n\n\nText brand\n\n\ndiv class=\nnavbar-header\n\n    \na class=\nnavbar-brand\n href=\n#\nBrand\n/a\n\n    \na class=\nnavbar-brand navbar-brand-primary\n href=\n#\nPrimary\n/a\n\n\n/div\n\n\n\n\n\nBrand with image\n\n\ndiv class=\nnavbar-header\n\n    \ndiv class=\nnavbar-brand navbar-brand-logo\n\n        \na href=\n#\nimg src=\nimages/logo-grey.png\n alt=\nlogo\n/\n Text\n/a\n\n    \n/div\n\n    \ndiv class=\nnavbar-brand navbar-brand-logo navbar-brand-primary\n\n        \na href=\n#\nimg src=\nimages/logo-white.png\n alt=\nlogo\n/\n Text\n/a\n\n    \n/div\n\n\n/div\n\n\n\n\n\nSearch\n\n\nWithin \nnavbar-collapse\n:\n\n\n!-- Search #1 --\n\n\nform class=\nnavbar-form margin-none navbar-left\n\n    \ndiv class=\nsearch-1\n\n        \ndiv class=\ninput-group\n\n            \nspan class=\ninput-group-addon\ni class=\nicon-search\n/i\n/span\n\n            \ninput type=\ntext\n class=\nform-control form-control-w-150\n placeholder=\nSearch\n\n        \n/div\n\n    \n/div\n\n\n/form\n\n\n!-- // END search #1 --\n\n\n\n!-- Search #2 --\n\n\nform class=\nnavbar-form navbar-left\n\n    \ndiv class=\nsearch-2\n\n        \ndiv class=\ninput-group\n\n            \ninput type=\ntext\n class=\nform-control form-control-w-150\n placeholder=\nSearch\n\n            \nspan class=\ninput-group-btn\n\n                \nbutton class=\nbtn btn-inverse\n type=\nbutton\n\n                    \ni class=\nfa fa-search\n/i\n\n                \n/button\n\n            \n/span\n\n        \n/div\n\n    \n/div\n\n\n/form\n\n\n!-- // END search #2 --\n\n\n\n\n\nRadio buttons\n\n\nWithin \nnavbar-collapse\n:\n\n\n!-- Radio buttons --\n\n\nform class=\nnavbar-form navbar-left\n\n    \ndiv class=\nbtn-group\n data-toggle=\nbuttons\n\n        \nlabel class=\nbtn btn-default active\n\n            \ninput type=\nradio\n name=\noptions\n id=\noption1\n autocomplete=\noff\n checked\n \n            \ni class=\nfa fa-home\n/i\n\n        \n/label\n\n        \nlabel class=\nbtn btn-default\n\n            \ninput type=\nradio\n name=\noptions\n id=\noption2\n autocomplete=\noff\n \n            \ni class=\nfa fa-envelope\n/i\n\n        \n/label\n\n        \nlabel class=\nbtn btn-default\n\n            \ninput type=\nradio\n name=\noptions\n id=\noption3\n autocomplete=\noff\n \n            \ni class=\nfa fa-user\n/i\n\n        \n/label\n\n    \n/div\n\n\n/form\n\n\n!-- // END radio buttons --\n\n\n\n\n\nCheckboxes\n\n\nWithin \nnavbar-collapse\n:\n\n\n!-- checkbox --\n\n\nform class=\nnavbar-form navbar-left\n\n    \ndiv class=\ncheckbox\n\n        \ninput type=\ncheckbox\n checked id=\ncheckbox-1\n\n        \nlabel for=\ncheckbox-1\nCheck me\n/label\n\n    \n/div\n\n\n/form\n\n\n!-- // END checkbox --\n\n\n\n\n\nCheckbox switch button\n\n\nWithin \nnavbar-collapse\n:\n\n\n!-- Checkbox Switch button --\n\n\nform class=\nnavbar-form navbar-left\n\n    \ndiv class=\nform-group\n\n        \ninput type=\ncheckbox\n data-toggle=\nswitch-checkbox\n id=\nswitch-1\n name=\nswitch-1\n checked\n\n    \n/div\n\n\n/form\n\n\n!-- // END Checkbox Switch button --\n\n\n\n\n\nSlider\n\n\nWithin \nnavbar-collapse\n:\n\n\n!-- slider --\n\n\ndiv class=\nnavbar-left\n\n    \ninput type=\ntext\n \n        data-slider=\nformatter\n \n        data-slider-min=\n0\n \n        data-slider-max=\n20\n \n        data-slider-step=\n1\n \n        data-slider-value=\n14\n \n        data-slider-handle=\nsquare\n /\n\n\n/div\n\n\n!-- // END slider --\n\n\n\n\n\n\n\nNavbar positioning\n\n\nThe examples so far were strictly focused on the navbar element itself, skins, sizes and various elements, but navbars also have a few options for positioning.\n\n\nFixed to top\n\n\nBy default, a navbar element doesn't assume it's placed on the foremost top corner of the page, and because of that it has a few CSS attributes such as top and side borders and rounded corners that are more appropriate when you place something else above the navbar or you have spacing all around it.\n\n\nCreate a full-width navbar without the top and side borders and without rounded corners, that stays visible and fixed in the same position - at the foremost top corner of the screen - when scrolling the page, by adding the \nnavbar-fixed-top\n class on the \nnavbar\n element and include a \ncontainer\n or \ncontainer-fluid\n to center and pad navbar content:\n\n\nnav class=\"navbar navbar-default navbar-fixed-top\"\n\n    \ndiv class=\"container\"\n\n        ...\n    \n/div\n\n\n/nav\n\n\n\n\nLayout spacing required\n\n\nWhen using \nnavbar-fixed-top\n on the \nnavbar\n element, you must also add one of the following classes to the \nhtml\n tag to enable the required layout spacings:\n\n\n\n\nls-top-navbar\n when using the default navbar size\n\n\nls-top-navbar-small\n when using \nnavbar-size-small\n\n\nls-top-navbar-large\n when using \nnavbar-size-large\n\n\nls-top-navbar-xlarge\n when using \nnavbar-size-xlarge\n\n\n\n\nStatic top\n\n\nCreate a full-width navbar without the top and side borders and without rounded corners, that scrolls away with the page, by adding the \nnavbar-static-top\n class on the \nnavbar\n element and include a \ncontainer\n or \ncontainer-fluid\n to center and pad navbar content:\n\n\nnav class=\"navbar navbar-default navbar-static-top\"\n\n    \ndiv class=\"container\"\n\n        ...\n    \n/div\n\n\n/nav\n\n\n\n\n\n\nNavbar page layout\n\n\nWith the following examples we'll showcase navbars in the context of a page layout. Also, we'll be using \nSwig templates\n. Note that some of the Swig templates used to construct page layouts in the following examples are explained in the \nlayout component\n.\n\n\nExample\n:\n\n\nIn this example, we'll create a layout and navbar and use them in the context of a page in the application.\n\n\nConsider a page layout in \nsrc/html/themes/$THEME_NAME/_simple_layout.html\n:\n\n\n!-- Start the HTML document --\n\n{% include \"lib/layout/html/_header.html\" { htmlClass: 'ls-top-navbar' } %}\n\n\n!-- Include a simple navbar --\n\n{% include \"src/html/themes/$THEME_NAME/_simple_navbar.html\" %}\n\n\n!-- The page content --\n\n\ndiv class=\"container\"\n\n\n    \n!-- Define the content block --\n\n    \n!-- This will be used by pages that extend this layout to inject their content --\n\n    {% block content %}{% endblock %}\n\n\n/div\n\n\n\n!-- Complete the HTML document --\n\n{% include \"lib/layout/html/_footer_scripts.html\" %}\n\n\n\nA simple navbar in \nsrc/html/themes/$THEME_NAME/_simple_navbar.html\n:\n\n\nnav class=\"navbar navbar-default navbar-fixed-top\"\n\n    \ndiv class=\"container\"\n\n\n        \n!-- Group brand and toggle for better mobile display --\n\n        \ndiv class=\"navbar-header\"\n\n            \na class=\"navbar-brand\" href=\"#\"\nBrand\n/a\n\n            \nbutton type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#collapse-example\"\n\n                \nspan class=\"sr-only\"\nToggle navigation\n/span\n\n                \nspan class=\"icon-bar\"\n/span\n\n                \nspan class=\"icon-bar\"\n/span\n\n                \nspan class=\"icon-bar\"\n/span\n\n            \n/button\n\n        \n/div\n\n\n        \n!-- Group nav links, menus, forms, and other content for toggling --\n\n        \ndiv class=\"navbar-collapse collapse\" id=\"collapse-example\"\n\n            \nul class=\"nav navbar-nav\"\n\n\n                \n!-- simple dropdown --\n\n                \nli class=\"dropdown\"\n\n                    \na href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"\n\n                        Dropdown \nspan class=\"caret\"\n/span\n\n                    \n/a\n\n                    \nul class=\"dropdown-menu\" role=\"menu\"\n\n                        \nli class=\"dropdown-header\"\nHeading\n/li\n\n                        \nli\na href=\"#\"\nEssentials\n/a\n/li\n\n                        \nli class=\"active\"\na href=\"#\"\nActive Link\n/a\n/li\n\n                        \nli\na href=\"#\"\nTimeline\n/a\n/li\n\n                        \nli\na href=\"#\"\nCharts\n/a\n/li\n\n                        \nli\na href=\"#\"\nLayouts\n/a\n/li\n\n                        \nli class=\"dropdown-header\"\nHeading\n/li\n\n                        \nli\na href=\"#\"\nSidebars\n/a\n/li\n\n                        \nli\na href=\"#\"\nMaps\n/a\n/li\n\n                        \nli\na href=\"#\"\nMedia\n/a\n/li\n\n                    \n/ul\n\n                \n/li\n\n                \n!-- // END simple dropdown --\n\n\n            \n/ul\n\n        \n/div\n\n\n    \n/div\n\n\n/nav\n\n\n\n\nAnd a simple page in \nsrc/html/themes/$THEME_NAME/simple-page.html\n:\n\n\n{% extends \"src/html/themes/$THEME_NAME/_simple_layout.html\" %}\n\n{% block content %}\n    \np\nThis is a simple page.\n/p\n\n{% endblock %}\n\n\n\nNow, you can follow through the \nbuild process\n and see the compiled HTML result for our \nsimple-page.html\n.", 
            "title": "Navbar"
        }, 
        {
            "location": "/reference/navbar/index.html#navbar", 
            "text": "The navbar package provides a large range of elements compatible with the Bootstrap Navbar component, starting from simple menus and dropdowns, to form elements, toggle buttons and other custom widget areas such as notifications, messages, files and more.", 
            "title": "Navbar"
        }, 
        {
            "location": "/reference/navbar/index.html#requirements", 
            "text": "JavaScript  To load the navbar package, from  src/js/themes/$THEME_NAME/app.js :  // Navbar package\nrequire('navbar/js/main');  This will load  lib/navbar/js/main.js  into our main application script bundle.  Less  From  src/less/themes/$THEME_NAME/app.less :  // Navbar package\n@import \"navbar/less/navbar\";  Which will load  lib/navbar/less/navbar.less  into our main application style bundle.   RTL Support  Add to  src/less/themes/$THEME_NAME/app.less , after the main component:  // Navbar RTL\n@import \"navbar/less/navbar-rtl\";   Alternative  If working with Less and Browserify bundles is not your favorite thing, you can alternatively load the pre-built static assets we have included:  !-- In the head of the HTML document --  link rel=\"stylesheet\" href=\"css/app/navbar.css\" /  !-- At the bottom of the HTML document --  script src=\"js/app/navbar.js\" /script", 
            "title": "Requirements"
        }, 
        {
            "location": "/reference/navbar/index.html#basic-usage", 
            "text": "We'll be using standard navbars included with Bootstrap, with some additional options. For the basic usage, see the official  Bootstrap documentation . Additionally, see the official  Bootstrap navbar examples .  Here's a basic example of the main navbar structure. You can use it along with most of the following navbar examples.  nav class= navbar navbar-default \n     div class= container-fluid \n\n         !-- Group brand and toggle for better mobile display -- \n         div class= navbar-header \n             a class= navbar-brand  href= # Brand /a \n             button type= button  class= navbar-toggle  data-toggle= collapse  data-target= #collapse-example-default \n                 span class= sr-only Toggle navigation /span \n                 span class= icon-bar /span \n                 span class= icon-bar /span \n                 span class= icon-bar /span \n             /button \n         /div \n\n         !-- Group nav links, menus, forms, and other content for toggling -- \n         div class= navbar-collapse collapse  id= collapse-example-default \n             !-- ... -- \n         /div \n\n     /div  /nav", 
            "title": "Basic usage"
        }, 
        {
            "location": "/reference/navbar/index.html#navbar-skins", 
            "text": "Default skin  To enable the default light skin, add the  navbar-default  class to any  navbar  element.  div class=\"navbar navbar-default\" /div   Primary skin  To use the primary skin, simply apply the  navbar-primary  class on the main  navbar  container.   div class=\"navbar navbar-primary\" /div   Inverse skin  To use the darker inverse skin, simply apply the  navbar-inverse  class on the main  navbar  container.   div class=\"navbar navbar-inverse\" /div", 
            "title": "Navbar skins"
        }, 
        {
            "location": "/reference/navbar/index.html#navbar-size", 
            "text": "The default navbar is  50px  tall.  Small  To use the small navbar,  42px  tall, simply apply the  navbar-size-small  class on the main navbar container.  div class=\"navbar navbar-default navbar-size-small\" /div   Large  To use the large navbar,  64px  tall, simply apply the  navbar-size-large  class on the main navbar container. Note that the large navbar applies only for medium to large screens and takes the default size for small and mobile screens.  div class=\"navbar navbar-default navbar-size-large\" /div   Extra large  To use the extra large navbar,  80px  tall, simply apply the  navbar-size-xlarge  class on the main navbar container. Note that the extra large navbar, just like the large navbar, applies only for medium to large screens and takes the default size for small and mobile screens.  div class=\"navbar navbar-default navbar-size-xlarge\" /div", 
            "title": "Navbar size"
        }, 
        {
            "location": "/reference/navbar/index.html#navbar-elements", 
            "text": "Simple dropdown  Within  navbar-collapse :  ul class= nav navbar-nav \n\n     !-- simple dropdown -- \n     li class= dropdown \n         a href= #  class= dropdown-toggle  data-toggle= dropdown \n            Dropdown  span class= caret /span \n         /a \n         ul class= dropdown-menu  role= menu \n             li class= dropdown-header Heading /li \n             li a href= # Essentials /a /li \n             li class= active a href= # Active Link /a /li \n             li a href= # Timeline /a /li \n             li a href= # Charts /a /li \n             li a href= # Layouts /a /li \n             li class= dropdown-header Heading /li \n             li a href= # Sidebars /a /li \n             li a href= # Maps /a /li \n             li a href= # Media /a /li \n         /ul \n     /li \n     !-- // END simple dropdown --  /ul   Hover dropdown  You can trigger the display of dropdown menus on mouse over events instead of the default click, by adding the  navbar-dropdown-hover  class on the  navbar  element.  div class=\"navbar navbar-default navbar-dropdown-hover\" /div   Login dropdown form  Within  navbar-collapse :  ul class= nav navbar-nav \n\n     !-- Login -- \n     li class= dropdown \n         a href= #  class= dropdown-toggle  data-toggle= dropdown \n             i class= fa fa-fw fa-lock /i  Login\n         /a \n         div class= dropdown-menu dropdown-size-280 \n             form \n                 div class= form-group \n                     div class= input-group \n                         span class= input-group-addon i class= fa fa-user /i /span \n                         input type= text  class= form-control  placeholder= Username \n                     /div \n                 /div \n                 div class= form-group \n                     div class= input-group \n                         span class= input-group-addon i class= fa fa-shield /i /span \n                         input type= password  class= form-control  placeholder= Password \n                     /div \n                 /div \n                 div class= text-center \n                     button type= submit  class= btn btn-primary \n                        Login  i class= fa fa-sign-in /i \n                     /button \n                 /div \n             /form \n         /div \n     /li \n     !-- // END login --  /ul   Sign up dropdown form  Within  navbar-collapse :  ul class= nav navbar-nav \n\n     !-- Sign up -- \n     li class= dropdown \n         a href= #  class= dropdown-toggle  data-toggle= dropdown \n             i class= fa fa-fw fa-plus /i  Sign Up\n         /a \n         div class= dropdown-menu dropdown-size-280 \n             form \n                 div class= row \n                     div class= col-md-6 \n                         div class= form-group form-control-default \n                             label for= exampleInputFirstName First name /label \n                             input type= text  class= form-control  id= exampleInputFirstName  placeholder= Your first name \n                         /div \n                     /div \n                     div class= col-md-6 \n                         div class= form-group form-control-default \n                             label for= exampleInputLastName Last name /label \n                             input type= text  class= form-control  id= exampleInputLastName  placeholder= Your last name \n                         /div \n                     /div \n                 /div \n                 div class= form-group form-control-default required \n                     label for= exampleInputEmail1 Email address /label \n                     input type= email  class= form-control  id= exampleInputEmail1  placeholder= Enter email \n                 /div \n                 div class= form-group form-control-default required \n                     label for= exampleInputPassword1 Password /label \n                     input type= password  class= form-control  id= exampleInputPassword1  placeholder= Password \n                 /div \n                 button type= submit  class= btn btn-primary Submit /button \n             /form \n         /div \n     /li \n     !-- // END sign up --  /ul   Datepicker  Within  navbar-collapse :  ul class= nav navbar-nav \n\n     !-- datepicker -- \n     li class= dropdown notifications \n         a href= #  class= dropdown-toggle  data-toggle= dropdown \n             i class= fa fa-calendar-o /i \n             span class= badge small floating 4 /span \n         /a \n\n         div class= dropdown-menu  style= width: auto !important \n             div class= datepicker /div \n         /div \n     /li \n     !-- // END datepicker --  /ul   Notifications  Within  navbar-collapse :  ul class= nav navbar-nav \n\n     !-- notifications -- \n     li class= dropdown notifications updates \n         a href= #  class= dropdown-toggle  data-toggle= dropdown \n             i class= fa fa-bell-o /i \n             span class= badge badge-primary 4 /span \n         /a \n         ul class= dropdown-menu  role= notification \n             li class= dropdown-header Notifications /li \n             li class= media \n                 div class= pull-right \n                     span class= label label-success New /span \n                 /div \n                 div class= media-left \n                     img src= images/people/50/guy-2.jpg  alt= people  class= img-circle  width= 30 \n                 /div \n                 div class= media-body \n                     a href= # Adrian D. /a  posted  a href= # a photo /a  \n                    on his timeline.  br/ \n                     span class= text-caption text-muted 5 mins ago /span \n                 /div \n             /li \n             li class= media \n                 div class= pull-right \n                     span class= label label-success New /span \n                 /div \n                 div class= media-left \n                     img src= images/people/50/guy-6.jpg  alt= people  class= img-circle  width= 30 \n                 /div \n                 div class= media-body \n                     a href= # Bill /a  posted  a href= # a comment /a  \n                    on Adrian's recent  a href= # post /a .  br/ \n                     span class= text-caption text-muted 3 hrs ago /span \n                 /div \n             /li \n             li class= media \n                 div class= media-left \n                     span class= icon-block s30 bg-grey-200 \n                         i class= fa fa-plus /i \n                     /span \n                 /div \n                 div class= media-body \n                     a href= # Mary D. /a  and  a href= # Michelle /a  are now friends.\n                     p span class= text-caption text-muted 1 day ago /span /p \n                     a href= img class= width-30 img-circle  src= images/people/50/woman-6.jpg  alt= people /a \n                     a href= img class= width-30 img-circle  src= images/people/50/woman-3.jpg  alt= people /a \n                 /div \n             /li \n         /ul \n     /li \n     !-- // END notifications --  /ul   Messages  Within  navbar-collapse :  ul class= nav navbar-nav \n\n     !-- messages -- \n     li class= dropdown notifications \n         a href= #  class= dropdown-toggle  data-toggle= dropdown \n             i class= fa fa-envelope-o /i \n             span class= badge floating badge-danger 12 /span \n         /a \n         ul class= dropdown-menu \n             li class= media \n                 div class= media-left \n                     a href= # \n                         img class= media-object thumb  src= images/people/50/guy-2.jpg  alt= people \n                     /a \n                 /div \n                 div class= media-body \n                     div class= pull-right \n                         span class= label label-default 5 min /span \n                     /div \n                     h5 class= media-heading Adrian D. /h5 \n                     p class= margin-none Lorem ipsum dolor sit amet, consectetur adipisicing elit. /p \n                 /div \n             /li \n             li class= media \n                 div class= media-left \n                     a href= # \n                         img class= media-object thumb  src= images/people/50/woman-7.jpg  alt= people \n                     /a \n                 /div \n                 div class= media-body \n                     div class= pull-right \n                         span class= label label-default 2 days /span \n                     /div \n                     h5 class= media-heading Jane B. /h5 \n                     p class= margin-none Lorem ipsum dolor sit amet, consectetur adipisicing elit. /p \n                 /div \n             /li \n             li class= media \n                 div class= media-left \n                     a href= # \n                         img class= media-object thumb  src= images/people/50/guy-8.jpg  alt= people \n                     /a \n                 /div \n                 div class= media-body \n                     div class= pull-right \n                         span class= label label-default 3 days /span \n                     /div \n                     h5 class= media-heading Andrew M. /h5 \n                     p class= margin-none Lorem ipsum dolor sit amet, consectetur adipisicing elit. /p \n                 /div \n             /li \n         /ul \n     /li \n     !-- // END messages --  /ul   Files  Within  navbar-collapse :  ul class= nav navbar-nav \n\n     !-- files -- \n     li class= dropdown notifications files \n         a href= #  class= dropdown-toggle btn  data-toggle= dropdown \n             i class= fa fa-folder-open /i \n             span class= badge floating badge-primary 4 /span \n         /a \n         ul class= dropdown-menu \n             li class= media \n                 div class= pull-left \n                     img src= images/food1.jpg  alt= food  class= img-rounded / \n                 /div \n                 div class= media-body \n                     h5 class= title margin-none a href= # Screen Shot 2014-11-.. /a /h5 \n                     small class= text-muted 2 hrs ago /small \n                 /div \n             /li \n             li class= media \n                 div class= pull-left \n                     img src= images/place1.jpg  alt= food  class= img-rounded / \n                 /div \n                 div class= media-body \n                     h5 class= title margin-none a href= # Screen Shot 2014-11-.. /a /h5 \n                     small class= text-muted 3 days ago /small \n                 /div \n             /li \n             li class= media \n                 div class= pull-left \n                     img src= images/place2.jpg  alt= food  class= img-rounded / \n                 /div \n                 div class= media-body \n                     h5 class= title margin-none a href= # Screen Shot 2014-11-.. /a /h5 \n                     small class= text-muted 8 days ago /small \n                 /div \n             /li \n         /ul \n     /li \n     !-- // END files --  /ul   User  Within  navbar-collapse :  ul class= nav navbar-nav \n\n     !-- user -- \n     li class= dropdown user \n         a href= #  class= dropdown-toggle  data-toggle= dropdown \n             img src= images/people/110/guy-6.jpg  alt= people  class= img-circle /  \n            Bill  span class= caret /span \n         /a \n         ul class= dropdown-menu  role= menu \n             li a href= # i class= fa fa-user /i Profile /a /li \n             li a href= # i class= fa fa-wrench /i Settings /a /li \n             li a href= # i class= fa fa-sign-out /i Logout /a /li \n         /ul \n     /li \n     !-- // END user --  /ul   Country flags  Within  navbar-collapse :  ul class= nav navbar-nav \n\n     !-- country flags -- \n     li class= dropdown flags \n         a href= #  class= dropdown-toggle  data-toggle= dropdown \n             img src= images/flags/Flag_of_the_United_States.svg  alt= United States  / \n             span class= caret /span \n         /a \n         ul class= dropdown-menu min-width-none  role= menu \n             li class= active text-center \n                 a href= # \n                     img src= images/flags/Flag_of_the_United_States.svg  alt= USA  / \n                 /a \n             /li \n             li class= text-center \n                 a href= # \n                     img src= images/flags/Flag_of_France.svg  alt= France  / \n                 /a \n             /li \n             li class= text-center \n                 a href= # \n                     img src= images/flags/Flag_of_Germany.svg  alt= Germany  / \n                 /a \n             /li \n             li class= text-center \n                 a href= # \n                     img src= images/flags/Flag_of_Romania.svg  alt= Romania  / \n                 /a \n             /li \n             li class= text-center \n                 a href= # \n                     img src= images/flags/Flag_of_Poland.svg  alt= Poland / \n                 /a \n             /li \n         /ul \n     /li \n     !-- // END country flags --  /ul   Toggle buttons  div class= navbar-header \n\n     !-- The left toggle button -- \n     a class= toggle active pull-left  href= # i class= fa fa-bars /i /a \n\n     !-- Brand -- \n     a class= navbar-brand  href= # Brand /a \n\n     !-- The toggle buttons must also have the .visible-xs class applied -- \n     !-- So they're visible only on mobile; For demo purposes we left this class unapplied -- \n     !-- Also the button with .pull-right will move the button to the right on mobile -- \n     a class= toggle pull-right  href= # i class= fa fa-bars /i /a  /div   Simple menu  Within  navbar-collapse :  ul class= nav navbar-nav \n\n     !-- simple menus -- \n     li a href= # i class= fa fa-home fa-fw /i /a /li \n     li a href= # Link /a /li \n     li a href= # i class= fa fa-graduation-cap fa-fw /i  Icon /a /li \n     !-- // END simple menus --  /ul   Regular buttons  Within  navbar-collapse :  !-- buttons --  a href= #  class= btn navbar-btn btn-default Default /a  a href= #  class= btn navbar-btn btn-primary i class= fa fa-home /i  Primary /a  !-- // END buttons --   Text brand  div class= navbar-header \n     a class= navbar-brand  href= # Brand /a \n     a class= navbar-brand navbar-brand-primary  href= # Primary /a  /div   Brand with image  div class= navbar-header \n     div class= navbar-brand navbar-brand-logo \n         a href= # img src= images/logo-grey.png  alt= logo /  Text /a \n     /div \n     div class= navbar-brand navbar-brand-logo navbar-brand-primary \n         a href= # img src= images/logo-white.png  alt= logo /  Text /a \n     /div  /div   Search  Within  navbar-collapse :  !-- Search #1 --  form class= navbar-form margin-none navbar-left \n     div class= search-1 \n         div class= input-group \n             span class= input-group-addon i class= icon-search /i /span \n             input type= text  class= form-control form-control-w-150  placeholder= Search \n         /div \n     /div  /form  !-- // END search #1 --  !-- Search #2 --  form class= navbar-form navbar-left \n     div class= search-2 \n         div class= input-group \n             input type= text  class= form-control form-control-w-150  placeholder= Search \n             span class= input-group-btn \n                 button class= btn btn-inverse  type= button \n                     i class= fa fa-search /i \n                 /button \n             /span \n         /div \n     /div  /form  !-- // END search #2 --   Radio buttons  Within  navbar-collapse :  !-- Radio buttons --  form class= navbar-form navbar-left \n     div class= btn-group  data-toggle= buttons \n         label class= btn btn-default active \n             input type= radio  name= options  id= option1  autocomplete= off  checked  \n             i class= fa fa-home /i \n         /label \n         label class= btn btn-default \n             input type= radio  name= options  id= option2  autocomplete= off  \n             i class= fa fa-envelope /i \n         /label \n         label class= btn btn-default \n             input type= radio  name= options  id= option3  autocomplete= off  \n             i class= fa fa-user /i \n         /label \n     /div  /form  !-- // END radio buttons --   Checkboxes  Within  navbar-collapse :  !-- checkbox --  form class= navbar-form navbar-left \n     div class= checkbox \n         input type= checkbox  checked id= checkbox-1 \n         label for= checkbox-1 Check me /label \n     /div  /form  !-- // END checkbox --   Checkbox switch button  Within  navbar-collapse :  !-- Checkbox Switch button --  form class= navbar-form navbar-left \n     div class= form-group \n         input type= checkbox  data-toggle= switch-checkbox  id= switch-1  name= switch-1  checked \n     /div  /form  !-- // END Checkbox Switch button --   Slider  Within  navbar-collapse :  !-- slider --  div class= navbar-left \n     input type= text  \n        data-slider= formatter  \n        data-slider-min= 0  \n        data-slider-max= 20  \n        data-slider-step= 1  \n        data-slider-value= 14  \n        data-slider-handle= square  /  /div  !-- // END slider --", 
            "title": "Navbar elements"
        }, 
        {
            "location": "/reference/navbar/index.html#navbar-positioning", 
            "text": "The examples so far were strictly focused on the navbar element itself, skins, sizes and various elements, but navbars also have a few options for positioning.  Fixed to top  By default, a navbar element doesn't assume it's placed on the foremost top corner of the page, and because of that it has a few CSS attributes such as top and side borders and rounded corners that are more appropriate when you place something else above the navbar or you have spacing all around it.  Create a full-width navbar without the top and side borders and without rounded corners, that stays visible and fixed in the same position - at the foremost top corner of the screen - when scrolling the page, by adding the  navbar-fixed-top  class on the  navbar  element and include a  container  or  container-fluid  to center and pad navbar content:  nav class=\"navbar navbar-default navbar-fixed-top\" \n     div class=\"container\" \n        ...\n     /div  /nav   Layout spacing required  When using  navbar-fixed-top  on the  navbar  element, you must also add one of the following classes to the  html  tag to enable the required layout spacings:   ls-top-navbar  when using the default navbar size  ls-top-navbar-small  when using  navbar-size-small  ls-top-navbar-large  when using  navbar-size-large  ls-top-navbar-xlarge  when using  navbar-size-xlarge   Static top  Create a full-width navbar without the top and side borders and without rounded corners, that scrolls away with the page, by adding the  navbar-static-top  class on the  navbar  element and include a  container  or  container-fluid  to center and pad navbar content:  nav class=\"navbar navbar-default navbar-static-top\" \n     div class=\"container\" \n        ...\n     /div  /nav", 
            "title": "Navbar positioning"
        }, 
        {
            "location": "/reference/navbar/index.html#navbar-page-layout", 
            "text": "With the following examples we'll showcase navbars in the context of a page layout. Also, we'll be using  Swig templates . Note that some of the Swig templates used to construct page layouts in the following examples are explained in the  layout component .  Example :  In this example, we'll create a layout and navbar and use them in the context of a page in the application.  Consider a page layout in  src/html/themes/$THEME_NAME/_simple_layout.html :  !-- Start the HTML document -- \n{% include \"lib/layout/html/_header.html\" { htmlClass: 'ls-top-navbar' } %} !-- Include a simple navbar -- \n{% include \"src/html/themes/$THEME_NAME/_simple_navbar.html\" %} !-- The page content --  div class=\"container\" \n\n     !-- Define the content block -- \n     !-- This will be used by pages that extend this layout to inject their content -- \n    {% block content %}{% endblock %} /div  !-- Complete the HTML document -- \n{% include \"lib/layout/html/_footer_scripts.html\" %}  A simple navbar in  src/html/themes/$THEME_NAME/_simple_navbar.html :  nav class=\"navbar navbar-default navbar-fixed-top\" \n     div class=\"container\" \n\n         !-- Group brand and toggle for better mobile display -- \n         div class=\"navbar-header\" \n             a class=\"navbar-brand\" href=\"#\" Brand /a \n             button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#collapse-example\" \n                 span class=\"sr-only\" Toggle navigation /span \n                 span class=\"icon-bar\" /span \n                 span class=\"icon-bar\" /span \n                 span class=\"icon-bar\" /span \n             /button \n         /div \n\n         !-- Group nav links, menus, forms, and other content for toggling -- \n         div class=\"navbar-collapse collapse\" id=\"collapse-example\" \n             ul class=\"nav navbar-nav\" \n\n                 !-- simple dropdown -- \n                 li class=\"dropdown\" \n                     a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" \n                        Dropdown  span class=\"caret\" /span \n                     /a \n                     ul class=\"dropdown-menu\" role=\"menu\" \n                         li class=\"dropdown-header\" Heading /li \n                         li a href=\"#\" Essentials /a /li \n                         li class=\"active\" a href=\"#\" Active Link /a /li \n                         li a href=\"#\" Timeline /a /li \n                         li a href=\"#\" Charts /a /li \n                         li a href=\"#\" Layouts /a /li \n                         li class=\"dropdown-header\" Heading /li \n                         li a href=\"#\" Sidebars /a /li \n                         li a href=\"#\" Maps /a /li \n                         li a href=\"#\" Media /a /li \n                     /ul \n                 /li \n                 !-- // END simple dropdown -- \n\n             /ul \n         /div \n\n     /div  /nav   And a simple page in  src/html/themes/$THEME_NAME/simple-page.html :  {% extends \"src/html/themes/$THEME_NAME/_simple_layout.html\" %}\n\n{% block content %}\n     p This is a simple page. /p \n{% endblock %}  Now, you can follow through the  build process  and see the compiled HTML result for our  simple-page.html .", 
            "title": "Navbar page layout"
        }, 
        {
            "location": "/reference/essential/index.html", 
            "text": "Essential\n\n\nThe essential package provides a collection of commonly used elements and functionality:\n\n\n\n\nButtons\n\n\nIcons\n\n\nExpandable areas\n\n\nRibbons\n\n\nForms\n\n\nTabs\n\n\nNestable lists\n\n\nTree views\n\n\nTables\n\n\nProgress bars\n\n\nModals\n\n\n\n\nNote\n: You can see full examples in the source within the \nlib/essential/html/\n directory.\n\n\n\n\nRequirements\n\n\nJavaScript\n\n\nTo load the entire essential package, from \nsrc/js/themes/$THEME_NAME/app.js\n:\n\n\n// Essential package\nrequire('essential/js/main');\n\n\n\nThis will load \nlib/essential/js/main.js\n into our main application script bundle.\n\n\nLess\n\n\nFrom \nsrc/less/themes/$THEME_NAME/app.less\n:\n\n\n// Essential package\n@import \"essential/less/main\";\n\n\n\nWhich will load \nlib/essential/less/main.less\n into our main application style bundle.\n\n\n\n\nRTL Support\n\n\nAdd to \nsrc/less/themes/$THEME_NAME/app.less\n, after the main component:\n\n\n// Essential RTL\n@import \"essential/less/main-rtl\";\n\n\n\n\n\nAlternative\n\n\nIf working with Less and Browserify bundles is not your favorite thing, you can alternatively load the pre-built static assets we have included:\n\n\n!-- In the head of the HTML document --\n\n\nlink rel=\"stylesheet\" href=\"css/app/essential.css\" /\n\n\n\n!-- At the bottom of the HTML document --\n\n\nscript src=\"js/app/essential.js\"\n/script\n\n\n\n\n\n\nExpandable areas\n\n\nThe expandable component is a great way to present a large content area with a small preview. Click anywhere on the preview area to show the entire content.\n\n\ndiv class=\"expandable expandable-trigger\"\n\n    \ndiv class=\"expandable-content\"\n\n        \n!-- content goes here --\n\n    \n/div\n\n\n/div\n\n\n\n\nThis will create an expandable area with a preview of \n100px\n height. \n\n\nAdditionaly, you can add on top of \nexpandable-content\n: \n\n\n\n\nexpandable-content-medium\n to make the preview area \n150px\n\n\nexpandable-content-large\n to make the preview area \n200px\n\n\n\n\nFor example:\n\n\ndiv class=\"expandable expandable-trigger\"\n\n    \ndiv class=\"expandable-content expandable-content-medium\"\n\n        \n!-- creates a 150px preview --\n\n    \n/div\n\n\n/div\n\n\n\n\nAnd:\n\n\ndiv class=\"expandable expandable-trigger\"\n\n    \ndiv class=\"expandable-content expandable-content-large\"\n\n        \n!-- creates a 200px preview --\n\n    \n/div\n\n\n/div\n\n\n\n\nBy default, the expandable indicator, which is added at the bottom of the preview area, will have a greish background color. You can make it white, by adding \nexpandable-indicator-white\n on top of \nexpandable\n:\n\n\ndiv class=\"expandable expandable-indicator-white expandable-trigger\"\n\n    \ndiv class=\"expandable-content\"\n\n        \n!-- content goes here --\n\n    \n/div\n\n\n/div\n\n\n\n\nYou can combine the expandable component with other UI elements, such as Bootstrap panels:\n\n\ndiv class=\"panel panel-default\"\n\n    \ndiv class=\"panel-body expandable expandable-indicator-white expandable-trigger\"\n\n        \ndiv class=\"expandable-content\"\n\n            \n!-- content goes here --\n\n        \n/div\n\n    \n/div\n\n\n/div\n\n\n\n\nInitialize\n\n\nThe component is self-initialized just by loading the required assets, but you can programatically initialize an expandable area via jQuery:\n\n\n$.tkExpandable()\n\n\n$('#my-expandable-area').tkExpandable();\n\n\n\n\n\nTabbable\n\n\nThe tabbable component includes many positioning and styling options, starting with minimalistic tabs to vertical or horizontal tabs, left, center or right aligned and more. The resulting tabs are responsive and the component automatically displays a horizontal scrolling area when using many tabs on a single tabbable area.\n\n\nBasics\n\n\nAny tabbable widget starts with a minimal \ntabbable\n wrapper:\n\n\n!-- Tabbable Widget --\n\n\ndiv class=\"tabbable\"\n/div\n\n\n\n\nNext, we're using standard tabs functionality included with Bootstrap:\n\n\n!-- Tabbable Widget --\n\n\ndiv class=\"tabbable\"\n\n\n    \n!-- Tabs --\n\n    \nul class=\"nav nav-tabs\"\n\n        \nli class=\"active\"\na href=\"#home\" data-toggle=\"tab\"\nHome\n/a\n/li\n\n        \nli\na href=\"#profile\" data-toggle=\"tab\"\nProfile\n/a\n/li\n\n        \nli\na href=\"#messages\" data-toggle=\"tab\"\nMessages\n/a\n/li\n\n    \n/ul\n\n    \n!-- // END Tabs --\n\n\n    \n!-- Panes --\n\n    \ndiv class=\"tab-content\"\n\n        \ndiv id=\"home\" class=\"tab-pane active\"\n/div\n\n        \ndiv id=\"profile\" class=\"tab-pane\"\n/div\n\n        \ndiv id=\"messages\" class=\"tab-pane\"\n/div\n\n    \n/div\n\n    \n!-- // END Panes --\n\n\n\n/div\n\n\n!-- // END Tabbable Widget --\n\n\n\n\nIcons and text\n\n\nWe can add icons to our tabs:\n\n\nul class=\"nav nav-tabs\"\n\n    \nli class=\"active\"\n\n        \na href=\"#home\" data-toggle=\"tab\"\n\n            \ni class=\"fa fa-fw fa-home\"\n/i\n Home\n        \n/a\n\n    \n/li\n\n    \nli\n\n        \na href=\"#profile\" data-toggle=\"tab\"\n\n            \ni class=\"fa fa-fw fa-user\"\n/i\n Profile\n        \n/a\n\n    \n/li\n\n    \nli\n\n        \na href=\"#messages\" data-toggle=\"tab\"\n\n            \ni class=\"fa fa-fw fa-envelope\"\n/i\n Messages\n        \n/a\n\n    \n/li\n\n\n/ul\n\n\n\n\nIcons only\n\n\nWe can have tabs display only with icons, by adding \ntabs-icons\n to the \ntabbable\n element:\n\n\n!-- Tabbable Widget --\n\n\ndiv class=\"tabbable tabs-icons\"\n\n\n    \n!-- Tabs --\n\n    \nul class=\"nav nav-tabs\"\n\n        \nli class=\"active\"\n\n            \na href=\"#home\" data-toggle=\"tab\"\n\n                \ni class=\"fa fa-fw fa-home\"\n/i\n\n            \n/a\n\n        \n/li\n\n        \nli\n\n            \na href=\"#profile\" data-toggle=\"tab\"\n\n                \ni class=\"fa fa-fw fa-user\"\n/i\n\n            \n/a\n\n        \n/li\n\n        \nli\n\n            \na href=\"#messages\" data-toggle=\"tab\"\n\n                \ni class=\"fa fa-fw fa-envelope\"\n/i\n\n            \n/a\n\n        \n/li\n\n    \n/ul\n\n\n\n/div\n\n\n\n\nStacked icons and text\n\n\nWe can stack the icon on top of the text so they're no longer next to each other, but on two lines and text centered, by adding \ntabs-blocks\n to the \ntabbable\n element:\n\n\n!-- Tabbable Widget --\n\n\ndiv class=\"tabbable tabs-blocks\"\n\n\n    \n!-- Tabs --\n\n    \nul class=\"nav nav-tabs\"\n\n        \nli class=\"active\"\n\n            \na href=\"#home\" data-toggle=\"tab\"\n\n                \ni class=\"fa fa-fw fa-home\"\n/i\n Home\n            \n/a\n\n        \n/li\n\n        \nli\n\n            \na href=\"#profile\" data-toggle=\"tab\"\n\n                \ni class=\"fa fa-fw fa-user\"\n/i\n Profile\n            \n/a\n\n        \n/li\n\n        \nli\n\n            \na href=\"#messages\" data-toggle=\"tab\"\n\n                \ni class=\"fa fa-fw fa-envelope\"\n/i\n Messages\n            \n/a\n\n        \n/li\n\n    \n/ul\n\n\n\n/div\n\n\n\n\nTabs centered horizontally\n\n\n!-- Tabbable Widget --\n\n\ndiv class=\"tabbable tabs-center-h\"\n/div\n\n\n\n\nActive tab filled with the primary color\n\n\n!-- Tabbable Widget --\n\n\ndiv class=\"tabbable tabs-primary\"\n/div\n\n\n\n\nLeft vertical tabs\n\n\n!-- Tabbable Widget --\n\n\ndiv class=\"tabbable tabs-vertical tabs-left\"\n/div\n\n\n\n\nRight vertical tabs\n\n\n!-- Tabbable Widget --\n\n\ndiv class=\"tabbable tabs-vertical tabs-right\"\n/div\n\n\n\n\nAdvanced combo\n\n\nWe can combine some or all of the options to create more complex tabbable widgets, for example a tabbable widget having the active tab filled with the primary color, with stacked icons and text, and also centered horizontally:\n\n\n!-- Tabbable Widget --\n\n\ndiv class=\"tabbable tabs-blocks tabs-center-h tabs-primary\"\n/div\n\n\n\n\n\n\nWizard\n\n\nThe wizard component can split up large forms into multiple smaller logical sections and convert them into multi-step forms with cool progress bars.\n\n\nRequirements\n\n\nDepends on the \nSlick.js\n library.\n\n\nYou can check if it's already installed by simply looking for the directory \nbower_components/slick.js\n.\n\n\nInstall with bower:\n\n\nbower install slick.js --save\n\n\n\nAdd the library to your theme via the \nbuild process\n:\n\n\n\n\n\n\nCreate \n.build/copy-vendor/copy.media.json\n (or modify existing):\n\n\n[\n    {\n        \"task\": \"copy-vendor-media-scripts\",\n        \"cwd\": \"bower_components\",\n        \"src\": [\"slick.js/slick/slick.js\"],\n        \"dest\": \"js/vendor/media\",\n        \"flatten\": true\n    },\n    {\n        \"task\": \"slick-fonts\",\n        \"cwd\": \"bower_components/slick.js/slick\",\n        \"src\": [\"fonts/*\"],\n        \"dest\": \"css/vendor/fonts\",\n        \"flatten\": true\n    },\n    {\n        \"task\": \"slick-images\",\n        \"cwd\": \"bower_components/slick.js/slick\",\n        \"src\": [\"*.gif\"],\n        \"dest\": \"css/vendor\"\n    }\n]\n\n\n\n\n\n\n\nEnable the library in \nsrc/swig.json\n:\n\n\n{\n    \"css_vendor\": [\n        \"vendor/slick\"\n    ],\n    \"js_vendor\": [\n        \"vendor/media/slick\"\n    ]\n}\n\n\n\n\n\n\n\nOptionally, you can add the library to the \njs/vendor/all.js\n bundle, if you're using it.\n\n\nWithin \n.build/concat.json\n, add the library to the bundle \nfiles\n array:\n\n\n{\n    \"build\": \"js/vendor/all.js\",\n    \"files\": [\n        \"...\",\n        \"media/slick.js\"\n    ]\n}\n\n\n\n\n\n\n\nRun the \nbuild task\n\n\n\n\n\n\nYou're done! \n\n\nThe library should be available in your \ntheme's build path\n:\n\n\n\n\n$BUILD_PATH/$THEME_NAME/js/vendor/media/slick.js\n\n\n$BUILD_PATH/$THEME_NAME/js/vendor/all.js\n should also include the new library.\n\n\n$BUILD_PATH/$THEME_NAME/css/vendor/slick.css\n\n\n$BUILD_PATH/$THEME_NAME/css/vendor/all.css\n should also include the library styling.\n\n\n\n\n\n\n\n\nBasic usage\n\n\nThe wizard markup, at it's minimum:\n\n\n!-- The wizard container --\n\n\ndiv class=\"wizard-container\"\n\n\n    \n!-- Progress --\n\n    \nul class=\"wiz-progress\"\n\n        \nli class=\"active\"\nStep 1\n/li\n\n        \nli\nStep 2\n/li\n\n        \nli\nStep 3\n/li\n\n    \n/ul\n\n\n    \n!-- The form --\n\n    \nform data-toggle=\"wizard\"\n\n\n        \n!-- Wizard step --\n\n        \nfieldset class=\"step\"\n\n\n            \n!-- Previous step --\n\n            \nbutton type=\"button\" class=\"wiz-prev\"\nPrevious\n/button\n\n\n            \n!-- Next step --\n\n            \nbutton type=\"button\" class=\"wiz-next\"\nNext\n/button\n\n\n            \n!-- Go to step index (0 === first) --\n\n            \nbutton type=\"button\" class=\"wiz-step\" data-target=\"0\"\nGo\n/button\n\n\n        \n/fieldset\n\n\n        \n!-- Other steps go here --\n\n\n    \n/form\n\n\n\n/div\n\n\n\n\nCustom style and functionality\n\n\nBehind the scene, the wizard component uses \nslick.js\n to create the basic functionality and provides much flexibility in styling. The markup above for example will be pretty much unstyled, allowing you to create your own, but you can use a predefined wizard style by adding \nwizard-1\n on top of \nwizard-container\n:\n\n\n!-- The wizard container --\n\n\ndiv class=\"wizard-container wizard-1\"\n/div\n\n\n\n\nYou can see a complete example of a wizard using the \nwizard-1\n predefined style:\n\n\n\n\nlib/essential/html/essential-wizards.html\n for the markup\n\n\nlib/essential/less/_wizard.less\n for the style\n\n\nlib/essential/js/_wizard.js\n for an example of adding custom JavaScript functionality to the wizard which updates the progress bar after the wizard step changes\n\n\n\n\nEvents\n\n\nafter.wizard.step\n\n\n$(document).on('after.wizard.step', function (event, data) {\n\n    // do something after a wizard has changed the active step\n\n    // you have access to the wizard container's jQuery object\n    console.log(data.container);\n\n    // you can get the index of the target step\n    console.log(data.target);\n\n    if (data.container.is('#my-wizard')) {\n        // do something only when the event was triggered by a specific wizard\n    }\n\n});\n\n\n\n\n\nNestable lists\n\n\nNestable is a component for nesting hierarchical lists with drag \n drop capabilities, compatible with both mouse events and touch enabled devices.\n\n\nRequirements\n\n\nDepends on the \nNestable\n library.\n\n\nYou can check if it's already installed by simply looking for the directory \nbower_components/nestable\n.\n\n\nInstall with bower:\n\n\nbower install dbushell/Nestable --save\n\n\n\nAdd the library to your theme via the \nbuild process\n:\n\n\n\n\n\n\nCreate \n.build/copy-vendor/copy.nestable.json\n:\n\n\n{\n    \"task\": \"copy-vendor-nestable-library\",\n    \"cwd\": \"bower_components\",\n    \"src\": [\"nestable/jquery.nestable.js\"],\n    \"dest\": \"js/vendor/nestable\",\n    \"flatten\": true\n}\n\n\n\n\n\n\n\nEnable the library in \nsrc/swig.json\n:\n\n\n{\n    \"js_vendor\": [\n        \"vendor/nestable/jquery.nestable\"\n    ]\n}\n\n\n\n\n\n\n\nOptionally, you can add the library to the \njs/vendor/all.js\n bundle, if you're using it.\n\n\nWithin \n.build/concat.json\n, add the library to the bundle \nfiles\n array:\n\n\n{\n    \"build\": \"js/vendor/all.js\",\n    \"files\": [\n        \"...\",\n        \"nestable/jquery.nestable.js\"\n    ]\n}\n\n\n\n\n\n\n\nRun the \nbuild task\n\n\n\n\n\n\nYou're done! \n\n\nThe library should be available in your \ntheme's build path\n:\n\n\n\n\n$BUILD_PATH/$THEME_NAME/js/vendor/nestable/jquery.nestable.js\n\n\n$BUILD_PATH/$THEME_NAME/js/vendor/all.js\n should also include the new library.\n\n\n\n\n\n\n\n\nBasic usage\n\n\nAny nestable element has the base class \nnestable\n:\n\n\ndiv class=\"nestable\"\n/div\n\n\n\n\nWithin this wrapper, we can add unordered lists with the base class \nnestable-list\n and with it's list items having the \nnestable-item\n class. \n\n\nDraggable Items\n\n\nThere are two possible drag \n drop scenarios. In this scenario, the list item is also the drag handle and for this we must wrap the item content with a \nnestable-handle\n container:\n\n\ndiv class=\"nestable\" id=\"nestable\"\n\n\n    \n!-- Top level list --\n\n    \nul class=\"nestable-list\"\n\n\n        \n!-- List item --\n\n        \nli class=\"nestable-item\" data-id=\"1\"\n\n\n            \n!-- Wrap item content with the drag handle --\n\n            \ndiv class=\"nestable-handle\"\nItem 1\n/div\n\n\n        \n/li\n\n\n        \n!-- List item --\n\n        \nli class=\"nestable-item\" data-id=\"2\"\n\n\n            \n!-- Drag handle --\n\n            \ndiv class=\"nestable-handle\"\nItem 2\n/div\n\n\n            \n!-- Nested list --\n\n            \nul class=\"nestable-list\"\n\n\n                \n!-- List item --\n\n                \nli class=\"nestable-item\" data-id=\"2.1\"\n\n\n                    \n!-- Drag handle --\n\n                    \ndiv class=\"nestable-handle\"\nItem 2.1\n/div\n\n\n                \n/li\n\n\n                \n!-- List item --\n\n                \nli class=\"nestable-item\" data-id=\"2.2\"\n\n\n                    \n!-- Drag handle --\n\n                    \ndiv class=\"nestable-handle\"\nItem 2.2\n/div\n\n\n                    \n!-- Nested list --\n\n                    \nul class=\"nestable-list\"\n\n\n                        \n!-- List Items --\n\n\n                    \n/ul\n\n\n                \n/li\n\n                \n!-- // END .nestable-item --\n\n\n            \n/ul\n\n            \n!-- // END .nestable-list --\n\n\n        \n/li\n\n        \n!-- // END .nestable-item --\n\n\n    \n/ul\n\n    \n!-- // END .nestable-list --\n\n\n\n/div\n\n\n!-- // END .nestable --\n\n\n\n\nDraggable Handles\n\n\nIn this scenario, we have item drag handles separated from the item's content. For this, we must add \nnestable-item-handle\n on top of each \nnestable-item\n and use \nnestable-handle\n and \nnestable-content\n within the item to separate the handle and the content:\n\n\ndiv class=\"nestable\" id=\"nestable-handles\"\n\n    \nul class=\"nestable-list\"\n\n\n        \n!-- Note the additional .nestable-item-handle --\n\n        \nli class=\"nestable-item nestable-item-handle\" data-id=\"1\"\n\n\n            \n!-- Separate the nestable item drag handle --\n\n            \ndiv class=\"nestable-handle\"\ni class=\"md md-menu\"\n/i\n/div\n\n\n            \n!-- From the item content --\n\n            \ndiv class=\"nestable-content\"\nItem 1\n/div\n\n\n        \n/li\n\n        \n!-- // END .nestable-item --\n\n\n        \nli class=\"nestable-item nestable-item-handle\" data-id=\"2\"\n\n            \ndiv class=\"nestable-handle\"\ni class=\"md md-menu\"\n/i\n/div\n\n            \ndiv class=\"nestable-content\"\nItem 2\n/div\n\n        \n/li\n\n\n        \nli class=\"nestable-item nestable-item-handle\" data-id=\"3\"\n\n            \ndiv class=\"nestable-handle\"\ni class=\"md md-menu\"\n/i\n/div\n\n            \ndiv class=\"nestable-content\"\nItem 3\n/div\n\n            \nul class=\"nestable-list\"\n\n                \nli class=\"nestable-item nestable-item-handle\" data-id=\"3.1\"\n\n                    \ndiv class=\"nestable-handle\"\ni class=\"md md-menu\"\n/i\n/div\n\n                    \ndiv class=\"nestable-content\"\nItem 3.1\n/div\n\n                \n/li\n\n                \nli class=\"nestable-item nestable-item-handle\" data-id=\"3.2\"\n\n                    \ndiv class=\"nestable-handle\"\ni class=\"md md-menu\"\n/i\n/div\n\n                    \ndiv class=\"nestable-content\"\nItem 3.2\n/div\n\n                \n/li\n\n                \nli class=\"nestable-item nestable-item-handle\" data-id=\"3.3\"\n\n                    \ndiv class=\"nestable-handle\"\ni class=\"md md-menu\"\n/i\n/div\n\n                    \ndiv class=\"nestable-content\"\nItem 3.3\n/div\n\n                \n/li\n\n            \n/ul\n\n        \n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\nDraggable Handles filled with the primary color\n\n\ndiv class=\"nestable nestable-handle-primary\" id=\"nestable-handles\"\n/div\n\n\n\n\nInitialize\n\n\nThe \n.nestable\n elements are self-initialized, but you can programatically initialize a nestable element via jQuery:\n\n\n$('#my-nestable').tkNestable();\n\n\n\nEvents\n\n\nThe \nchange\n event is fired when items are reordered.\n\n\n$('#nestable').on('change', function() {\n    // do something when items are reordered\n});\n\n\n\nMethods\n\n\nYou probably noticed in the examples we've used the \ndata-id\n attribute on every list item. You can get a serialized object with all \ndata-*\n attributes for each item.\n\n\n$('#nestable').nestable('serialize');\n\n\n\nFor the first example with the Draggable Items, the serialized data would be:\n\n\n[\n    {\n        \"id\": 1\n    }, \n    {\n        \"id\": 2, \n        \"children\": [\n            {\n                \"id\": \"2.1\"\n            },\n            {\n                \"id\": \"2.2\"\n            }\n        ]\n    }\n]\n\n\n\n\n\nTree views\n\n\nFancytree is a JavaScript dynamic tree view plugin for jQuery with support for persistence, keyboard, checkboxes, tables, drag and drop, and lazy loading. Fancytree is a sequel of the popular DynaTree plugin.\n\n\nRequirements\n\n\nDepends on the \nFancytree\n library.\n\n\nYou can check if it's already installed by simply looking for the directory \nbower_components/fancytree\n.\n\n\nInstall with bower:\n\n\nbower install fancytree --save\n\n\n\nAdd the library to your theme via the \nbuild process\n:\n\n\n\n\n\n\nCreate \n.build/copy-vendor/copy.tree.json\n:\n\n\n[\n    {\n        \"task\": \"copy-vendor-tree-library\",\n        \"cwd\": \"bower_components\",\n        \"src\": [\"fancytree/dist/jquery.fancytree.js\"],\n        \"dest\": \"js/vendor/tree\",\n        \"flatten\": true\n    },\n    {\n        \"task\": \"copy-vendor-tree-css\",\n        \"cwd\": \"$ROOT_DIR\",\n        \"src\": [\n            \"bower_components/fancytree/dist/skin-bootstrap/ui.fancytree.css\"\n        ],\n        \"dest\": \"css/vendor\",\n        \"flatten\": true\n    }\n]\n\n\n\n\n\n\n\nEnable the library in \nsrc/swig.json\n:\n\n\n{\n    \"css_vendor\": [\n        \"vendor/ui.fancytree\"\n    ],\n    \"js_vendor\": [\n        \"vendor/tree/jquery.fancytree\"\n    ]\n}\n\n\n\n\n\n\n\nOptionally, you can add the library to the \njs/vendor/all.js\n bundle, if you're using it.\n\n\nWithin \n.build/concat.json\n, add the library to the bundle \nfiles\n array:\n\n\n{\n    \"build\": \"js/vendor/all.js\",\n    \"files\": [\n        \"...\",\n        \"tree/jquery.fancytree.js\"\n    ]\n}\n\n\n\n\n\n\n\nRun the \nbuild task\n\n\n\n\n\n\nYou're done! \n\n\nThe library should be available in your \ntheme's build path\n:\n\n\n\n\n$BUILD_PATH/$THEME_NAME/js/vendor/tree/jquery.fancytree.js\n\n\n$BUILD_PATH/$THEME_NAME/js/vendor/all.js\n should also include the new library.\n\n\n$BUILD_PATH/$THEME_NAME/css/vendor/ui.fancytree.css\n\n\n$BUILD_PATH/$THEME_NAME/css/vendor/all.css\n should also include the library styling.\n\n\n\n\n\n\n\n\nBasic usage\n\n\nA tree is a nested list of unordered list items. The first unordered list must have \ndisplay: none;\n and has to be wrapped by a container with the \ndata-toggle\n attribute set to \ntree\n:\n\n\ndiv data-toggle=\"tree\"\n\n    \nul style=\"display: none;\"\n\n        \nli\nitem1\n/li\n\n        \nli\nitem2\n/li\n\n        \nli class=\"folder\"\n\n            Folder \nem\nwith some\n/em\n children\n            \nul\n\n                \nli\nSub-item 3.1\n                    \nul\n\n                        \nli\nSub-item 3.1.1\n/li\n\n                        \nli\nSub-item 3.1.2\n/li\n\n                    \n/ul\n\n                \n/li\n\n                \nli\nSub-item 3.2\n                    \nul\n\n                        \nli\nSub-item 3.2.1\n/li\n\n                        \nli\nSub-item 3.2.2\n/li\n\n                    \n/ul\n\n                \n/li\n\n            \n/ul\n\n        \n/li\n\n        \nli class=\"expanded\"\n\n            Document with some children (expanded on init)\n            \nul\n\n                \nli class=\"active focused expanded\"\n\n                    Sub-item 4.1 (expanded, active and focused on init)\n                    \nul\n\n                        \nli\nSub-item 4.1.1\n/li\n\n                        \nli\nSub-item 4.1.2\n/li\n\n                    \n/ul\n\n                \n/li\n\n                \nli\nSub-item 4.2\n                    \nul\n\n                        \nli\nSub-item 4.2.1\n/li\n\n                        \nli\nSub-item 4.2.2\n/li\n\n                    \n/ul\n\n                \n/li\n\n            \n/ul\n\n        \n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\nDrag \n Drop\n\n\nTo enable drag \n drop, add the \ndata-tree-dnd\n attribute:\n\n\ndiv data-toggle=\"tree\" data-tree-dnd\n/div\n\n\n\n\nSingle selection\n\n\ndiv data-toggle=\"tree\" data-tree-checkbox data-tree-select=\"1\"\n/div\n\n\n\n\nMultiple selection\n\n\ndiv data-toggle=\"tree\" data-tree-checkbox data-tree-select=\"2 or 3\"\n/div\n\n\n\n\nSelection mode\n\n\nWhen using \ndata-tree-checkbox\n, we can specify the selection mode with \ndata-tree-select\n set to one of the following:\n\n\n\n\n1\n: single \n\n\n2\n: multi \n(default)\n\n\n3\n: multi-hier\n\n\n\n\n\n\nModals\n\n\nStreamlined and flexible modals \n dialog prompts with the minimum required functionality and smart options.\n\n\nBasic usage\n\n\nWe'll be using standard modals included with Bootstrap, with some additional options. For basic usage, see the official \nBootstrap documentation\n.\n\n\n!-- Standard Bootstrap markup --\n\n\ndiv class=\"modal fade\" id=\"modal-basic\"\n\n    \ndiv class=\"modal-dialog\"\n\n\n        \n!-- Additionally, wrap the .modal-content into a .v-cell container --\n \n        \n!-- to center the content vertically --\n\n\n        \n!-- This works because we've modified the .modal-overlay --\n\n        \n!-- class to have display: table; --\n\n        \ndiv class=\"v-cell\"\n\n\n            \n!-- Standard Bootstrap markup --\n\n            \ndiv class=\"modal-content\"\n\n                \ndiv class=\"modal-header\"\n\n                    \nbutton type=\"button\" class=\"close\" data-dismiss=\"modal\"\n\n                        \nspan aria-hidden=\"true\"\ntimes;\n/span\n\n                        \nspan class=\"sr-only\"\nClose\n/span\n\n                    \n/button\n\n                    \nh4 class=\"modal-title\"\nModal title\n/h4\n\n                \n/div\n\n                \ndiv class=\"modal-body\"\n\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. A aperiam atque consequuntur dolore fugiat fugit hic in ipsam iure magnam maxime quaerat, quam qui repellat repellendus temporibus vel vitae voluptate!\n                \n/div\n\n                \ndiv class=\"modal-footer\"\n\n                    \nbutton type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"\nClose\n/button\n\n                    \nbutton type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\"\nSave\n/button\n\n                \n/div\n\n            \n/div\n\n\n        \n/div\n\n        \n!-- // END .v-cell --\n\n\n    \n/div\n\n\n/div\n\n\n\n\nAnimations\n\n\nSlide down\n\n\ndiv class=\"modal fade slide-down\" id=\"modal-slide-down\"\n/div\n\n\n\n\nSlide up\n\n\ndiv class=\"modal fade slide-up\" id=\"modal-slide-up\"\n/div\n\n\n\n\nSlide from left\n\n\ndiv class=\"modal fade slide-left\" id=\"modal-slide-left\"\n/div\n\n\n\n\nSlide from right\n\n\ndiv class=\"modal fade slide-right\" id=\"modal-slide-right\"\n/div\n\n\n\n\nGrow\n\n\ndiv class=\"modal fade grow\" id=\"modal-grow\"\n/div\n\n\n\n\nOverlay\n\n\nAdding the \nmodal-overlay\n class on top of \nmodal\n removes the boxed style, by clearing the \nborder\n, \nbox-shadow\n and \nbackground-color\n CSS properties for the \nmodal-content\n element.\n\n\ndiv class=\"modal fade modal-overlay\" id=\"modal-overlay\"\n/div\n\n\n\n\nWhite Backdrop\n\n\nYou can replace the default (dark) backdrop with a white backdrop by adding the \nmodal-backdrop-white\n class on top of \nmodal\n.\n\n\ndiv class=\"modal fade modal-backdrop-white\" id=\"modal-backdrop-white\"\n/div\n\n\n\n\nSize\n\n\nSmall\n\n\nYou can make the modal \n300px\n wide by adding \nmodal-sm\n and \nh-center\n classes on the \nmodal-content\n element.\n\n\ndiv class=\"modal-content modal-sm h-center\"\n/div\n\n\n\n\nLarge\n\n\nYou can also make it larger by adding \nmodal-lg\n class to the \nmodal-content\n element. Note that this doesn't require the additional \nh-center\n class like it does for \nmodal-sm\n.\n\n\ndiv class=\"modal-content modal-lg\"\n/div\n\n\n\n\nCombine styles\n\n\nYou can combine several styles and options to create unique dialogs. For example, a modal with Overlay, White Backdrop and Grow at the same time:\n\n\ndiv class=\"modal fade grow modal-overlay modal-backdrop-white\" id=\"modal-combo\"\n/div\n\n\n\n\nToggle controls\n\n\nbutton data-toggle=\"modal\" data-target=\"#modal-basic\"\nOpen the modal\n/button\n\n\n\n!-- Or --\n\n\na data-toggle=\"modal\" href=\"#modal-basic\"\nOpen the modal\n/a\n\n\n\n!-- Or --\n\n\na data-toggle=\"modal\" data-target=\"#modal-basic\" href=\"#\"\nOpen the modal\n/a\n\n\n\n\nModal Sidebars\n\n\nWe can make modals behave and display as sidebars.\n\n\nRequirements\n\n\n\n\nRequires the \nsidebar\n component.\n\n\n\n\nLeft sidebar modal\n\n\nYou can add sidebar options to the \nmodal-dialog\n element.\n\n\ndiv class=\"modal fade slide-left\" id=\"modal-sidebar-left\"\n\n    \ndiv class=\"modal-dialog sidebar sidebar-size-3 sidebar-size-xs-1 sidebar-offset-0 left\"\n\n\n        \n!-- Standard markup --\n\n\n    \n/div\n\n\n/div\n\n\n\n\nRight sidebar modal\n\n\nSimilarly, you can create a right sidebar modal.\n\n\ndiv class=\"modal fade slide-right\" id=\"modal-sidebar-right\"\n\n    \ndiv class=\"modal-dialog sidebar sidebar-size-3 sidebar-size-xs-1 sidebar-offset-0 right\"\n\n\n        \n!-- Standard markup --\n\n\n    \n/div\n\n\n/div\n\n\n\n\n\n\nCollapsible panels\n\n\nStandard Bootstrap panels with collapse functionality.\n\n\nBasic usage\n\n\nTo enable, add the \ndata-toggle\n attribute with a value of \npanel-collapse\n to any \npanel\n element. Also, add the \npanel-collapse-trigger\n class to the \npanel-heading\n element.\n\n\ndiv class=\"panel panel-default\" data-toggle=\"panel-collapse\"\n\n    \ndiv class=\"panel-heading panel-collapse-trigger\"\n\n        \nh4 class=\"panel-title\"\nPanel title\n/h4\n\n    \n/div\n\n    \ndiv class=\"panel-body\"\n\n        \n!-- Collapsible content --\n\n    \n/div\n\n\n/div\n\n\n\n\nOptions\n\n\nOpen by default\n\n\nAdd the \ndata-open\n attribute with a value of \ntrue\n to the \npanel\n element.\n\n\ndiv class=\"panel panel-default\" data-toggle=\"panel-collapse\" data-open=\"true\"\n/div\n\n\n\n\n\n\nCover overlays\n\n\nThe cover component helps create complex layered UI elements consisting of:\n\n\n\n\nA primary area (for example, an image);\n\n\nAn overlay area, positioned on top of the primary area, with different display options and elements of it's own.\n\n\n\n\nSo, for example, consider a UI element which displays an image. When a user hovers the image, it can display a call to action on top of the image (\"Buy\" or \"Rate\" buttons). But really, you could display anything on the overlay. \n\n\nThe cover component provides: \n\n\n\n\nsmart image features like stretch-to-fit functionality with automatic resizing and aspect ratio detection.\n\n\noverlay helpers for positioning other elements within the overlay.\n\n\noverlay text size \n color helpers.\n\n\noverlay background color helpers.\n\n\n\n\nRequirements\n\n\nDepends on \nload_image\n, a small JavaScript library providing a realiable callback after an image is loaded.\n\n\nYou can check if it's already installed by simply looking for the directory \nbower_components/load_image\n.\n\n\nInstall with bower:\n\n\nbower install mixonic/load_image --save\n\n\n\nAdd the library to your theme via the \nbuild process\n:\n\n\n\n\n\n\nEdit \n.build/copy-vendor/copy.core.json\n to include the library:\n\n\n{\n    \"task\": \"copy-vendor-core-scripts\",\n    \"cwd\": \"bower_components\",\n    \"src\": [\n        \"...\",\n        \"load_image/load_image.js\"\n    ],\n    \"dest\": \"js/vendor/core\",\n    \"flatten\": true\n}\n\n\n\n\n\n\n\nEnable the library in \nsrc/swig.json\n:\n\n\n{\n    \"js_vendor\": [\n        \"vendor/core/load_image\"\n    ]\n}\n\n\n\n\n\n\n\nOptionally, you can add the library to the \njs/vendor/all.js\n and \njs/vendor/core/all.js\n bundles, if you're using them.\n\n\nWithin \n.build/concat-vendor/concat.core.json\n, add the library to the \njs/vendor/core/all.js\n bundle \nfiles\n array:\n\n\n{\n    \"build\": \"js/vendor/core/all.js\",\n    \"files\": [\n        \"...\",\n        \"load_image.js\"\n    ]\n}\n\n\n\nNote that if you're adding the library to the \njs/vendor/core/all.js\n bundle, you don't have to do anything else for the library to be included in \njs/vendor/all.js\n bundle, because the \njs/vendor/all.js\n bundle is already configured to include the \njs/vendor/core/all.js\n bundle.\n\n\nWithin \n.build/concat.json\n, add the library to the \njs/vendor/all.js\n bundle \nfiles\n array:\n\n\n{\n    \"build\": \"js/vendor/all.js\",\n    \"files\": [\n        \"...\",\n        \"core/load_image.js\"\n    ]\n}\n\n\n\n\n\n\n\nRun the \nbuild task\n\n\n\n\n\n\nYou're done! \n\n\nThe library should be available in your \ntheme's build path\n:\n\n\n\n\n$BUILD_PATH/$THEME_NAME/js/vendor/core/load_image.js\n\n\n$BUILD_PATH/$THEME_NAME/js/vendor/core/all.js\n should also include the new library.\n\n\n$BUILD_PATH/$THEME_NAME/js/vendor/all.js\n should also include the new library.\n\n\n\n\n\n\n\n\nBasic usage\n\n\ndiv class=\"cover overlay\"\n\n    \nimg src=\"path/to/image.jpg\" alt=\"image\" /\n\n    \ndiv class=\"overlay\"\n\n        \nh3 class=\"text-overlay\"\nOverlay\n/h3\n\n        \np\nLorem ipsum dolor sit amet, consectetur adipisicing elit.\n/p\n\n    \n/div\n\n\n/div\n\n\n\n\nOptions\n\n\n@TODO\n\n\n\n\nForms\n\n\n@TODO\n\n\n\n\nButtons\n\n\nIn addition to standard Bootstrap button classes, we provide a couple of extra options.\n\n\nRegular buttons\n\n\nbutton class=\"btn btn-white\"\nWhite\n/button\n\n\nbutton class=\"btn btn-default\"\nDefault\n/button\n\n\nbutton class=\"btn btn-primary\"\nPrimary\n/button\n\n\nbutton class=\"btn btn-success\"\nSuccess\n/button\n\n\nbutton class=\"btn btn-warning\"\nWarning\n/button\n\n\nbutton class=\"btn btn-inverse\"\nInverse\n/button\n\n\nbutton class=\"btn btn-danger\"\nDanger\n/button\n\n\n\n\nButton sizes\n\n\nVarious buttons sizes for common scenarios, from large buttons, to medium sized, small and very small buttons.\n\n\nbutton class=\"btn btn-default btn-lg\"\nLarge\n/button\n\n\nbutton class=\"btn btn-primary\"\nRegular\n/button\n\n\nbutton class=\"btn btn-success btn-sm\"\nSmall\n/button\n\n\nbutton class=\"btn btn-info btn-xs\"\nVery Small\n/button\n\n\n\n\nButtons with icons\n\n\n!-- Text and icon --\n\n\nbutton class=\"btn btn-white\"\ni class=\"fa fa-home\"\n/i\n Home\n/button\n\n\nbutton class=\"btn btn-primary\"\ni class=\"icon-user-1\"\n/i\n Profile\n/button\n\n\nbutton class=\"btn btn-success\"\ni class=\"fa fa-check-circle\"\n/i\n Confirm\n/button\n\n\nbutton class=\"btn btn-danger\"\ni class=\"fa fa-times\"\n/i\n Delete\n/button\n\n\n\n!-- Only icon --\n\n\nbutton class=\"btn btn-default btn-lg\"\ni class=\"fa fa-picture-o\"\n/i\n/button\n\n\nbutton class=\"btn btn-inverse\"\ni class=\"fa fa-envelope\"\n/i\n/button\n\n\nbutton class=\"btn btn-primary\"\ni class=\"fa fa-pencil\"\n/i\n/button\n\n\nbutton class=\"btn btn-warning btn-sm\"\ni class=\"fa fa-download\"\n/i\n/button\n\n\nbutton class=\"btn btn-info btn-xs\"\ni class=\"fa fa-cloud-upload\"\n/i\n/button\n\n\n\n!-- Only icon with circular shape --\n\n\nbutton class=\"btn btn-default btn-circle\"\ni class=\"fa fa-user\"\n/i\n/button\n\n\nbutton class=\"btn btn-inverse btn-circle\"\ni class=\"fa fa-home\"\n/i\n/button\n\n\nbutton class=\"btn btn-primary btn-circle\"\ni class=\"fa fa-building\"\n/i\n/button\n\n\nbutton class=\"btn btn-warning btn-circle\"\ni class=\"fa fa-sign-out\"\n/i\n/button\n\n\nbutton class=\"btn btn-info btn-circle\"\ni class=\"fa fa-medkit\"\n/i\n/button\n\n\n\n\nStroke buttons\n\n\nInverse button colors for text, background and border attributes and get a stroked button.\n\n\n!-- Stroke regular buttons --\n\n\nbutton class=\"btn btn-default btn-stroke\"\nDefault\n/button\n\n\nbutton class=\"btn btn-primary btn-stroke\"\nPrimary\n/button\n\n\nbutton class=\"btn btn-success btn-stroke\"\nSuccess\n/button\n\n\nbutton class=\"btn btn-warning btn-stroke\"\nWarning\n/button\n\n\nbutton class=\"btn btn-inverse btn-stroke\"\nInverse\n/button\n\n\nbutton class=\"btn btn-danger btn-stroke\"\nDanger\n/button\n\n\n\n!-- Stroke buttons with icons only --\n\n\nbutton class=\"btn btn-default btn-stroke\"\ni class=\"fa fa-picture-o\"\n/i\n/button\n\n\nbutton class=\"btn btn-inverse btn-stroke\"\ni class=\"fa fa-envelope\"\n/i\n/button\n\n\nbutton class=\"btn btn-primary btn-stroke\"\ni class=\"fa fa-pencil\"\n/i\n/button\n\n\nbutton class=\"btn btn-warning btn-stroke\"\ni class=\"fa fa-download\"\n/i\n/button\n\n\nbutton class=\"btn btn-info btn-stroke\"\ni class=\"fa fa-cloud-upload\"\n/i\n/button\n\n\n\n!-- Stroke buttons with icons and circular shape --\n\n\nbutton class=\"btn btn-default btn-stroke btn-circle\"\ni class=\"fa fa-user\"\n/i\n/button\n\n\nbutton class=\"btn btn-inverse btn-stroke btn-circle\"\ni class=\"fa fa-home\"\n/i\n/button\n\n\nbutton class=\"btn btn-primary btn-stroke btn-circle\"\ni class=\"fa fa-building\"\n/i\n/button\n\n\nbutton class=\"btn btn-warning btn-stroke btn-circle\"\ni class=\"fa fa-sign-out\"\n/i\n/button\n\n\nbutton class=\"btn btn-info btn-stroke btn-circle\"\ni class=\"fa fa-medkit\"\n/i\n/button\n\n\n\n\nStacked buttons\n\n\nStacked Buttons with two lines of text and icon. All regular button styles can be used with stacked buttons.\n\n\nbutton class=\"btn btn-primary btn-icon-stacked\"\n\n    \ni class=\"fa fa-2x fa-twitter\"\n/i\n \n    \nspan\nJoin using your\nbr\nTwitter Account\n/span\n\n\n/button\n\n\n\nbutton class=\"btn btn-inverse btn-icon-stacked\"\n\n    \ni class=\"fa fa-2x fa-google-plus\"\n/i\n \n    \nspan\nJoin using your\nbr\nGoogle Account\n/span\n\n\n/button\n\n\n\nbutton class=\"btn btn-info btn-icon-stacked\"\n\n    \ni class=\"fa fa-2x fa-dribbble\"\n/i\n \n    \nspan\nJoin using your\nbr\nDribble Account\n/span\n\n\n/button\n\n\n\n\nButtons with dropdowns\n\n\nUse any button to trigger a dropdown menu by placing it within a \n.btn-group\n and providing the proper menu markup.\n\n\ndiv class=\"btn-group\"\n\n    \nbutton type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\"\n\n        Dropdown Default\n        \nspan class=\"caret\"\n/span\n\n    \n/button\n\n    \nul class=\"dropdown-menu\"\n\n        \nli\na href=\"#\"\nAction\n/a\n/li\n\n        \nli\na href=\"#\"\nAnother action\n/a\n/li\n\n        \nli\na href=\"#\"\nSomething else here\n/a\n/li\n\n        \nli class=\"divider\"\n/li\n\n        \nli\na href=\"#\"\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\ndiv class=\"btn-group\"\n\n    \nbutton type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"\n\n        Dropdown Primary\n        \nspan class=\"caret\"\n/span\n\n    \n/button\n\n    \nul class=\"dropdown-menu pull-right\"\n\n        \nli\na href=\"#\"\nAction\n/a\n/li\n\n        \nli\na href=\"#\"\nAnother action\n/a\n/li\n\n        \nli\na href=\"#\"\nSomething else here\n/a\n/li\n\n        \nli class=\"divider\"\n/li\n\n        \nli\na href=\"#\"\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\n\nRibbons\n\n\nThe ribbon UI component is a great way to present additional information or even highlight important content.\n\n\nBookmark ribbons\n\n\nFloating fluid boomark ribbons that span across multiple lines of text\n\n\nNote the extra \nribbon-wrapper\n class on the otherwise standard Bootstrap panel:\n\n\ndiv class=\npanel panel-default ribbon-wrapper\n\n    \ndiv class=\npanel-body\n\n\n        \n!-- The ribbon --\n\n        \ndiv class=\npull-right ribbon-mark ribbon-primary\n\n            \nspan class=\ntext\nFluid mark that spans\nbr/\nacross multiple lines\n/span\n\n        \n/div\n\n        \n!-- // END .ribbon-mark --\n\n\n        \nh3 class=\nmargin-v-10-15\nFloating Bookmark ribbon\n/h3\n\n        \np\nLorem ipsum dolor sit amet, consectetur adipisicing elit. A accusamus aut consectetur consequatur cum cupiditate debitis doloribus, error ex explicabo harum illum minima mollitia nisi nostrum officiis omnis optio qui quisquam saepe sit sunt totam vel velit voluptatibus? Adipisci ducimus expedita id nostrum quas quia!\n/p\n\n    \n/div\n\n\n/div\n\n\n\n\n\nAbsolute positioned bookmark ribbons\n\n\ndiv class=\npanel panel-default ribbon-wrapper\n\n\n    \n!-- Left ribbon --\n\n    \ndiv class=\nribbon-mark ribbon-default absolute left\n\n        \nspan class=\nribbon\n\n            \nspan class=\ntext\nLeft\n/span\n\n        \n/span\n\n    \n/div\n\n\n    \n!-- Right ribbon --\n\n    \ndiv class=\nribbon-mark ribbon-primary absolute right\n\n        \nspan class=\nribbon\n\n            \nspan class=\ntext\nMark\n/span\n\n        \n/span\n\n    \n/div\n\n\n    \n!-- Arbitrary content --\n\n    \ndiv class=\npanel-body\n\n        \np\nLorem ipsum dolor sit amet, consectetur adipisicing elit. A accusamus aut consectetur consequatur cum cupiditate debitis doloribus, error ex explicabo harum illum minima mollitia nisi nostrum officiis omnis optio qui quisquam saepe sit sunt totam vel velit voluptatibus? Adipisci ducimus expedita id nostrum quas quia!\n/p\n\n    \n/div\n\n\n/div\n\n\n\n\n\nHeading ribbons\n\n\nLeft to right, full ribbon block lines\n\n\nBottom corners, left to right:\n\n\nh1 class=\nribbon-heading ribbon-primary bottom-left-right\nImportant headings\n/h1\n\n\np\nLorem ipsum dolor sit amet, consectetur adipisicing elit. A accusamus aut consectetur consequatur cum cupiditate debitis doloribus, error ex explicabo harum illum minima mollitia nisi nostrum officiis omnis optio qui quisquam saepe sit sunt totam vel velit voluptatibus? Adipisci ducimus expedita id nostrum quas quia!\n/p\n\n\n\n\n\nTop corners, left to right, appropriate when placing the next heading after a large text area:\n\n\np\nLorem ipsum dolor sit amet, consectetur adipisicing elit. A accusamus aut consectetur consequatur cum cupiditate debitis doloribus, error ex explicabo harum illum minima mollitia nisi nostrum officiis omnis optio qui quisquam saepe sit sunt totam vel velit voluptatibus? Adipisci ducimus expedita id nostrum quas quia!\n/p\n\n\n\nh1 class=\nribbon-heading ribbon-default top-left-right\nVarious styles included\n/h1\n\n\n\n\n\nInline ribbon\n\n\nTop corner, on left:\n\n\ndiv class=\npull-left\n\n    \nh2 class=\nribbon-heading ribbon-primary top-left inline\nTop left inline ribbon\n/h2\n\n\n/div\n\n\ndiv class=\nclearfix\n/div\n\n\n\np\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur debitis dignissimos maiores nisi optio quas, quod? Animi fuga inventore laborum nemo quaerat quis quod? Alias, architecto consequuntur corporis deleniti dolor facilis id minima necessitatibus nihil perspiciatis quo repellendus saepe, sunt suscipit velit. Deleniti dolorum id maxime omnis perspiciatis sed, veniam?\n/p\n\n\n\n\n\nBottom corner, on right:\n\n\ndiv class=\npull-right\n\n    \nh3 class=\nribbon-heading ribbon-primary bottom-right inline\n\n        Bottom right inline ribbon\n    \n/h3\n\n\n/div\n\n\ndiv class=\nclearfix\n/div\n\n\n\np\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur debitis dignissimos maiores nisi optio quas, quod? Animi fuga inventore laborum nemo quaerat quis quod? Alias, architecto consequuntur corporis deleniti dolor facilis id minima necessitatibus nihil perspiciatis quo repellendus saepe, sunt suscipit velit. Deleniti dolorum id maxime omnis perspiciatis sed, veniam?\n/p\n\n\n\n\n\nCorner ribbons\n\n\nSimilar to the \"Fork me on Github\" button we see all the time:\n\n\n!-- Notice the extra .ribbon-corner-wrapper class --\n\n\ndiv class=\npanel panel-default ribbon-wrapper ribbon-corner-wrapper\n\n\n    \n!-- The ribbon --\n\n    \ndiv class=\nribbon-corner left\n\n        \na href=\n#\nFork me on GitHub\n/a\n\n    \n/div\n\n    \n!-- // END .ribbon-corner --\n\n\n    \n!-- Arbitrary content --\n\n    \ndiv class=\npanel-body\n\n        \ndiv class=\nrow\n\n            \nh3 class=\nmargin-v-10-15 text-center\nAbsolute Corner ribbon\n/h3\n\n            \ndiv class=\ncol-xs-10 col-xs-offset-2 col-sm-11 col-sm-offset-1 text-right\n\n                \np\nLorem ipsum dolor sit amet, consectetur adipisicing elit. A accusamus aut consectetur consequatur cum cupiditate debitis doloribus, error ex explicabo harum illum minima mollitia nisi nostrum officiis omnis optio qui quisquam saepe sit sunt totam vel velit voluptatibus? Adipisci ducimus expedita id nostrum quas quia!\n/p\n\n            \n/div\n\n        \n/div\n\n        \np\nLorem ipsum dolor sit amet, consectetur adipisicing elit. A accusamus aut consectetur consequatur cum cupiditate debitis doloribus, error ex explicabo harum illum minima mollitia nisi nostrum officiis omnis optio qui quisquam saepe sit sunt totam vel velit voluptatibus? Adipisci ducimus expedita id nostrum quas quia!\n/p\n\n    \n/div\n\n    \n!-- // END content --\n\n\n\n/div\n\n\n\n\n\nAdditionally, you can use \nright\n instead of \nleft\n on the ribbon:\n\n\n!-- The ribbon --\n\n\ndiv class=\"ribbon-corner right\"\n\n    \na href=\"#\"\nFork me on GitHub\n/a\n\n\n/div\n\n\n!-- // END .ribbon-corner --\n\n\n\n\n\n\nTypography\n\n\nFor the basic typographic styles, we have followed the \nMaterial Design\n guidelines to work across the wider set of supported platforms and to balance content density and reading comfort under typical usage conditions.\n\n\nDefault size unit\n\n\nFor the \nhtml\n we've set a default sizing unit of \n13px\n, both text size and line height.\n\n\nFrom here, we're only using scalable \nrem\n sizing units relative to the base. Keep in mind the base unit of 1rem = 13px.\n\n\nThe \nbody\n has:\n\n\nline-height: 1.53rem;\nfont-size: 1rem;\n\n\n\nUsage\n\n\nDisplay 4\n\n\nLight text weight of 300, scalable text size and line height of 8.6rem.\n\n\ndiv class=\"text-display-4\"\nDisplay 4\n/div\n\n\n\n\nDisplay 3\n\n\nRegular text weight of 400, scalable text size and line height of 4.3rem.\n\n\ndiv class=\"text-display-3\"\nDisplay 3\n/div\n\n\n\n\nDisplay 2\n\n\nRegular text weight of 400, scalable text size of 3.46rem and line height of 3.69rem.\n\n\ndiv class=\"text-display-2\"\nDisplay 2\n/div\n\n\n\n\nDisplay 1\n\n\nRegular text weight of 400, scalable text size of 2.61rem and line height of 3.07rem.\n\n\ndiv class=\"text-display-1\"\nDisplay 1\n/div\n\n\n\n\nHeadline\n\n\nRegular text weight of 400, scalable text size of 1.84rem and line height of 2.46rem.\n\n\ndiv class=\"text-headline\"\nHeadline\n/div\n\n\n\n\nTitle\n\n\nMedium text weight of 500, scalable text size of 1.53rem.\n\n\ndiv class=\"text-title\"\nTitle\n/div\n\n\n\n\nSubhead\n\n\nRegular text weight of 400, scalable text size of 1.15rem and line height of 1.84rem.\n\n\ndiv class=\"text-subhead\"\nSubhead\n/div\n\n\n\n\nSubhead 2\n\n\nMedium text weight of 500, scalable text size of 1.15rem and line height of 2.15rem.\n\n\ndiv class=\"text-subhead-2\"\nSubhead 2\n/div\n\n\n\n\nCaption\n\n\nRegular text weight of 400, scalable text size of 0.92rem.\n\n\ndiv class=\"text-caption\"\nCaption\n/div\n\n\n\n\nBody 1\n\n\nRegular text weight of 400, scalable text size of 1rem \n(default)\n.\n\n\np\nRegular text body.\n/p\n\n\n\n\nBody 2\n\n\nMedium text weight of 500, scalable text size of 1rem and line height of 1.84rem.\n\n\np class=\"text-body-2\"\nMedium text body.\n/p\n\n\n\n\n\n\nCSS Helpers\n\n\nPositioning helpers\n\n\nrelative\n\n\nThe \nrelative\n class adds \nposition: relative;\n to any element.\n\n\noverflow-hidden\n\n\nThe \noverflow-hidden\n class adds \noverflow: hidden;\n to any element.\n\n\nabsolute\n\n\nThe \nabsolute\n class adds \nposition: absolute;\n to any element. Use in combination with \ntop\n, \nbottom\n, \nleft\n, \nright\n classes to set the corresponding CSS properties to \n$property: 0;\n.\n\n\nText helpers\n\n\ntext-underline\n\n\nThe \ntext-underline\n class adds \ntext-decoration: underline;\n to any element.\n\n\nstrong\n\n\nThe \nstrong\n class adds \nfont-weight: bold;\n to any element.\n\n\ntext-left\n\n\nThe \ntext-left\n class adds \ntext-align: left !important;\n to any element.\n\n\nBackground helpers\n\n\nbg-transparent\n\n\nThe \nbg-transparent\n class adds \nbackground: transparent !important;\n to any element.\n\n\nDisplay helpers\n\n\ndisplay-none\n\n\nThe \ndisplay-none\n class adds \ndisplay: none;\n to any element.\n\n\ninline-block, display-inline-block\n\n\nThe \ndisplay-inline-block\n and \ninline-block\n classes adds \ndisplay: inline-block;\n to any element.\n\n\nblock\n\n\nThe \nblock\n class adds \ndisplay: block;\n to any element.\n\n\nSpacing helpers\n\n\npadding-none\n\n\nThe \npadding-none\n class adds \npadding: 0 !important;\n to any element.\n\n\npadding-top-none\n\n\nThe \npadding-top-none\n class adds \npadding-top: 0 !important;\n to any element.\n\n\npadding-bottom-none\n\n\nThe \npadding-bottom-none\n class adds \npadding-bottom: 0 !important;\n to any element.\n\n\nmargin-none\n\n\nThe \nmargin-none\n class adds \nmargin: 0 !important;\n to any element.\n\n\nmargin-bottom-none\n\n\nThe \nmargin-bottom-none\n class adds \nmargin-bottom: 0 !important;\n to any element.\n\n\nAlignment helpers\n\n\nh-center\n\n\nThe \nh-center\n class adds \nmargin-left: auto !important;\n and \nmargin-right: auto !important;\n to any element.\n\n\nTable helpers\n\n\ndisplay-table\n\n\nThe \ndisplay-table\n class adds \ndisplay: table;\n to any element.\n\n\nv-middle\n\n\nThe \nv-middle\n class adds \nvertical-align: middle !important;\n to any element.\n\n\nv-top\n\n\nThe \nv-top\n class adds \nvertical-align: top !important;\n to any element.\n\n\nv-cell\n\n\nThe \nv-cell\n class adds \ndisplay: table-cell;\n and \nvertical-align: middle;\n to any element.\n\n\ntable-row\n\n\nThe \ntable-row\n class adds \ndisplay: table-row;\n to any element.\n\n\ntable-cell\n\n\nThe \ntable-cell\n class adds \ndisplay: table-cell;\n to any element.\n\n\nSizing helpers\n\n\nheight-100pc\n\n\nThe \nheight-100pc\n class adds \nheight: 100%;\n to any element.\n\n\n@TODO", 
            "title": "Essential"
        }, 
        {
            "location": "/reference/essential/index.html#essential", 
            "text": "The essential package provides a collection of commonly used elements and functionality:   Buttons  Icons  Expandable areas  Ribbons  Forms  Tabs  Nestable lists  Tree views  Tables  Progress bars  Modals   Note : You can see full examples in the source within the  lib/essential/html/  directory.", 
            "title": "Essential"
        }, 
        {
            "location": "/reference/essential/index.html#requirements", 
            "text": "JavaScript  To load the entire essential package, from  src/js/themes/$THEME_NAME/app.js :  // Essential package\nrequire('essential/js/main');  This will load  lib/essential/js/main.js  into our main application script bundle.  Less  From  src/less/themes/$THEME_NAME/app.less :  // Essential package\n@import \"essential/less/main\";  Which will load  lib/essential/less/main.less  into our main application style bundle.   RTL Support  Add to  src/less/themes/$THEME_NAME/app.less , after the main component:  // Essential RTL\n@import \"essential/less/main-rtl\";   Alternative  If working with Less and Browserify bundles is not your favorite thing, you can alternatively load the pre-built static assets we have included:  !-- In the head of the HTML document --  link rel=\"stylesheet\" href=\"css/app/essential.css\" /  !-- At the bottom of the HTML document --  script src=\"js/app/essential.js\" /script", 
            "title": "Requirements"
        }, 
        {
            "location": "/reference/essential/index.html#expandable-areas", 
            "text": "The expandable component is a great way to present a large content area with a small preview. Click anywhere on the preview area to show the entire content.  div class=\"expandable expandable-trigger\" \n     div class=\"expandable-content\" \n         !-- content goes here -- \n     /div  /div   This will create an expandable area with a preview of  100px  height.   Additionaly, you can add on top of  expandable-content :    expandable-content-medium  to make the preview area  150px  expandable-content-large  to make the preview area  200px   For example:  div class=\"expandable expandable-trigger\" \n     div class=\"expandable-content expandable-content-medium\" \n         !-- creates a 150px preview -- \n     /div  /div   And:  div class=\"expandable expandable-trigger\" \n     div class=\"expandable-content expandable-content-large\" \n         !-- creates a 200px preview -- \n     /div  /div   By default, the expandable indicator, which is added at the bottom of the preview area, will have a greish background color. You can make it white, by adding  expandable-indicator-white  on top of  expandable :  div class=\"expandable expandable-indicator-white expandable-trigger\" \n     div class=\"expandable-content\" \n         !-- content goes here -- \n     /div  /div   You can combine the expandable component with other UI elements, such as Bootstrap panels:  div class=\"panel panel-default\" \n     div class=\"panel-body expandable expandable-indicator-white expandable-trigger\" \n         div class=\"expandable-content\" \n             !-- content goes here -- \n         /div \n     /div  /div   Initialize  The component is self-initialized just by loading the required assets, but you can programatically initialize an expandable area via jQuery:  $.tkExpandable()  $('#my-expandable-area').tkExpandable();", 
            "title": "Expandable areas"
        }, 
        {
            "location": "/reference/essential/index.html#tabbable", 
            "text": "The tabbable component includes many positioning and styling options, starting with minimalistic tabs to vertical or horizontal tabs, left, center or right aligned and more. The resulting tabs are responsive and the component automatically displays a horizontal scrolling area when using many tabs on a single tabbable area.  Basics  Any tabbable widget starts with a minimal  tabbable  wrapper:  !-- Tabbable Widget --  div class=\"tabbable\" /div   Next, we're using standard tabs functionality included with Bootstrap:  !-- Tabbable Widget --  div class=\"tabbable\" \n\n     !-- Tabs -- \n     ul class=\"nav nav-tabs\" \n         li class=\"active\" a href=\"#home\" data-toggle=\"tab\" Home /a /li \n         li a href=\"#profile\" data-toggle=\"tab\" Profile /a /li \n         li a href=\"#messages\" data-toggle=\"tab\" Messages /a /li \n     /ul \n     !-- // END Tabs -- \n\n     !-- Panes -- \n     div class=\"tab-content\" \n         div id=\"home\" class=\"tab-pane active\" /div \n         div id=\"profile\" class=\"tab-pane\" /div \n         div id=\"messages\" class=\"tab-pane\" /div \n     /div \n     !-- // END Panes --  /div  !-- // END Tabbable Widget --   Icons and text  We can add icons to our tabs:  ul class=\"nav nav-tabs\" \n     li class=\"active\" \n         a href=\"#home\" data-toggle=\"tab\" \n             i class=\"fa fa-fw fa-home\" /i  Home\n         /a \n     /li \n     li \n         a href=\"#profile\" data-toggle=\"tab\" \n             i class=\"fa fa-fw fa-user\" /i  Profile\n         /a \n     /li \n     li \n         a href=\"#messages\" data-toggle=\"tab\" \n             i class=\"fa fa-fw fa-envelope\" /i  Messages\n         /a \n     /li  /ul   Icons only  We can have tabs display only with icons, by adding  tabs-icons  to the  tabbable  element:  !-- Tabbable Widget --  div class=\"tabbable tabs-icons\" \n\n     !-- Tabs -- \n     ul class=\"nav nav-tabs\" \n         li class=\"active\" \n             a href=\"#home\" data-toggle=\"tab\" \n                 i class=\"fa fa-fw fa-home\" /i \n             /a \n         /li \n         li \n             a href=\"#profile\" data-toggle=\"tab\" \n                 i class=\"fa fa-fw fa-user\" /i \n             /a \n         /li \n         li \n             a href=\"#messages\" data-toggle=\"tab\" \n                 i class=\"fa fa-fw fa-envelope\" /i \n             /a \n         /li \n     /ul  /div   Stacked icons and text  We can stack the icon on top of the text so they're no longer next to each other, but on two lines and text centered, by adding  tabs-blocks  to the  tabbable  element:  !-- Tabbable Widget --  div class=\"tabbable tabs-blocks\" \n\n     !-- Tabs -- \n     ul class=\"nav nav-tabs\" \n         li class=\"active\" \n             a href=\"#home\" data-toggle=\"tab\" \n                 i class=\"fa fa-fw fa-home\" /i  Home\n             /a \n         /li \n         li \n             a href=\"#profile\" data-toggle=\"tab\" \n                 i class=\"fa fa-fw fa-user\" /i  Profile\n             /a \n         /li \n         li \n             a href=\"#messages\" data-toggle=\"tab\" \n                 i class=\"fa fa-fw fa-envelope\" /i  Messages\n             /a \n         /li \n     /ul  /div   Tabs centered horizontally  !-- Tabbable Widget --  div class=\"tabbable tabs-center-h\" /div   Active tab filled with the primary color  !-- Tabbable Widget --  div class=\"tabbable tabs-primary\" /div   Left vertical tabs  !-- Tabbable Widget --  div class=\"tabbable tabs-vertical tabs-left\" /div   Right vertical tabs  !-- Tabbable Widget --  div class=\"tabbable tabs-vertical tabs-right\" /div   Advanced combo  We can combine some or all of the options to create more complex tabbable widgets, for example a tabbable widget having the active tab filled with the primary color, with stacked icons and text, and also centered horizontally:  !-- Tabbable Widget --  div class=\"tabbable tabs-blocks tabs-center-h tabs-primary\" /div", 
            "title": "Tabbable"
        }, 
        {
            "location": "/reference/essential/index.html#wizard", 
            "text": "The wizard component can split up large forms into multiple smaller logical sections and convert them into multi-step forms with cool progress bars.  Requirements  Depends on the  Slick.js  library.  You can check if it's already installed by simply looking for the directory  bower_components/slick.js .  Install with bower:  bower install slick.js --save  Add the library to your theme via the  build process :    Create  .build/copy-vendor/copy.media.json  (or modify existing):  [\n    {\n        \"task\": \"copy-vendor-media-scripts\",\n        \"cwd\": \"bower_components\",\n        \"src\": [\"slick.js/slick/slick.js\"],\n        \"dest\": \"js/vendor/media\",\n        \"flatten\": true\n    },\n    {\n        \"task\": \"slick-fonts\",\n        \"cwd\": \"bower_components/slick.js/slick\",\n        \"src\": [\"fonts/*\"],\n        \"dest\": \"css/vendor/fonts\",\n        \"flatten\": true\n    },\n    {\n        \"task\": \"slick-images\",\n        \"cwd\": \"bower_components/slick.js/slick\",\n        \"src\": [\"*.gif\"],\n        \"dest\": \"css/vendor\"\n    }\n]    Enable the library in  src/swig.json :  {\n    \"css_vendor\": [\n        \"vendor/slick\"\n    ],\n    \"js_vendor\": [\n        \"vendor/media/slick\"\n    ]\n}    Optionally, you can add the library to the  js/vendor/all.js  bundle, if you're using it.  Within  .build/concat.json , add the library to the bundle  files  array:  {\n    \"build\": \"js/vendor/all.js\",\n    \"files\": [\n        \"...\",\n        \"media/slick.js\"\n    ]\n}    Run the  build task    You're done!   The library should be available in your  theme's build path :   $BUILD_PATH/$THEME_NAME/js/vendor/media/slick.js  $BUILD_PATH/$THEME_NAME/js/vendor/all.js  should also include the new library.  $BUILD_PATH/$THEME_NAME/css/vendor/slick.css  $BUILD_PATH/$THEME_NAME/css/vendor/all.css  should also include the library styling.     Basic usage  The wizard markup, at it's minimum:  !-- The wizard container --  div class=\"wizard-container\" \n\n     !-- Progress -- \n     ul class=\"wiz-progress\" \n         li class=\"active\" Step 1 /li \n         li Step 2 /li \n         li Step 3 /li \n     /ul \n\n     !-- The form -- \n     form data-toggle=\"wizard\" \n\n         !-- Wizard step -- \n         fieldset class=\"step\" \n\n             !-- Previous step -- \n             button type=\"button\" class=\"wiz-prev\" Previous /button \n\n             !-- Next step -- \n             button type=\"button\" class=\"wiz-next\" Next /button \n\n             !-- Go to step index (0 === first) -- \n             button type=\"button\" class=\"wiz-step\" data-target=\"0\" Go /button \n\n         /fieldset \n\n         !-- Other steps go here -- \n\n     /form  /div   Custom style and functionality  Behind the scene, the wizard component uses  slick.js  to create the basic functionality and provides much flexibility in styling. The markup above for example will be pretty much unstyled, allowing you to create your own, but you can use a predefined wizard style by adding  wizard-1  on top of  wizard-container :  !-- The wizard container --  div class=\"wizard-container wizard-1\" /div   You can see a complete example of a wizard using the  wizard-1  predefined style:   lib/essential/html/essential-wizards.html  for the markup  lib/essential/less/_wizard.less  for the style  lib/essential/js/_wizard.js  for an example of adding custom JavaScript functionality to the wizard which updates the progress bar after the wizard step changes   Events  after.wizard.step  $(document).on('after.wizard.step', function (event, data) {\n\n    // do something after a wizard has changed the active step\n\n    // you have access to the wizard container's jQuery object\n    console.log(data.container);\n\n    // you can get the index of the target step\n    console.log(data.target);\n\n    if (data.container.is('#my-wizard')) {\n        // do something only when the event was triggered by a specific wizard\n    }\n\n});", 
            "title": "Wizard"
        }, 
        {
            "location": "/reference/essential/index.html#nestable-lists", 
            "text": "Nestable is a component for nesting hierarchical lists with drag   drop capabilities, compatible with both mouse events and touch enabled devices.  Requirements  Depends on the  Nestable  library.  You can check if it's already installed by simply looking for the directory  bower_components/nestable .  Install with bower:  bower install dbushell/Nestable --save  Add the library to your theme via the  build process :    Create  .build/copy-vendor/copy.nestable.json :  {\n    \"task\": \"copy-vendor-nestable-library\",\n    \"cwd\": \"bower_components\",\n    \"src\": [\"nestable/jquery.nestable.js\"],\n    \"dest\": \"js/vendor/nestable\",\n    \"flatten\": true\n}    Enable the library in  src/swig.json :  {\n    \"js_vendor\": [\n        \"vendor/nestable/jquery.nestable\"\n    ]\n}    Optionally, you can add the library to the  js/vendor/all.js  bundle, if you're using it.  Within  .build/concat.json , add the library to the bundle  files  array:  {\n    \"build\": \"js/vendor/all.js\",\n    \"files\": [\n        \"...\",\n        \"nestable/jquery.nestable.js\"\n    ]\n}    Run the  build task    You're done!   The library should be available in your  theme's build path :   $BUILD_PATH/$THEME_NAME/js/vendor/nestable/jquery.nestable.js  $BUILD_PATH/$THEME_NAME/js/vendor/all.js  should also include the new library.     Basic usage  Any nestable element has the base class  nestable :  div class=\"nestable\" /div   Within this wrapper, we can add unordered lists with the base class  nestable-list  and with it's list items having the  nestable-item  class.   Draggable Items  There are two possible drag   drop scenarios. In this scenario, the list item is also the drag handle and for this we must wrap the item content with a  nestable-handle  container:  div class=\"nestable\" id=\"nestable\" \n\n     !-- Top level list -- \n     ul class=\"nestable-list\" \n\n         !-- List item -- \n         li class=\"nestable-item\" data-id=\"1\" \n\n             !-- Wrap item content with the drag handle -- \n             div class=\"nestable-handle\" Item 1 /div \n\n         /li \n\n         !-- List item -- \n         li class=\"nestable-item\" data-id=\"2\" \n\n             !-- Drag handle -- \n             div class=\"nestable-handle\" Item 2 /div \n\n             !-- Nested list -- \n             ul class=\"nestable-list\" \n\n                 !-- List item -- \n                 li class=\"nestable-item\" data-id=\"2.1\" \n\n                     !-- Drag handle -- \n                     div class=\"nestable-handle\" Item 2.1 /div \n\n                 /li \n\n                 !-- List item -- \n                 li class=\"nestable-item\" data-id=\"2.2\" \n\n                     !-- Drag handle -- \n                     div class=\"nestable-handle\" Item 2.2 /div \n\n                     !-- Nested list -- \n                     ul class=\"nestable-list\" \n\n                         !-- List Items -- \n\n                     /ul \n\n                 /li \n                 !-- // END .nestable-item -- \n\n             /ul \n             !-- // END .nestable-list -- \n\n         /li \n         !-- // END .nestable-item -- \n\n     /ul \n     !-- // END .nestable-list --  /div  !-- // END .nestable --   Draggable Handles  In this scenario, we have item drag handles separated from the item's content. For this, we must add  nestable-item-handle  on top of each  nestable-item  and use  nestable-handle  and  nestable-content  within the item to separate the handle and the content:  div class=\"nestable\" id=\"nestable-handles\" \n     ul class=\"nestable-list\" \n\n         !-- Note the additional .nestable-item-handle -- \n         li class=\"nestable-item nestable-item-handle\" data-id=\"1\" \n\n             !-- Separate the nestable item drag handle -- \n             div class=\"nestable-handle\" i class=\"md md-menu\" /i /div \n\n             !-- From the item content -- \n             div class=\"nestable-content\" Item 1 /div \n\n         /li \n         !-- // END .nestable-item -- \n\n         li class=\"nestable-item nestable-item-handle\" data-id=\"2\" \n             div class=\"nestable-handle\" i class=\"md md-menu\" /i /div \n             div class=\"nestable-content\" Item 2 /div \n         /li \n\n         li class=\"nestable-item nestable-item-handle\" data-id=\"3\" \n             div class=\"nestable-handle\" i class=\"md md-menu\" /i /div \n             div class=\"nestable-content\" Item 3 /div \n             ul class=\"nestable-list\" \n                 li class=\"nestable-item nestable-item-handle\" data-id=\"3.1\" \n                     div class=\"nestable-handle\" i class=\"md md-menu\" /i /div \n                     div class=\"nestable-content\" Item 3.1 /div \n                 /li \n                 li class=\"nestable-item nestable-item-handle\" data-id=\"3.2\" \n                     div class=\"nestable-handle\" i class=\"md md-menu\" /i /div \n                     div class=\"nestable-content\" Item 3.2 /div \n                 /li \n                 li class=\"nestable-item nestable-item-handle\" data-id=\"3.3\" \n                     div class=\"nestable-handle\" i class=\"md md-menu\" /i /div \n                     div class=\"nestable-content\" Item 3.3 /div \n                 /li \n             /ul \n         /li \n     /ul  /div   Draggable Handles filled with the primary color  div class=\"nestable nestable-handle-primary\" id=\"nestable-handles\" /div   Initialize  The  .nestable  elements are self-initialized, but you can programatically initialize a nestable element via jQuery:  $('#my-nestable').tkNestable();  Events  The  change  event is fired when items are reordered.  $('#nestable').on('change', function() {\n    // do something when items are reordered\n});  Methods  You probably noticed in the examples we've used the  data-id  attribute on every list item. You can get a serialized object with all  data-*  attributes for each item.  $('#nestable').nestable('serialize');  For the first example with the Draggable Items, the serialized data would be:  [\n    {\n        \"id\": 1\n    }, \n    {\n        \"id\": 2, \n        \"children\": [\n            {\n                \"id\": \"2.1\"\n            },\n            {\n                \"id\": \"2.2\"\n            }\n        ]\n    }\n]", 
            "title": "Nestable lists"
        }, 
        {
            "location": "/reference/essential/index.html#tree-views", 
            "text": "Fancytree is a JavaScript dynamic tree view plugin for jQuery with support for persistence, keyboard, checkboxes, tables, drag and drop, and lazy loading. Fancytree is a sequel of the popular DynaTree plugin.  Requirements  Depends on the  Fancytree  library.  You can check if it's already installed by simply looking for the directory  bower_components/fancytree .  Install with bower:  bower install fancytree --save  Add the library to your theme via the  build process :    Create  .build/copy-vendor/copy.tree.json :  [\n    {\n        \"task\": \"copy-vendor-tree-library\",\n        \"cwd\": \"bower_components\",\n        \"src\": [\"fancytree/dist/jquery.fancytree.js\"],\n        \"dest\": \"js/vendor/tree\",\n        \"flatten\": true\n    },\n    {\n        \"task\": \"copy-vendor-tree-css\",\n        \"cwd\": \"$ROOT_DIR\",\n        \"src\": [\n            \"bower_components/fancytree/dist/skin-bootstrap/ui.fancytree.css\"\n        ],\n        \"dest\": \"css/vendor\",\n        \"flatten\": true\n    }\n]    Enable the library in  src/swig.json :  {\n    \"css_vendor\": [\n        \"vendor/ui.fancytree\"\n    ],\n    \"js_vendor\": [\n        \"vendor/tree/jquery.fancytree\"\n    ]\n}    Optionally, you can add the library to the  js/vendor/all.js  bundle, if you're using it.  Within  .build/concat.json , add the library to the bundle  files  array:  {\n    \"build\": \"js/vendor/all.js\",\n    \"files\": [\n        \"...\",\n        \"tree/jquery.fancytree.js\"\n    ]\n}    Run the  build task    You're done!   The library should be available in your  theme's build path :   $BUILD_PATH/$THEME_NAME/js/vendor/tree/jquery.fancytree.js  $BUILD_PATH/$THEME_NAME/js/vendor/all.js  should also include the new library.  $BUILD_PATH/$THEME_NAME/css/vendor/ui.fancytree.css  $BUILD_PATH/$THEME_NAME/css/vendor/all.css  should also include the library styling.     Basic usage  A tree is a nested list of unordered list items. The first unordered list must have  display: none;  and has to be wrapped by a container with the  data-toggle  attribute set to  tree :  div data-toggle=\"tree\" \n     ul style=\"display: none;\" \n         li item1 /li \n         li item2 /li \n         li class=\"folder\" \n            Folder  em with some /em  children\n             ul \n                 li Sub-item 3.1\n                     ul \n                         li Sub-item 3.1.1 /li \n                         li Sub-item 3.1.2 /li \n                     /ul \n                 /li \n                 li Sub-item 3.2\n                     ul \n                         li Sub-item 3.2.1 /li \n                         li Sub-item 3.2.2 /li \n                     /ul \n                 /li \n             /ul \n         /li \n         li class=\"expanded\" \n            Document with some children (expanded on init)\n             ul \n                 li class=\"active focused expanded\" \n                    Sub-item 4.1 (expanded, active and focused on init)\n                     ul \n                         li Sub-item 4.1.1 /li \n                         li Sub-item 4.1.2 /li \n                     /ul \n                 /li \n                 li Sub-item 4.2\n                     ul \n                         li Sub-item 4.2.1 /li \n                         li Sub-item 4.2.2 /li \n                     /ul \n                 /li \n             /ul \n         /li \n     /ul  /div   Drag   Drop  To enable drag   drop, add the  data-tree-dnd  attribute:  div data-toggle=\"tree\" data-tree-dnd /div   Single selection  div data-toggle=\"tree\" data-tree-checkbox data-tree-select=\"1\" /div   Multiple selection  div data-toggle=\"tree\" data-tree-checkbox data-tree-select=\"2 or 3\" /div   Selection mode  When using  data-tree-checkbox , we can specify the selection mode with  data-tree-select  set to one of the following:   1 : single   2 : multi  (default)  3 : multi-hier", 
            "title": "Tree views"
        }, 
        {
            "location": "/reference/essential/index.html#modals", 
            "text": "Streamlined and flexible modals   dialog prompts with the minimum required functionality and smart options.  Basic usage  We'll be using standard modals included with Bootstrap, with some additional options. For basic usage, see the official  Bootstrap documentation .  !-- Standard Bootstrap markup --  div class=\"modal fade\" id=\"modal-basic\" \n     div class=\"modal-dialog\" \n\n         !-- Additionally, wrap the .modal-content into a .v-cell container --  \n         !-- to center the content vertically -- \n\n         !-- This works because we've modified the .modal-overlay -- \n         !-- class to have display: table; -- \n         div class=\"v-cell\" \n\n             !-- Standard Bootstrap markup -- \n             div class=\"modal-content\" \n                 div class=\"modal-header\" \n                     button type=\"button\" class=\"close\" data-dismiss=\"modal\" \n                         span aria-hidden=\"true\" times; /span \n                         span class=\"sr-only\" Close /span \n                     /button \n                     h4 class=\"modal-title\" Modal title /h4 \n                 /div \n                 div class=\"modal-body\" \n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. A aperiam atque consequuntur dolore fugiat fugit hic in ipsam iure magnam maxime quaerat, quam qui repellat repellendus temporibus vel vitae voluptate!\n                 /div \n                 div class=\"modal-footer\" \n                     button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" Close /button \n                     button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" Save /button \n                 /div \n             /div \n\n         /div \n         !-- // END .v-cell -- \n\n     /div  /div   Animations  Slide down  div class=\"modal fade slide-down\" id=\"modal-slide-down\" /div   Slide up  div class=\"modal fade slide-up\" id=\"modal-slide-up\" /div   Slide from left  div class=\"modal fade slide-left\" id=\"modal-slide-left\" /div   Slide from right  div class=\"modal fade slide-right\" id=\"modal-slide-right\" /div   Grow  div class=\"modal fade grow\" id=\"modal-grow\" /div   Overlay  Adding the  modal-overlay  class on top of  modal  removes the boxed style, by clearing the  border ,  box-shadow  and  background-color  CSS properties for the  modal-content  element.  div class=\"modal fade modal-overlay\" id=\"modal-overlay\" /div   White Backdrop  You can replace the default (dark) backdrop with a white backdrop by adding the  modal-backdrop-white  class on top of  modal .  div class=\"modal fade modal-backdrop-white\" id=\"modal-backdrop-white\" /div   Size  Small  You can make the modal  300px  wide by adding  modal-sm  and  h-center  classes on the  modal-content  element.  div class=\"modal-content modal-sm h-center\" /div   Large  You can also make it larger by adding  modal-lg  class to the  modal-content  element. Note that this doesn't require the additional  h-center  class like it does for  modal-sm .  div class=\"modal-content modal-lg\" /div   Combine styles  You can combine several styles and options to create unique dialogs. For example, a modal with Overlay, White Backdrop and Grow at the same time:  div class=\"modal fade grow modal-overlay modal-backdrop-white\" id=\"modal-combo\" /div   Toggle controls  button data-toggle=\"modal\" data-target=\"#modal-basic\" Open the modal /button  !-- Or --  a data-toggle=\"modal\" href=\"#modal-basic\" Open the modal /a  !-- Or --  a data-toggle=\"modal\" data-target=\"#modal-basic\" href=\"#\" Open the modal /a   Modal Sidebars  We can make modals behave and display as sidebars.  Requirements   Requires the  sidebar  component.   Left sidebar modal  You can add sidebar options to the  modal-dialog  element.  div class=\"modal fade slide-left\" id=\"modal-sidebar-left\" \n     div class=\"modal-dialog sidebar sidebar-size-3 sidebar-size-xs-1 sidebar-offset-0 left\" \n\n         !-- Standard markup -- \n\n     /div  /div   Right sidebar modal  Similarly, you can create a right sidebar modal.  div class=\"modal fade slide-right\" id=\"modal-sidebar-right\" \n     div class=\"modal-dialog sidebar sidebar-size-3 sidebar-size-xs-1 sidebar-offset-0 right\" \n\n         !-- Standard markup -- \n\n     /div  /div", 
            "title": "Modals"
        }, 
        {
            "location": "/reference/essential/index.html#collapsible-panels", 
            "text": "Standard Bootstrap panels with collapse functionality.  Basic usage  To enable, add the  data-toggle  attribute with a value of  panel-collapse  to any  panel  element. Also, add the  panel-collapse-trigger  class to the  panel-heading  element.  div class=\"panel panel-default\" data-toggle=\"panel-collapse\" \n     div class=\"panel-heading panel-collapse-trigger\" \n         h4 class=\"panel-title\" Panel title /h4 \n     /div \n     div class=\"panel-body\" \n         !-- Collapsible content -- \n     /div  /div   Options  Open by default  Add the  data-open  attribute with a value of  true  to the  panel  element.  div class=\"panel panel-default\" data-toggle=\"panel-collapse\" data-open=\"true\" /div", 
            "title": "Collapsible panels"
        }, 
        {
            "location": "/reference/essential/index.html#cover-overlays", 
            "text": "The cover component helps create complex layered UI elements consisting of:   A primary area (for example, an image);  An overlay area, positioned on top of the primary area, with different display options and elements of it's own.   So, for example, consider a UI element which displays an image. When a user hovers the image, it can display a call to action on top of the image (\"Buy\" or \"Rate\" buttons). But really, you could display anything on the overlay.   The cover component provides:    smart image features like stretch-to-fit functionality with automatic resizing and aspect ratio detection.  overlay helpers for positioning other elements within the overlay.  overlay text size   color helpers.  overlay background color helpers.   Requirements  Depends on  load_image , a small JavaScript library providing a realiable callback after an image is loaded.  You can check if it's already installed by simply looking for the directory  bower_components/load_image .  Install with bower:  bower install mixonic/load_image --save  Add the library to your theme via the  build process :    Edit  .build/copy-vendor/copy.core.json  to include the library:  {\n    \"task\": \"copy-vendor-core-scripts\",\n    \"cwd\": \"bower_components\",\n    \"src\": [\n        \"...\",\n        \"load_image/load_image.js\"\n    ],\n    \"dest\": \"js/vendor/core\",\n    \"flatten\": true\n}    Enable the library in  src/swig.json :  {\n    \"js_vendor\": [\n        \"vendor/core/load_image\"\n    ]\n}    Optionally, you can add the library to the  js/vendor/all.js  and  js/vendor/core/all.js  bundles, if you're using them.  Within  .build/concat-vendor/concat.core.json , add the library to the  js/vendor/core/all.js  bundle  files  array:  {\n    \"build\": \"js/vendor/core/all.js\",\n    \"files\": [\n        \"...\",\n        \"load_image.js\"\n    ]\n}  Note that if you're adding the library to the  js/vendor/core/all.js  bundle, you don't have to do anything else for the library to be included in  js/vendor/all.js  bundle, because the  js/vendor/all.js  bundle is already configured to include the  js/vendor/core/all.js  bundle.  Within  .build/concat.json , add the library to the  js/vendor/all.js  bundle  files  array:  {\n    \"build\": \"js/vendor/all.js\",\n    \"files\": [\n        \"...\",\n        \"core/load_image.js\"\n    ]\n}    Run the  build task    You're done!   The library should be available in your  theme's build path :   $BUILD_PATH/$THEME_NAME/js/vendor/core/load_image.js  $BUILD_PATH/$THEME_NAME/js/vendor/core/all.js  should also include the new library.  $BUILD_PATH/$THEME_NAME/js/vendor/all.js  should also include the new library.     Basic usage  div class=\"cover overlay\" \n     img src=\"path/to/image.jpg\" alt=\"image\" / \n     div class=\"overlay\" \n         h3 class=\"text-overlay\" Overlay /h3 \n         p Lorem ipsum dolor sit amet, consectetur adipisicing elit. /p \n     /div  /div   Options  @TODO", 
            "title": "Cover overlays"
        }, 
        {
            "location": "/reference/essential/index.html#forms", 
            "text": "@TODO", 
            "title": "Forms"
        }, 
        {
            "location": "/reference/essential/index.html#buttons", 
            "text": "In addition to standard Bootstrap button classes, we provide a couple of extra options.  Regular buttons  button class=\"btn btn-white\" White /button  button class=\"btn btn-default\" Default /button  button class=\"btn btn-primary\" Primary /button  button class=\"btn btn-success\" Success /button  button class=\"btn btn-warning\" Warning /button  button class=\"btn btn-inverse\" Inverse /button  button class=\"btn btn-danger\" Danger /button   Button sizes  Various buttons sizes for common scenarios, from large buttons, to medium sized, small and very small buttons.  button class=\"btn btn-default btn-lg\" Large /button  button class=\"btn btn-primary\" Regular /button  button class=\"btn btn-success btn-sm\" Small /button  button class=\"btn btn-info btn-xs\" Very Small /button   Buttons with icons  !-- Text and icon --  button class=\"btn btn-white\" i class=\"fa fa-home\" /i  Home /button  button class=\"btn btn-primary\" i class=\"icon-user-1\" /i  Profile /button  button class=\"btn btn-success\" i class=\"fa fa-check-circle\" /i  Confirm /button  button class=\"btn btn-danger\" i class=\"fa fa-times\" /i  Delete /button  !-- Only icon --  button class=\"btn btn-default btn-lg\" i class=\"fa fa-picture-o\" /i /button  button class=\"btn btn-inverse\" i class=\"fa fa-envelope\" /i /button  button class=\"btn btn-primary\" i class=\"fa fa-pencil\" /i /button  button class=\"btn btn-warning btn-sm\" i class=\"fa fa-download\" /i /button  button class=\"btn btn-info btn-xs\" i class=\"fa fa-cloud-upload\" /i /button  !-- Only icon with circular shape --  button class=\"btn btn-default btn-circle\" i class=\"fa fa-user\" /i /button  button class=\"btn btn-inverse btn-circle\" i class=\"fa fa-home\" /i /button  button class=\"btn btn-primary btn-circle\" i class=\"fa fa-building\" /i /button  button class=\"btn btn-warning btn-circle\" i class=\"fa fa-sign-out\" /i /button  button class=\"btn btn-info btn-circle\" i class=\"fa fa-medkit\" /i /button   Stroke buttons  Inverse button colors for text, background and border attributes and get a stroked button.  !-- Stroke regular buttons --  button class=\"btn btn-default btn-stroke\" Default /button  button class=\"btn btn-primary btn-stroke\" Primary /button  button class=\"btn btn-success btn-stroke\" Success /button  button class=\"btn btn-warning btn-stroke\" Warning /button  button class=\"btn btn-inverse btn-stroke\" Inverse /button  button class=\"btn btn-danger btn-stroke\" Danger /button  !-- Stroke buttons with icons only --  button class=\"btn btn-default btn-stroke\" i class=\"fa fa-picture-o\" /i /button  button class=\"btn btn-inverse btn-stroke\" i class=\"fa fa-envelope\" /i /button  button class=\"btn btn-primary btn-stroke\" i class=\"fa fa-pencil\" /i /button  button class=\"btn btn-warning btn-stroke\" i class=\"fa fa-download\" /i /button  button class=\"btn btn-info btn-stroke\" i class=\"fa fa-cloud-upload\" /i /button  !-- Stroke buttons with icons and circular shape --  button class=\"btn btn-default btn-stroke btn-circle\" i class=\"fa fa-user\" /i /button  button class=\"btn btn-inverse btn-stroke btn-circle\" i class=\"fa fa-home\" /i /button  button class=\"btn btn-primary btn-stroke btn-circle\" i class=\"fa fa-building\" /i /button  button class=\"btn btn-warning btn-stroke btn-circle\" i class=\"fa fa-sign-out\" /i /button  button class=\"btn btn-info btn-stroke btn-circle\" i class=\"fa fa-medkit\" /i /button   Stacked buttons  Stacked Buttons with two lines of text and icon. All regular button styles can be used with stacked buttons.  button class=\"btn btn-primary btn-icon-stacked\" \n     i class=\"fa fa-2x fa-twitter\" /i  \n     span Join using your br Twitter Account /span  /button  button class=\"btn btn-inverse btn-icon-stacked\" \n     i class=\"fa fa-2x fa-google-plus\" /i  \n     span Join using your br Google Account /span  /button  button class=\"btn btn-info btn-icon-stacked\" \n     i class=\"fa fa-2x fa-dribbble\" /i  \n     span Join using your br Dribble Account /span  /button   Buttons with dropdowns  Use any button to trigger a dropdown menu by placing it within a  .btn-group  and providing the proper menu markup.  div class=\"btn-group\" \n     button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" \n        Dropdown Default\n         span class=\"caret\" /span \n     /button \n     ul class=\"dropdown-menu\" \n         li a href=\"#\" Action /a /li \n         li a href=\"#\" Another action /a /li \n         li a href=\"#\" Something else here /a /li \n         li class=\"divider\" /li \n         li a href=\"#\" Separated link /a /li \n     /ul  /div  div class=\"btn-group\" \n     button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\" \n        Dropdown Primary\n         span class=\"caret\" /span \n     /button \n     ul class=\"dropdown-menu pull-right\" \n         li a href=\"#\" Action /a /li \n         li a href=\"#\" Another action /a /li \n         li a href=\"#\" Something else here /a /li \n         li class=\"divider\" /li \n         li a href=\"#\" Separated link /a /li \n     /ul  /div", 
            "title": "Buttons"
        }, 
        {
            "location": "/reference/essential/index.html#ribbons", 
            "text": "The ribbon UI component is a great way to present additional information or even highlight important content.  Bookmark ribbons  Floating fluid boomark ribbons that span across multiple lines of text  Note the extra  ribbon-wrapper  class on the otherwise standard Bootstrap panel:  div class= panel panel-default ribbon-wrapper \n     div class= panel-body \n\n         !-- The ribbon -- \n         div class= pull-right ribbon-mark ribbon-primary \n             span class= text Fluid mark that spans br/ across multiple lines /span \n         /div \n         !-- // END .ribbon-mark -- \n\n         h3 class= margin-v-10-15 Floating Bookmark ribbon /h3 \n         p Lorem ipsum dolor sit amet, consectetur adipisicing elit. A accusamus aut consectetur consequatur cum cupiditate debitis doloribus, error ex explicabo harum illum minima mollitia nisi nostrum officiis omnis optio qui quisquam saepe sit sunt totam vel velit voluptatibus? Adipisci ducimus expedita id nostrum quas quia! /p \n     /div  /div   Absolute positioned bookmark ribbons  div class= panel panel-default ribbon-wrapper \n\n     !-- Left ribbon -- \n     div class= ribbon-mark ribbon-default absolute left \n         span class= ribbon \n             span class= text Left /span \n         /span \n     /div \n\n     !-- Right ribbon -- \n     div class= ribbon-mark ribbon-primary absolute right \n         span class= ribbon \n             span class= text Mark /span \n         /span \n     /div \n\n     !-- Arbitrary content -- \n     div class= panel-body \n         p Lorem ipsum dolor sit amet, consectetur adipisicing elit. A accusamus aut consectetur consequatur cum cupiditate debitis doloribus, error ex explicabo harum illum minima mollitia nisi nostrum officiis omnis optio qui quisquam saepe sit sunt totam vel velit voluptatibus? Adipisci ducimus expedita id nostrum quas quia! /p \n     /div  /div   Heading ribbons  Left to right, full ribbon block lines  Bottom corners, left to right:  h1 class= ribbon-heading ribbon-primary bottom-left-right Important headings /h1  p Lorem ipsum dolor sit amet, consectetur adipisicing elit. A accusamus aut consectetur consequatur cum cupiditate debitis doloribus, error ex explicabo harum illum minima mollitia nisi nostrum officiis omnis optio qui quisquam saepe sit sunt totam vel velit voluptatibus? Adipisci ducimus expedita id nostrum quas quia! /p   Top corners, left to right, appropriate when placing the next heading after a large text area:  p Lorem ipsum dolor sit amet, consectetur adipisicing elit. A accusamus aut consectetur consequatur cum cupiditate debitis doloribus, error ex explicabo harum illum minima mollitia nisi nostrum officiis omnis optio qui quisquam saepe sit sunt totam vel velit voluptatibus? Adipisci ducimus expedita id nostrum quas quia! /p  h1 class= ribbon-heading ribbon-default top-left-right Various styles included /h1   Inline ribbon  Top corner, on left:  div class= pull-left \n     h2 class= ribbon-heading ribbon-primary top-left inline Top left inline ribbon /h2  /div  div class= clearfix /div  p Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur debitis dignissimos maiores nisi optio quas, quod? Animi fuga inventore laborum nemo quaerat quis quod? Alias, architecto consequuntur corporis deleniti dolor facilis id minima necessitatibus nihil perspiciatis quo repellendus saepe, sunt suscipit velit. Deleniti dolorum id maxime omnis perspiciatis sed, veniam? /p   Bottom corner, on right:  div class= pull-right \n     h3 class= ribbon-heading ribbon-primary bottom-right inline \n        Bottom right inline ribbon\n     /h3  /div  div class= clearfix /div  p Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur debitis dignissimos maiores nisi optio quas, quod? Animi fuga inventore laborum nemo quaerat quis quod? Alias, architecto consequuntur corporis deleniti dolor facilis id minima necessitatibus nihil perspiciatis quo repellendus saepe, sunt suscipit velit. Deleniti dolorum id maxime omnis perspiciatis sed, veniam? /p   Corner ribbons  Similar to the \"Fork me on Github\" button we see all the time:  !-- Notice the extra .ribbon-corner-wrapper class --  div class= panel panel-default ribbon-wrapper ribbon-corner-wrapper \n\n     !-- The ribbon -- \n     div class= ribbon-corner left \n         a href= # Fork me on GitHub /a \n     /div \n     !-- // END .ribbon-corner -- \n\n     !-- Arbitrary content -- \n     div class= panel-body \n         div class= row \n             h3 class= margin-v-10-15 text-center Absolute Corner ribbon /h3 \n             div class= col-xs-10 col-xs-offset-2 col-sm-11 col-sm-offset-1 text-right \n                 p Lorem ipsum dolor sit amet, consectetur adipisicing elit. A accusamus aut consectetur consequatur cum cupiditate debitis doloribus, error ex explicabo harum illum minima mollitia nisi nostrum officiis omnis optio qui quisquam saepe sit sunt totam vel velit voluptatibus? Adipisci ducimus expedita id nostrum quas quia! /p \n             /div \n         /div \n         p Lorem ipsum dolor sit amet, consectetur adipisicing elit. A accusamus aut consectetur consequatur cum cupiditate debitis doloribus, error ex explicabo harum illum minima mollitia nisi nostrum officiis omnis optio qui quisquam saepe sit sunt totam vel velit voluptatibus? Adipisci ducimus expedita id nostrum quas quia! /p \n     /div \n     !-- // END content --  /div   Additionally, you can use  right  instead of  left  on the ribbon:  !-- The ribbon --  div class=\"ribbon-corner right\" \n     a href=\"#\" Fork me on GitHub /a  /div  !-- // END .ribbon-corner --", 
            "title": "Ribbons"
        }, 
        {
            "location": "/reference/essential/index.html#typography", 
            "text": "For the basic typographic styles, we have followed the  Material Design  guidelines to work across the wider set of supported platforms and to balance content density and reading comfort under typical usage conditions.  Default size unit  For the  html  we've set a default sizing unit of  13px , both text size and line height.  From here, we're only using scalable  rem  sizing units relative to the base. Keep in mind the base unit of 1rem = 13px.  The  body  has:  line-height: 1.53rem;\nfont-size: 1rem;  Usage  Display 4  Light text weight of 300, scalable text size and line height of 8.6rem.  div class=\"text-display-4\" Display 4 /div   Display 3  Regular text weight of 400, scalable text size and line height of 4.3rem.  div class=\"text-display-3\" Display 3 /div   Display 2  Regular text weight of 400, scalable text size of 3.46rem and line height of 3.69rem.  div class=\"text-display-2\" Display 2 /div   Display 1  Regular text weight of 400, scalable text size of 2.61rem and line height of 3.07rem.  div class=\"text-display-1\" Display 1 /div   Headline  Regular text weight of 400, scalable text size of 1.84rem and line height of 2.46rem.  div class=\"text-headline\" Headline /div   Title  Medium text weight of 500, scalable text size of 1.53rem.  div class=\"text-title\" Title /div   Subhead  Regular text weight of 400, scalable text size of 1.15rem and line height of 1.84rem.  div class=\"text-subhead\" Subhead /div   Subhead 2  Medium text weight of 500, scalable text size of 1.15rem and line height of 2.15rem.  div class=\"text-subhead-2\" Subhead 2 /div   Caption  Regular text weight of 400, scalable text size of 0.92rem.  div class=\"text-caption\" Caption /div   Body 1  Regular text weight of 400, scalable text size of 1rem  (default) .  p Regular text body. /p   Body 2  Medium text weight of 500, scalable text size of 1rem and line height of 1.84rem.  p class=\"text-body-2\" Medium text body. /p", 
            "title": "Typography"
        }, 
        {
            "location": "/reference/essential/index.html#css-helpers", 
            "text": "Positioning helpers  relative  The  relative  class adds  position: relative;  to any element.  overflow-hidden  The  overflow-hidden  class adds  overflow: hidden;  to any element.  absolute  The  absolute  class adds  position: absolute;  to any element. Use in combination with  top ,  bottom ,  left ,  right  classes to set the corresponding CSS properties to  $property: 0; .  Text helpers  text-underline  The  text-underline  class adds  text-decoration: underline;  to any element.  strong  The  strong  class adds  font-weight: bold;  to any element.  text-left  The  text-left  class adds  text-align: left !important;  to any element.  Background helpers  bg-transparent  The  bg-transparent  class adds  background: transparent !important;  to any element.  Display helpers  display-none  The  display-none  class adds  display: none;  to any element.  inline-block, display-inline-block  The  display-inline-block  and  inline-block  classes adds  display: inline-block;  to any element.  block  The  block  class adds  display: block;  to any element.  Spacing helpers  padding-none  The  padding-none  class adds  padding: 0 !important;  to any element.  padding-top-none  The  padding-top-none  class adds  padding-top: 0 !important;  to any element.  padding-bottom-none  The  padding-bottom-none  class adds  padding-bottom: 0 !important;  to any element.  margin-none  The  margin-none  class adds  margin: 0 !important;  to any element.  margin-bottom-none  The  margin-bottom-none  class adds  margin-bottom: 0 !important;  to any element.  Alignment helpers  h-center  The  h-center  class adds  margin-left: auto !important;  and  margin-right: auto !important;  to any element.  Table helpers  display-table  The  display-table  class adds  display: table;  to any element.  v-middle  The  v-middle  class adds  vertical-align: middle !important;  to any element.  v-top  The  v-top  class adds  vertical-align: top !important;  to any element.  v-cell  The  v-cell  class adds  display: table-cell;  and  vertical-align: middle;  to any element.  table-row  The  table-row  class adds  display: table-row;  to any element.  table-cell  The  table-cell  class adds  display: table-cell;  to any element.  Sizing helpers  height-100pc  The  height-100pc  class adds  height: 100%;  to any element.  @TODO", 
            "title": "CSS Helpers"
        }, 
        {
            "location": "/reference/material/index.html", 
            "text": "Material\n\n\nThe Material package provides a collection of elements and functionality inspired from Google's \nMaterial Design\n:\n\n\n\n\nDropdown menus\n\n\nForm controls\n\n\nInk ripple effect\n\n\nButton styles\n\n\nPaper shadow\n\n\n\n\n\n\nRequirements\n\n\nJavaScript\n\n\nTo load the entire Material package, from \nsrc/js/themes/$THEME_NAME/app.js\n:\n\n\n// Material package\nrequire('material/js/main');\n\n\n\nThis will load \nlib/material/js/main.js\n into our main application script bundle.\n\n\nLess\n\n\nFrom \nsrc/less/themes/$THEME_NAME/app.less\n:\n\n\n// Material package\n@import \"material/less/main\";\n\n\n\nWhich will load \nlib/material/less/main.less\n into our main application style bundle.\n\n\n\n\nAlternative\n\n\nIf working with Less and Browserify bundles is not your favorite thing, you can alternatively load the pre-built static assets we have included:\n\n\n!-- In the head of the HTML document --\n\n\nlink rel=\"stylesheet\" href=\"css/app/material.css\" /\n\n\n\n!-- At the bottom of the HTML document --\n\n\nscript src=\"js/app/material.js\"\n/script\n\n\n\n\n\n\nForm controls\n\n\nInput\n\n\n\n\nUse a standard Bootstrap \nform-control\n input.\n\n\nWrap the \nform-control\n with a \nform-control-material\n container.\n\n\nAdd a label \nafter\n the input (\nrequired\n).\n\n\n\n\ndiv class=\nform-group form-control-material\n\n    \ninput type=\ntext\n class=\nform-control\n id=\nfirstName\n placeholder=\nYour first name\n /\n\n    \nlabel for=\nfirstName\nFirst name\n/label\n\n\n/div\n\n\n\n\n\nTextarea\n\n\n\n\nUse a standard Bootstrap \nform-control\n textarea.\n\n\nWrap the \nform-control\n with a \nform-control-material\n container.\n\n\nAdd a label \nafter\n the textarea (\nrequired\n).\n\n\n\n\ndiv class=\nform-group form-control-material\n\n    \ntextarea id=\ntextarea\n class=\nform-control\n/textarea\n\n    \nlabel for=\ntextarea\nTextarea\n/label\n\n\n/div\n\n\n\n\n\nAdd-Ons\n\n\ndiv class=\nform-control-material\n\n    \ndiv class=\ninput-group\n\n        \nspan class=\ninput-group-addon\ni class=\nfa fa-user\n/i\n/span\n\n        \ninput id=\naddon\n type=\ntext\n class=\nform-control\n placeholder=\nUsername\n /\n\n        \nlabel for=\naddon\nUsername\n/label\n\n    \n/div\n\n\n/div\n\n\n\n\n\ndiv class=\nform-control-material\n\n    \ndiv class=\ninput-group\n\n        \nspan class=\ninput-group-addon\ni class=\nfa fa-envelope\n/i\n/span\n\n        \ninput type=\nemail\n class=\nform-control\n id=\nemail\n placeholder=\nEmail\n /\n\n        \nlabel for=\nemail\nEmail address\n/label\n\n    \n/div\n\n\n/div\n\n\n\n\n\nPredefined value\n\n\nWhen the form control has a predefined value (e.g. when the page loads), you must apply the \nused\n class on the \nform-control\n element.\n\n\ndiv class=\nform-control-material\n\n    \ndiv class=\ninput-group\n\n        \nspan class=\ninput-group-addon\ni class=\nfa fa-link\n/i\n/span\n\n        \ninput type=\ntext\n class=\nform-control used\n id=\nwebsite\n value=\nwww.mosaicpro.biz\n/\n\n        \nlabel for=\nwebsite\nWebsite\n/label\n\n    \n/div\n\n\n/div\n\n\n\n\n\n\n\nButtons\n\n\nUppercase text\n\n\nAll \n.btn\n elements are transformed to uppercase text.\n\n\nFlat buttons\n\n\nUse the \nbtn-flat\n class with any \n.btn\n element to remove the \nborder\n property from the button.\n\n\n\n\nRipple effect\n\n\nAdd the \nripple\n class to any element to enable the effect.\n\n\nAdditionally, you can use any of the following classes to control the ripple color:\n\n\n\n\nripple-primary\n\n\nripple-light\n \n(default)\n\n\nripple-light-fade\n\n\nripple-dark\n\n\nripple-dark-fade\n\n\n\n\na href=\n#\n class=\nbtn btn-default ripple ripple-dark\nButton\n/a\n\n\na href=\n#\n class=\nbtn btn-primary ripple ripple-light\nButton\n/a\n\n\na href=\n#\n class=\nbtn btn-default ripple ripple-primary\nButton\n/a\n\n\n\n\n\nCustom colors\n\n\nFrom Less, using variables from the \nColors package\n:\n\n\n@ripple-gradient-red: fade(@red-500, 20%) 0, fade(@red-500, 30%) 40%, fade(@red-500, 40%) 50%, fade(@red-500, 50%) 60%, fade(@red-500, 0%) 70%;\n\n.ripple-red .ink {\n    background: radial-gradient(@ripple-gradient-red);\n}\n\n\n\n\na href=\n#\n class=\nbtn btn-default ripple ripple-red\nButton\n/a\n\n\n\n\n\nPaper shadow\n\n\nAdd the \npaper-shadow\n class to any element with \nposition: relative\n. Note that you can use the \nrelative\n class from the \nEssential package\n to add \nposition: relative\n to any element.\n\n\nDepth\n\n\nAdd depth with the \ndata-z\n attribute with a value of \n0.5\n, \n1\n, \n2\n, \n3\n, \n4\n or \n5\n.\n\n\ndiv class=\npanel panel-default paper-shadow\n data-z=\n0.5\n\n    \ndiv class=\npanel-body height-300\n data-scrollable-h\n\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas sit amet suscipit lorem, sit amet vestibulum lectus. Proin luctus felis vitae velit mollis dictum. Duis id facilisis ex. Nullam eros tortor, convallis eu gravida eget, maximus in turpis. Suspendisse ornare lorem ac enim ultricies, sed volutpat leo volutpat.\n    \n/div\n\n\n/div\n\n\n\n\n\nDepth on hover\n\n\nUse a different depth on mouse over with the \ndata-hover-z\n attribute.\n\n\ndiv class=\npanel panel-default paper-shadow\n data-z=\n0.5\n data-hover-z=\n2\n\n    \ndiv class=\npanel-body height-300\n data-scrollable-h\n\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas sit amet suscipit lorem, sit amet vestibulum lectus. Proin luctus felis vitae velit mollis dictum. Duis id facilisis ex. Nullam eros tortor, convallis eu gravida eget, maximus in turpis. Suspendisse ornare lorem ac enim ultricies, sed volutpat leo volutpat.\n    \n/div\n\n\n/div\n\n\n\n\n\nAnimated depth\n\n\nEnable animations for the transition between \ndata-z\n and \ndata-hover-z\n with the \ndata-animated\n attribute.\n\n\ndiv class=\npanel panel-default paper-shadow\n data-z=\n0.5\n data-hover-z=\n2\n data-animated\n\n    \ndiv class=\npanel-body height-300\n data-scrollable-h\n\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas sit amet suscipit lorem, sit amet vestibulum lectus. Proin luctus felis vitae velit mollis dictum. Duis id facilisis ex. Nullam eros tortor, convallis eu gravida eget, maximus in turpis. Suspendisse ornare lorem ac enim ultricies, sed volutpat leo volutpat.\n    \n/div\n\n\n/div", 
            "title": "Material"
        }, 
        {
            "location": "/reference/material/index.html#material", 
            "text": "The Material package provides a collection of elements and functionality inspired from Google's  Material Design :   Dropdown menus  Form controls  Ink ripple effect  Button styles  Paper shadow", 
            "title": "Material"
        }, 
        {
            "location": "/reference/material/index.html#requirements", 
            "text": "JavaScript  To load the entire Material package, from  src/js/themes/$THEME_NAME/app.js :  // Material package\nrequire('material/js/main');  This will load  lib/material/js/main.js  into our main application script bundle.  Less  From  src/less/themes/$THEME_NAME/app.less :  // Material package\n@import \"material/less/main\";  Which will load  lib/material/less/main.less  into our main application style bundle.   Alternative  If working with Less and Browserify bundles is not your favorite thing, you can alternatively load the pre-built static assets we have included:  !-- In the head of the HTML document --  link rel=\"stylesheet\" href=\"css/app/material.css\" /  !-- At the bottom of the HTML document --  script src=\"js/app/material.js\" /script", 
            "title": "Requirements"
        }, 
        {
            "location": "/reference/material/index.html#form-controls", 
            "text": "Input   Use a standard Bootstrap  form-control  input.  Wrap the  form-control  with a  form-control-material  container.  Add a label  after  the input ( required ).   div class= form-group form-control-material \n     input type= text  class= form-control  id= firstName  placeholder= Your first name  / \n     label for= firstName First name /label  /div   Textarea   Use a standard Bootstrap  form-control  textarea.  Wrap the  form-control  with a  form-control-material  container.  Add a label  after  the textarea ( required ).   div class= form-group form-control-material \n     textarea id= textarea  class= form-control /textarea \n     label for= textarea Textarea /label  /div   Add-Ons  div class= form-control-material \n     div class= input-group \n         span class= input-group-addon i class= fa fa-user /i /span \n         input id= addon  type= text  class= form-control  placeholder= Username  / \n         label for= addon Username /label \n     /div  /div   div class= form-control-material \n     div class= input-group \n         span class= input-group-addon i class= fa fa-envelope /i /span \n         input type= email  class= form-control  id= email  placeholder= Email  / \n         label for= email Email address /label \n     /div  /div   Predefined value  When the form control has a predefined value (e.g. when the page loads), you must apply the  used  class on the  form-control  element.  div class= form-control-material \n     div class= input-group \n         span class= input-group-addon i class= fa fa-link /i /span \n         input type= text  class= form-control used  id= website  value= www.mosaicpro.biz / \n         label for= website Website /label \n     /div  /div", 
            "title": "Form controls"
        }, 
        {
            "location": "/reference/material/index.html#buttons", 
            "text": "Uppercase text  All  .btn  elements are transformed to uppercase text.  Flat buttons  Use the  btn-flat  class with any  .btn  element to remove the  border  property from the button.", 
            "title": "Buttons"
        }, 
        {
            "location": "/reference/material/index.html#ripple-effect", 
            "text": "Add the  ripple  class to any element to enable the effect.  Additionally, you can use any of the following classes to control the ripple color:   ripple-primary  ripple-light   (default)  ripple-light-fade  ripple-dark  ripple-dark-fade   a href= #  class= btn btn-default ripple ripple-dark Button /a  a href= #  class= btn btn-primary ripple ripple-light Button /a  a href= #  class= btn btn-default ripple ripple-primary Button /a   Custom colors  From Less, using variables from the  Colors package :  @ripple-gradient-red: fade(@red-500, 20%) 0, fade(@red-500, 30%) 40%, fade(@red-500, 40%) 50%, fade(@red-500, 50%) 60%, fade(@red-500, 0%) 70%;\n\n.ripple-red .ink {\n    background: radial-gradient(@ripple-gradient-red);\n}  a href= #  class= btn btn-default ripple ripple-red Button /a", 
            "title": "Ripple effect"
        }, 
        {
            "location": "/reference/material/index.html#paper-shadow", 
            "text": "Add the  paper-shadow  class to any element with  position: relative . Note that you can use the  relative  class from the  Essential package  to add  position: relative  to any element.  Depth  Add depth with the  data-z  attribute with a value of  0.5 ,  1 ,  2 ,  3 ,  4  or  5 .  div class= panel panel-default paper-shadow  data-z= 0.5 \n     div class= panel-body height-300  data-scrollable-h \n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas sit amet suscipit lorem, sit amet vestibulum lectus. Proin luctus felis vitae velit mollis dictum. Duis id facilisis ex. Nullam eros tortor, convallis eu gravida eget, maximus in turpis. Suspendisse ornare lorem ac enim ultricies, sed volutpat leo volutpat.\n     /div  /div   Depth on hover  Use a different depth on mouse over with the  data-hover-z  attribute.  div class= panel panel-default paper-shadow  data-z= 0.5  data-hover-z= 2 \n     div class= panel-body height-300  data-scrollable-h \n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas sit amet suscipit lorem, sit amet vestibulum lectus. Proin luctus felis vitae velit mollis dictum. Duis id facilisis ex. Nullam eros tortor, convallis eu gravida eget, maximus in turpis. Suspendisse ornare lorem ac enim ultricies, sed volutpat leo volutpat.\n     /div  /div   Animated depth  Enable animations for the transition between  data-z  and  data-hover-z  with the  data-animated  attribute.  div class= panel panel-default paper-shadow  data-z= 0.5  data-hover-z= 2  data-animated \n     div class= panel-body height-300  data-scrollable-h \n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas sit amet suscipit lorem, sit amet vestibulum lectus. Proin luctus felis vitae velit mollis dictum. Duis id facilisis ex. Nullam eros tortor, convallis eu gravida eget, maximus in turpis. Suspendisse ornare lorem ac enim ultricies, sed volutpat leo volutpat.\n     /div  /div", 
            "title": "Paper shadow"
        }, 
        {
            "location": "/reference/colors/index.html", 
            "text": "Colors\n\n\nThe colors package\n introduces unexpected and vibrant colors, based on Google's \nMaterial Design\n Guideline, inspired by bold color statements juxtaposed with muted environments, taking cues from contemporary architecture \n many more.\n\n\n\n\nRequirements\n\n\nLess\n\n\nFrom \nsrc/less/themes/$THEME_NAME/app.less\n:\n\n\n// Color Mixins\n@import \"colors/less/mixins/mixins\";\n\n// Colors\n@import \"colors/less/ui/ui\";\n\n\n\nWhich will load the following into our main application style bundle:\n\n\n\n\nlib/colors/less/mixins/mixins.less\n\n\nlib/colors/less/ui/ui.less\n\n\n\n\nOr, instead of loading the entire \ncolors/less/ui\n package, you can just pick your requirements one by one:\n\n\n// Colors\n@import \"colors/less/ui/_helpers\"; // required\n@import \"colors/less/ui/_background\";\n@import \"colors/less/ui/_text\";\n@import \"colors/less/ui/_buttons\";\n@import \"colors/less/ui/_progress-bars\";\n@import \"colors/less/ui/_calendar\";\n@import \"colors/less/ui/_alerts\";\n@import \"colors/less/ui/_ribbons\";\n\n\n\n\n\nAlternative\n\n\nIf working with Less is not your favorite thing, you can alternatively load the pre-built static assets we have included:\n\n\n!-- In the head of the HTML document --\n\n\nlink rel=\"stylesheet\" href=\"css/app/colors-background.css\" /\n\n\nlink rel=\"stylesheet\" href=\"css/app/colors-text.css\" /\n\n\nlink rel=\"stylesheet\" href=\"css/app/colors-buttons.css\" /\n\n\nlink rel=\"stylesheet\" href=\"css/app/colors-progress-bars.css\" /\n\n\nlink rel=\"stylesheet\" href=\"css/app/colors-calendar.css\" /\n\n\nlink rel=\"stylesheet\" href=\"css/app/colors-alerts.css\" /\n\n\nlink rel=\"stylesheet\" href=\"css/app/colors-ribbons.css\" /\n\n\n\n\n\n\nThe color palettes\n\n\n19 color palettes designed to work harmoniously with each other. Each color palette starts with primary colors and fills in the spectrum to create a complete and usable palette. \nGoogle suggests using the \n*-500\n colors\n as the primary colors in your app and the other colors as accents colors.\n\n\n\n\nRed color palette\n\n\n\n\nUse any of the following Less variables to apply a red color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@red-100\n to \n@red-900\n in \n100\n increments.\n\n\nuse \n@red-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@red-A100\n\n\n@red-A200\n\n\n@red-A400\n\n\n@red-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nRed background colors\n\n\nRed text colors\n\n\nRed buttons\n\n\nRed progress bars\n\n\nRed alerts\n\n\n\n\n\n\nPink color palette\n\n\n\n\nUse any of the following Less variables to apply a pink color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@pink-100\n to \n@pink-900\n in \n100\n increments.\n\n\nuse \n@pink-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@pink-A100\n\n\n@pink-A200\n\n\n@pink-A400\n\n\n@pink-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nPink background colors\n\n\nPink text colors\n\n\nPink buttons\n\n\nPink progress bars\n\n\nPink alerts\n\n\n\n\n\n\nPurple color palette\n\n\n\n\nUse any of the following Less variables to apply a purple color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@purple-100\n to \n@purple-900\n in \n100\n increments.\n\n\nuse \n@purple-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@purple-A100\n\n\n@purple-A200\n\n\n@purple-A400\n\n\n@purple-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nPurple background colors\n\n\nPurple text colors\n\n\nPurple buttons\n\n\nPurple progress bars\n\n\nPurple alerts\n\n\n\n\n\n\nDeep Purple color palette\n\n\n\n\nUse any of the following Less variables to apply a deep purple color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@deep-purple-100\n to \n@deep-purple-900\n in \n100\n increments.\n\n\nuse \n@deep-purple-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@deep-purple-A100\n\n\n@deep-purple-A200\n\n\n@deep-purple-A400\n\n\n@deep-purple-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nDeep Purple background colors\n\n\nDeep Purple text colors\n\n\nDeep Purple buttons\n\n\nDeep Purple progress bars\n\n\nDeep Purple alerts\n\n\n\n\n\n\nIndigo color palette\n\n\n\n\nUse any of the following Less variables to apply an indigo color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@indigo-100\n to \n@indigo-900\n in \n100\n increments.\n\n\nuse \n@indigo-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@indigo-A100\n\n\n@indigo-A200\n\n\n@indigo-A400\n\n\n@indigo-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nIndigo background colors\n\n\nIndigo text colors\n\n\nIndigo buttons\n\n\nIndigo progress bars\n\n\nIndigo alerts\n\n\n\n\n\n\nBlue color palette\n\n\n\n\nUse any of the following Less variables to apply a blue color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@blue-100\n to \n@blue-900\n in \n100\n increments.\n\n\nuse \n@blue-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@blue-A100\n\n\n@blue-A200\n\n\n@blue-A400\n\n\n@blue-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nBlue background colors\n\n\nBlue text colors\n\n\nBlue buttons\n\n\nBlue progress bars\n\n\nBlue alerts\n\n\n\n\n\n\nLight Blue color palette\n\n\n\n\nUse any of the following Less variables to apply a light blue color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@light-blue-100\n to \n@light-blue-900\n in \n100\n increments.\n\n\nuse \n@light-blue-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@light-blue-A100\n\n\n@light-blue-A200\n\n\n@light-blue-A400\n\n\n@light-blue-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nLight Blue background colors\n\n\nLight Blue text colors\n\n\nLight Blue buttons\n\n\nLight Blue progress bars\n\n\nLight Blue alerts\n\n\n\n\n\n\nCyan color palette\n\n\n\n\nUse any of the following Less variables to apply a cyan color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@cyan-100\n to \n@cyan-900\n in \n100\n increments.\n\n\nuse \n@cyan-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@cyan-A100\n\n\n@cyan-A200\n\n\n@cyan-A400\n\n\n@cyan-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nCyan background colors\n\n\nCyan text colors\n\n\nCyan buttons\n\n\nCyan progress bars\n\n\nCyan alerts\n\n\n\n\n\n\nTeal color palette\n\n\n\n\nUse any of the following Less variables to apply a teal color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@teal-100\n to \n@teal-900\n in \n100\n increments.\n\n\nuse \n@teal-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@teal-A100\n\n\n@teal-A200\n\n\n@teal-A400\n\n\n@teal-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nTeal background colors\n\n\nTeal text colors\n\n\nTeal buttons\n\n\nTeal progress bars\n\n\nTeal alerts\n\n\n\n\n\n\nGreen color palette\n\n\n\n\nUse any of the following Less variables to apply a green color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@green-100\n to \n@green-900\n in \n100\n increments.\n\n\nuse \n@green-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@green-A100\n\n\n@green-A200\n\n\n@green-A400\n\n\n@green-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nGreen background colors\n\n\nGreen text colors\n\n\nGreen buttons\n\n\nGreen progress bars\n\n\nGreen alerts\n\n\n\n\n\n\nLight Green color palette\n\n\n\n\nUse any of the following Less variables to apply a light green color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@light-green-100\n to \n@light-green-900\n in \n100\n increments.\n\n\nuse \n@light-green-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@light-green-A100\n\n\n@light-green-A200\n\n\n@light-green-A400\n\n\n@light-green-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nLight Green background colors\n\n\nLight Green text colors\n\n\nLight Green buttons\n\n\nLight Green progress bars\n\n\nLight Green alerts\n\n\n\n\n\n\nLime color palette\n\n\n\n\nUse any of the following Less variables to apply a lime color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@lime-100\n to \n@lime-900\n in \n100\n increments.\n\n\nuse \n@lime-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@lime-A100\n\n\n@lime-A200\n\n\n@lime-A400\n\n\n@lime-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nLime background colors\n\n\nLime text colors\n\n\nLime buttons\n\n\nLime progress bars\n\n\nLime alerts\n\n\n\n\n\n\nYellow color palette\n\n\n\n\nUse any of the following Less variables to apply a yellow color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@yellow-100\n to \n@yellow-900\n in \n100\n increments.\n\n\nuse \n@yellow-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@yellow-A100\n\n\n@yellow-A200\n\n\n@yellow-A400\n\n\n@yellow-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nYellow background colors\n\n\nYellow text colors\n\n\nYellow buttons\n\n\nYellow progress bars\n\n\nYellow alerts\n\n\n\n\n\n\nAmber color palette\n\n\n\n\nUse any of the following Less variables to apply an amber color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@amber-100\n to \n@amber-900\n in \n100\n increments.\n\n\nuse \n@amber-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@amber-A100\n\n\n@amber-A200\n\n\n@amber-A400\n\n\n@amber-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nAmber background colors\n\n\nAmber text colors\n\n\nAmber buttons\n\n\nAmber progress bars\n\n\nAmber alerts\n\n\n\n\n\n\nOrange color palette\n\n\n\n\nUse any of the following Less variables to apply an orange color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@orange-100\n to \n@orange-900\n in \n100\n increments.\n\n\nuse \n@orange-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@orange-A100\n\n\n@orange-A200\n\n\n@orange-A400\n\n\n@orange-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nOrange background colors\n\n\nOrange text colors\n\n\nOrange buttons\n\n\nOrange progress bars\n\n\nOrange alerts\n\n\n\n\n\n\nDeep Orange color palette\n\n\n\n\nUse any of the following Less variables to apply a deep orange color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@deep-orange-100\n to \n@deep-orange-900\n in \n100\n increments.\n\n\nuse \n@deep-orange-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\n@deep-orange-A100\n\n\n@deep-orange-A200\n\n\n@deep-orange-A400\n\n\n@deep-orange-A700\n\n\n\n\nCSS components\n:\n\n\n\n\nDeep Orange background colors\n\n\nDeep Orange text colors\n\n\nDeep Orange buttons\n\n\nDeep Orange progress bars\n\n\nDeep Orange alerts\n\n\n\n\n\n\nBrown color palette\n\n\n\n\nUse any of the following Less variables to apply a brown color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@brown-100\n to \n@brown-900\n in \n100\n increments.\n\n\nuse \n@brown-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nCSS components\n:\n\n\n\n\nBrown background colors\n\n\nBrown text colors\n\n\nBrown buttons\n\n\nBrown progress bars\n\n\nBrown alerts\n\n\n\n\n\n\nGrey color palette\n\n\n\n\nUse any of the following Less variables to apply a grey color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@grey-100\n to \n@grey-900\n in \n100\n increments.\n\n\nuse \n@grey-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nCSS components\n:\n\n\n\n\nGrey background colors\n\n\nGrey text colors\n\n\nGrey buttons\n\n\nGrey progress bars\n\n\nGrey alerts\n\n\n\n\n\n\nBlue Grey color palette\n\n\n\n\nUse any of the following Less variables to apply a blue grey color to any CSS property.\n\n\nPrimary colors\n:\n\n\n\n\n@blue-grey-100\n to \n@blue-grey-900\n in \n100\n increments.\n\n\nuse \n@blue-grey-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nCSS components\n:\n\n\n\n\nBlue Grey background colors\n\n\nBlue Grey text colors\n\n\nBlue Grey buttons\n\n\nBlue Grey progress bars\n\n\nBlue Grey alerts\n\n\n\n\n\n\nBackground color\n\n\nRed background colors\n\n\nUse any of the following CSS classes on any element to apply a red background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-red-100\n to \nbg-red-900\n in \n100\n increments.\n\n\nuse \nbg-red-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-red-A100\n\n\nbg-red-A200\n\n\nbg-red-A400\n\n\nbg-red-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-red-500\n\n    \n!-- Red background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nRed color palette\n\n\n\n\n\n\nPink background colors\n\n\nUse any of the following CSS classes on any element to apply a pink background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-pink-100\n to \nbg-pink-900\n in \n100\n increments.\n\n\nuse \nbg-pink-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-pink-A100\n\n\nbg-pink-A200\n\n\nbg-pink-A400\n\n\nbg-pink-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-pink-500\n\n    \n!-- Pink background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nPink color palette\n\n\n\n\n\n\nPurple background colors\n\n\nUse any of the following CSS classes on any element to apply a purple background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-purple-100\n to \nbg-purple-900\n in \n100\n increments.\n\n\nuse \nbg-purple-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-purple-A100\n\n\nbg-purple-A200\n\n\nbg-purple-A400\n\n\nbg-purple-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-purple-500\n\n    \n!-- Purple background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nPurple color palette\n\n\n\n\n\n\nDeep Purple background colors\n\n\nUse any of the following CSS classes on any element to apply a deep purple background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-deep-purple-100\n to \nbg-deep-purple-900\n in \n100\n increments.\n\n\nuse \nbg-deep-purple-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-deep-purple-A100\n\n\nbg-deep-purple-A200\n\n\nbg-deep-purple-A400\n\n\nbg-deep-purple-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-deep-purple-500\n\n    \n!-- Deep Purple background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nDeep Purple color palette\n\n\n\n\n\n\nIndigo background colors\n\n\nUse any of the following CSS classes on any element to apply an indigo background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-indigo-100\n to \nbg-indigo-900\n in \n100\n increments.\n\n\nuse \nbg-indigo-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-indigo-A100\n\n\nbg-indigo-A200\n\n\nbg-indigo-A400\n\n\nbg-indigo-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-indigo-500\n\n    \n!-- Indigo background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nIndigo color palette\n\n\n\n\n\n\nBlue background colors\n\n\nUse any of the following CSS classes on any element to apply a blue background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-blue-100\n to \nbg-blue-900\n in \n100\n increments.\n\n\nuse \nbg-blue-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-blue-A100\n\n\nbg-blue-A200\n\n\nbg-blue-A400\n\n\nbg-blue-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-blue-500\n\n    \n!-- Blue background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nBlue color palette\n\n\n\n\n\n\nLight Blue background colors\n\n\nUse any of the following CSS classes on any element to apply a light blue background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-light-blue-100\n to \nbg-light-blue-900\n in \n100\n increments.\n\n\nuse \nbg-light-blue-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-light-blue-A100\n\n\nbg-light-blue-A200\n\n\nbg-light-blue-A400\n\n\nbg-light-blue-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-light-blue-500\n\n    \n!-- Light Blue background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nLight Blue color palette\n\n\n\n\n\n\nCyan background colors\n\n\nUse any of the following CSS classes on any element to apply a cyan background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-cyan-100\n to \nbg-cyan-900\n in \n100\n increments.\n\n\nuse \nbg-cyan-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-cyan-A100\n\n\nbg-cyan-A200\n\n\nbg-cyan-A400\n\n\nbg-cyan-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-cyan-500\n\n    \n!-- Cyan background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nCyan color palette\n\n\n\n\n\n\nTeal background colors\n\n\nUse any of the following CSS classes on any element to apply a teal background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-teal-100\n to \nbg-teal-900\n in \n100\n increments.\n\n\nuse \nbg-teal-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-teal-A100\n\n\nbg-teal-A200\n\n\nbg-teal-A400\n\n\nbg-teal-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-teal-500\n\n    \n!-- Teal background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nTeal color palette\n\n\n\n\n\n\nGreen background colors\n\n\nUse any of the following CSS classes on any element to apply a green background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-green-100\n to \nbg-green-900\n in \n100\n increments.\n\n\nuse \nbg-green-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-green-A100\n\n\nbg-green-A200\n\n\nbg-green-A400\n\n\nbg-green-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-green-500\n\n    \n!-- Green background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nGreen color palette\n\n\n\n\n\n\nLight Green background colors\n\n\nUse any of the following CSS classes on any element to apply a light green background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-light-green-100\n to \nbg-light-green-900\n in \n100\n increments.\n\n\nuse \nbg-light-green-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-light-green-A100\n\n\nbg-light-green-A200\n\n\nbg-light-green-A400\n\n\nbg-light-green-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-light-green-500\n\n    \n!-- Light Green background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nLight Green color palette\n\n\n\n\n\n\nLime background colors\n\n\nUse any of the following CSS classes on any element to apply a lime background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-lime-100\n to \nbg-lime-900\n in \n100\n increments.\n\n\nuse \nbg-lime-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-lime-A100\n\n\nbg-lime-A200\n\n\nbg-lime-A400\n\n\nbg-lime-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-lime-500\n\n    \n!-- Lime background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nLime color palette\n\n\n\n\n\n\nYellow background colors\n\n\nUse any of the following CSS classes on any element to apply a yellow background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-yellow-100\n to \nbg-yellow-900\n in \n100\n increments.\n\n\nuse \nbg-yellow-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-yellow-A100\n\n\nbg-yellow-A200\n\n\nbg-yellow-A400\n\n\nbg-yellow-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-yellow-500\n\n    \n!-- Yellow background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nYellow color palette\n\n\n\n\n\n\nAmber background colors\n\n\nUse any of the following CSS classes on any element to apply an amber background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-amber-100\n to \nbg-amber-900\n in \n100\n increments.\n\n\nuse \nbg-amber-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-amber-A100\n\n\nbg-amber-A200\n\n\nbg-amber-A400\n\n\nbg-amber-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-amber-500\n\n    \n!-- Amber background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nAmber color palette\n\n\n\n\n\n\nOrange background colors\n\n\nUse any of the following CSS classes on any element to apply an orange background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-orange-100\n to \nbg-orange-900\n in \n100\n increments.\n\n\nuse \nbg-orange-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-orange-A100\n\n\nbg-orange-A200\n\n\nbg-orange-A400\n\n\nbg-orange-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-orange-500\n\n    \n!-- Orange background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nOrange color palette\n\n\n\n\n\n\nDeep Orange background colors\n\n\nUse any of the following CSS classes on any element to apply a deep orange background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-deep-orange-100\n to \nbg-deep-orange-900\n in \n100\n increments.\n\n\nuse \nbg-deep-orange-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbg-deep-orange-A100\n\n\nbg-deep-orange-A200\n\n\nbg-deep-orange-A400\n\n\nbg-deep-orange-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-deep-orange-500\n\n    \n!-- Deep Orange background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nDeep Orange color palette\n\n\n\n\n\n\nBrown background colors\n\n\nUse any of the following CSS classes on any element to apply a brown background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-brown-100\n to \nbg-brown-900\n in \n100\n increments.\n\n\nuse \nbg-brown-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-brown-500\n\n    \n!-- Brown background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nBrown color palette\n\n\n\n\n\n\nGrey background colors\n\n\nUse any of the following CSS classes on any element to apply a grey background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-grey-100\n to \nbg-grey-900\n in \n100\n increments.\n\n\nuse \nbg-grey-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-grey-500\n\n    \n!-- Grey background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nGrey color palette\n\n\n\n\n\n\nBlue Grey background colors\n\n\nUse any of the following CSS classes on any element to apply a blue grey background color.\n\n\nPrimary colors\n:\n\n\n\n\nbg-blue-grey-100\n to \nbg-blue-grey-900\n in \n100\n increments.\n\n\nuse \nbg-blue-grey-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nExample\n:\n\n\ndiv class=\nbg-blue-grey-500\n\n    \n!-- Blue Grey background block --\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nBlue Grey color palette\n\n\n\n\n\n\nText color\n\n\nRed text colors\n\n\nUse any of the following CSS classes on any element to apply a red text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-red-100\n to \ntext-red-900\n in \n100\n increments.\n\n\nuse \ntext-red-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-red-A100\n\n\ntext-red-A200\n\n\ntext-red-A400\n\n\ntext-red-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-red-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nRed color palette\n\n\n\n\n\n\nPink text colors\n\n\nUse any of the following CSS classes on any element to apply a pink text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-pink-100\n to \ntext-pink-900\n in \n100\n increments.\n\n\nuse \ntext-pink-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-pink-A100\n\n\ntext-pink-A200\n\n\ntext-pink-A400\n\n\ntext-pink-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-pink-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nPink color palette\n\n\n\n\n\n\nPurple text colors\n\n\nUse any of the following CSS classes on any element to apply a purple text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-purple-100\n to \ntext-purple-900\n in \n100\n increments.\n\n\nuse \ntext-purple-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-purple-A100\n\n\ntext-purple-A200\n\n\ntext-purple-A400\n\n\ntext-purple-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-purple-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nPurple color palette\n\n\n\n\n\n\nDeep Purple text colors\n\n\nUse any of the following CSS classes on any element to apply a deep purple text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-deep-purple-100\n to \ntext-deep-purple-900\n in \n100\n increments.\n\n\nuse \ntext-deep-purple-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-deep-purple-A100\n\n\ntext-deep-purple-A200\n\n\ntext-deep-purple-A400\n\n\ntext-deep-purple-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-deep-purple-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nDeep Purple color palette\n\n\n\n\n\n\nIndigo text colors\n\n\nUse any of the following CSS classes on any element to apply an indigo text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-indigo-100\n to \ntext-indigo-900\n in \n100\n increments.\n\n\nuse \ntext-indigo-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-indigo-A100\n\n\ntext-indigo-A200\n\n\ntext-indigo-A400\n\n\ntext-indigo-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-indigo-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nIndigo color palette\n\n\n\n\n\n\nBlue text colors\n\n\nUse any of the following CSS classes on any element to apply a blue text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-blue-100\n to \ntext-blue-900\n in \n100\n increments.\n\n\nuse \ntext-blue-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-blue-A100\n\n\ntext-blue-A200\n\n\ntext-blue-A400\n\n\ntext-blue-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-blue-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nBlue color palette\n\n\n\n\n\n\nLight Blue text colors\n\n\nUse any of the following CSS classes on any element to apply a light blue text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-light-blue-100\n to \ntext-light-blue-900\n in \n100\n increments.\n\n\nuse \ntext-light-blue-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-light-blue-A100\n\n\ntext-light-blue-A200\n\n\ntext-light-blue-A400\n\n\ntext-light-blue-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-light-blue-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nLight Blue color palette\n\n\n\n\n\n\nCyan text colors\n\n\nUse any of the following CSS classes on any element to apply a cyan text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-cyan-100\n to \ntext-cyan-900\n in \n100\n increments.\n\n\nuse \ntext-cyan-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-cyan-A100\n\n\ntext-cyan-A200\n\n\ntext-cyan-A400\n\n\ntext-cyan-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-cyan-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nCyan color palette\n\n\n\n\n\n\nTeal text colors\n\n\nUse any of the following CSS classes on any element to apply a teal text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-teal-100\n to \ntext-teal-900\n in \n100\n increments.\n\n\nuse \ntext-teal-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-teal-A100\n\n\ntext-teal-A200\n\n\ntext-teal-A400\n\n\ntext-teal-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-teal-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nTeal color palette\n\n\n\n\n\n\nGreen text colors\n\n\nUse any of the following CSS classes on any element to apply a green text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-green-100\n to \ntext-green-900\n in \n100\n increments.\n\n\nuse \ntext-green-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-green-A100\n\n\ntext-green-A200\n\n\ntext-green-A400\n\n\ntext-green-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-green-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nGreen color palette\n\n\n\n\n\n\nLight Green text colors\n\n\nUse any of the following CSS classes on any element to apply a light green text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-light-green-100\n to \ntext-light-green-900\n in \n100\n increments.\n\n\nuse \ntext-light-green-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-light-green-A100\n\n\ntext-light-green-A200\n\n\ntext-light-green-A400\n\n\ntext-light-green-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-light-green-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nLight Green color palette\n\n\n\n\n\n\nLime text colors\n\n\nUse any of the following CSS classes on any element to apply a lime text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-lime-100\n to \ntext-lime-900\n in \n100\n increments.\n\n\nuse \ntext-lime-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-lime-A100\n\n\ntext-lime-A200\n\n\ntext-lime-A400\n\n\ntext-lime-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-lime-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nLime color palette\n\n\n\n\n\n\nYellow text colors\n\n\nUse any of the following CSS classes on any element to apply a yellow text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-yellow-100\n to \ntext-yellow-900\n in \n100\n increments.\n\n\nuse \ntext-yellow-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-yellow-A100\n\n\ntext-yellow-A200\n\n\ntext-yellow-A400\n\n\ntext-yellow-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-yellow-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nYellow color palette\n\n\n\n\n\n\nAmber text colors\n\n\nUse any of the following CSS classes on any element to apply an amber text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-amber-100\n to \ntext-amber-900\n in \n100\n increments.\n\n\nuse \ntext-amber-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-amber-A100\n\n\ntext-amber-A200\n\n\ntext-amber-A400\n\n\ntext-amber-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-amber-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nAmber color palette\n\n\n\n\n\n\nOrange text colors\n\n\nUse any of the following CSS classes on any element to apply an orange text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-orange-100\n to \ntext-orange-900\n in \n100\n increments.\n\n\nuse \ntext-orange-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-orange-A100\n\n\ntext-orange-A200\n\n\ntext-orange-A400\n\n\ntext-orange-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-orange-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nOrange color palette\n\n\n\n\n\n\nDeep Orange text colors\n\n\nUse any of the following CSS classes on any element to apply a deep orange text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-deep-orange-100\n to \ntext-deep-orange-900\n in \n100\n increments.\n\n\nuse \ntext-deep-orange-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\ntext-deep-orange-A100\n\n\ntext-deep-orange-A200\n\n\ntext-deep-orange-A400\n\n\ntext-deep-orange-A700\n\n\n\n\nExample\n:\n\n\np class=\ntext-deep-orange-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nDeep Orange color palette\n\n\n\n\n\n\nBrown text colors\n\n\nUse any of the following CSS classes on any element to apply a brown text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-brown-100\n to \ntext-brown-900\n in \n100\n increments.\n\n\nuse \ntext-brown-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nExample\n:\n\n\np class=\ntext-brown-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nBrown color palette\n\n\n\n\n\n\nGrey text colors\n\n\nUse any of the following CSS classes on any element to apply a grey text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-grey-100\n to \ntext-grey-900\n in \n100\n increments.\n\n\nuse \ntext-grey-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nExample\n:\n\n\np class=\ntext-grey-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nGrey color palette\n\n\n\n\n\n\nBlue Grey text colors\n\n\nUse any of the following CSS classes on any element to apply a blue grey text color.\n\n\nPrimary colors\n:\n\n\n\n\ntext-blue-grey-100\n to \ntext-blue-grey-900\n in \n100\n increments.\n\n\nuse \ntext-blue-grey-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nExample\n:\n\n\np class=\ntext-blue-grey-500\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo.\n/p\n\n\n\n\n\nLess variables\n:\n\n\n\n\nBlue Grey color palette\n\n\n\n\n\n\nButtons\n\n\nRed buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a red button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-red-500\n to \nbtn-red-900\n in \n100\n increments.\n\n\nuse \nbtn-red-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-red-A100\n\n\nbtn-red-A200\n\n\nbtn-red-A400\n\n\nbtn-red-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-red-500\nRed\n/button\n\n\n\n!-- Stroked, white background, red text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-red-500 btn-stroke\nRed\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-red-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Red\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nRed color palette\n\n\n\n\n\n\nPink buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a pink button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-pink-500\n to \nbtn-pink-900\n in \n100\n increments.\n\n\nuse \nbtn-pink-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-pink-A100\n\n\nbtn-pink-A200\n\n\nbtn-pink-A400\n\n\nbtn-pink-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-pink-500\nPink\n/button\n\n\n\n!-- Stroked, white background, pink text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-pink-500 btn-stroke\nPink\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-pink-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Pink\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nPink color palette\n\n\n\n\n\n\nPurple buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a purple button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-purple-500\n to \nbtn-purple-900\n in \n100\n increments.\n\n\nuse \nbtn-purple-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-purple-A100\n\n\nbtn-purple-A200\n\n\nbtn-purple-A400\n\n\nbtn-purple-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-purple-500\nPurple\n/button\n\n\n\n!-- Stroked, white background, purple text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-purple-500 btn-stroke\nPurple\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-purple-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Purple\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nPurple color palette\n\n\n\n\n\n\nDeep Purple buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a deep purple button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-deep-purple-500\n to \nbtn-deep-purple-900\n in \n100\n increments.\n\n\nuse \nbtn-deep-purple-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-deep-purple-A100\n\n\nbtn-deep-purple-A200\n\n\nbtn-deep-purple-A400\n\n\nbtn-deep-purple-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-deep-purple-500\nDeep Purple\n/button\n\n\n\n!-- Stroked, white background, deep purple text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-deep-purple-500 btn-stroke\nDeep Purple\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-deep-purple-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Deep Purple\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nDeep Purple color palette\n\n\n\n\n\n\nIndigo buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get an indigo button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-indigo-500\n to \nbtn-indigo-900\n in \n100\n increments.\n\n\nuse \nbtn-indigo-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-indigo-A100\n\n\nbtn-indigo-A200\n\n\nbtn-indigo-A400\n\n\nbtn-indigo-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-indigo-500\nIndigo\n/button\n\n\n\n!-- Stroked, white background, indigo text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-indigo-500 btn-stroke\nIndigo\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-indigo-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Indigo\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nIndigo color palette\n\n\n\n\n\n\nBlue buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a blue button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-blue-500\n to \nbtn-blue-900\n in \n100\n increments.\n\n\nuse \nbtn-blue-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-blue-A100\n\n\nbtn-blue-A200\n\n\nbtn-blue-A400\n\n\nbtn-blue-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-blue-500\nBlue\n/button\n\n\n\n!-- Stroked, white background, blue text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-blue-500 btn-stroke\nBlue\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-blue-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Blue\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nBlue color palette\n\n\n\n\n\n\nLight Blue buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a light blue button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-light-blue-500\n to \nbtn-light-blue-900\n in \n100\n increments.\n\n\nuse \nbtn-light-blue-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-light-blue-A100\n\n\nbtn-light-blue-A200\n\n\nbtn-light-blue-A400\n\n\nbtn-light-blue-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-light-blue-500\nLight Blue\n/button\n\n\n\n!-- Stroked, white background, light blue text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-light-blue-500 btn-stroke\nLight Blue\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-light-blue-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Light Blue\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nLight Blue color palette\n\n\n\n\n\n\nCyan buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a cyan button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-cyan-500\n to \nbtn-cyan-900\n in \n100\n increments.\n\n\nuse \nbtn-cyan-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-cyan-A100\n\n\nbtn-cyan-A200\n\n\nbtn-cyan-A400\n\n\nbtn-cyan-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-cyan-500\nCyan\n/button\n\n\n\n!-- Stroked, white background, blue text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-cyan-500 btn-stroke\nCyan\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-cyan-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Cyan\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nCyan color palette\n\n\n\n\n\n\nTeal buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a teal button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-teal-500\n to \nbtn-teal-900\n in \n100\n increments.\n\n\nuse \nbtn-teal-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-teal-A100\n\n\nbtn-teal-A200\n\n\nbtn-teal-A400\n\n\nbtn-teal-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-teal-500\nTeal\n/button\n\n\n\n!-- Stroked, white background, blue text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-teal-500 btn-stroke\nTeal\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-teal-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Teal\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nTeal color palette\n\n\n\n\n\n\nGreen buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a green button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-green-500\n to \nbtn-green-900\n in \n100\n increments.\n\n\nuse \nbtn-green-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-green-A100\n\n\nbtn-green-A200\n\n\nbtn-green-A400\n\n\nbtn-green-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-green-500\nGreen\n/button\n\n\n\n!-- Stroked, white background, blue text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-green-500 btn-stroke\nGreen\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-green-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Green\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nGreen color palette\n\n\n\n\n\n\nLight Green buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a light green button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-light-green-500\n to \nbtn-light-green-900\n in \n100\n increments.\n\n\nuse \nbtn-light-green-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-light-green-A100\n\n\nbtn-light-green-A200\n\n\nbtn-light-green-A400\n\n\nbtn-light-green-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-light-green-500\nLight Green\n/button\n\n\n\n!-- Stroked, white background, blue text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-light-green-500 btn-stroke\nLight Green\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-light-green-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Light Green\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nLight Green color palette\n\n\n\n\n\n\nLime buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a lime button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-lime-500\n to \nbtn-lime-900\n in \n100\n increments.\n\n\nuse \nbtn-lime-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-lime-A100\n\n\nbtn-lime-A200\n\n\nbtn-lime-A400\n\n\nbtn-lime-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-lime-500\nLime\n/button\n\n\n\n!-- Stroked, white background, blue text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-lime-500 btn-stroke\nLime\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-lime-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Lime\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nLime color palette\n\n\n\n\n\n\nYellow buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a yellow button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-yellow-500\n to \nbtn-yellow-900\n in \n100\n increments.\n\n\nuse \nbtn-yellow-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-yellow-A100\n\n\nbtn-yellow-A200\n\n\nbtn-yellow-A400\n\n\nbtn-yellow-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-yellow-500\nYellow\n/button\n\n\n\n!-- Stroked, white background, blue text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-yellow-500 btn-stroke\nYellow\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-yellow-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Yellow\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nYellow color palette\n\n\n\n\n\n\nAmber buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get an amber button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-amber-500\n to \nbtn-amber-900\n in \n100\n increments.\n\n\nuse \nbtn-amber-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-amber-A100\n\n\nbtn-amber-A200\n\n\nbtn-amber-A400\n\n\nbtn-amber-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-amber-500\nAmber\n/button\n\n\n\n!-- Stroked, white background, blue text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-amber-500 btn-stroke\nAmber\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-amber-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Amber\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nAmber color palette\n\n\n\n\n\n\nOrange buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get an orange button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-orange-500\n to \nbtn-orange-900\n in \n100\n increments.\n\n\nuse \nbtn-orange-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-orange-A100\n\n\nbtn-orange-A200\n\n\nbtn-orange-A400\n\n\nbtn-orange-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-orange-500\nOrange\n/button\n\n\n\n!-- Stroked, white background, blue text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-orange-500 btn-stroke\nOrange\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-orange-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Orange\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nOrange color palette\n\n\n\n\n\n\nDeep Orange buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a deep orange button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-deep-orange-500\n to \nbtn-deep-orange-900\n in \n100\n increments.\n\n\nuse \nbtn-deep-orange-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nbtn-deep-orange-A100\n\n\nbtn-deep-orange-A200\n\n\nbtn-deep-orange-A400\n\n\nbtn-deep-orange-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-deep-orange-500\nDeep Orange\n/button\n\n\n\n!-- Stroked, white background, blue text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-deep-orange-500 btn-stroke\nDeep Orange\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-deep-orange-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Deep Orange\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nDeep Orange color palette\n\n\n\n\n\n\nBrown buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a brown button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-brown-500\n to \nbtn-brown-900\n in \n100\n increments.\n\n\nuse \nbtn-brown-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-brown-500\nBrown\n/button\n\n\n\n!-- Stroked, white background, blue text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-brown-500 btn-stroke\nBrown\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-brown-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Brown\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nBrown color palette\n\n\n\n\n\n\nGrey buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a grey button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-grey-500\n to \nbtn-grey-900\n in \n100\n increments.\n\n\nuse \nbtn-grey-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-grey-500\nGrey\n/button\n\n\n\n!-- Stroked, white background, blue text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-grey-500 btn-stroke\nGrey\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-grey-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Grey\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nGrey color palette\n\n\n\n\n\n\nBlue Grey buttons\n\n\nUse any of the following CSS classes on any standard Bootstrap button to get a blue grey button variation.\n\n\nPrimary colors\n:\n\n\n\n\nbtn-blue-grey-500\n to \nbtn-blue-grey-900\n in \n100\n increments.\n\n\nuse \nbtn-blue-grey-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nExamples\n:\n\n\n!-- Filled background color --\n\n\nbutton class=\nbtn btn-blue-grey-500\nBlue Grey\n/button\n\n\n\n!-- Stroked, white background, blue text and border and filled background on hover --\n\n\nbutton class=\nbtn btn-blue-grey-500 btn-stroke\nBlue Grey\n/button\n\n\n\n!-- Dropdown --\n\n\ndiv class=\nbtn-group\n\n    \nbutton type=\nbutton\n class=\nbtn btn-blue-grey-500 dropdown-toggle\n data-toggle=\ndropdown\n aria-expanded=\nfalse\n\n        Dropdown Blue Grey\n        \nspan class=\ncaret\n/span\n\n    \n/button\n\n    \nul class=\ndropdown-menu\n\n        \nli\na href=\n#\nAction\n/a\n/li\n\n        \nli\na href=\n#\nAnother action\n/a\n/li\n\n        \nli\na href=\n#\nSomething else here\n/a\n/li\n\n        \nli class=\ndivider\n/li\n\n        \nli\na href=\n#\nSeparated link\n/a\n/li\n\n    \n/ul\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nBlue Grey color palette\n\n\n\n\n\n\nProgress bars\n\n\nRed progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-red-100\n to \nprogress-bar-red-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-red-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-red-A100\n\n\nprogress-bar-red-A200\n\n\nprogress-bar-red-A400\n\n\nprogress-bar-red-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-red-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nRed color palette\n\n\n\n\n\n\nPink progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-pink-100\n to \nprogress-bar-pink-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-pink-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-pink-A100\n\n\nprogress-bar-pink-A200\n\n\nprogress-bar-pink-A400\n\n\nprogress-bar-pink-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-pink-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nPink color palette\n\n\n\n\n\n\nPurple progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-purple-100\n to \nprogress-bar-purple-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-purple-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-purple-A100\n\n\nprogress-bar-purple-A200\n\n\nprogress-bar-purple-A400\n\n\nprogress-bar-purple-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-purple-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nPurple color palette\n\n\n\n\n\n\nDeep Purple progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-deep-purple-100\n to \nprogress-bar-deep-purple-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-deep-purple-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-deep-purple-A100\n\n\nprogress-bar-deep-purple-A200\n\n\nprogress-bar-deep-purple-A400\n\n\nprogress-bar-deep-purple-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-deep-purple-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nDeep Purple color palette\n\n\n\n\n\n\nIndigo progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-indigo-100\n to \nprogress-bar-indigo-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-indigo-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-indigo-A100\n\n\nprogress-bar-indigo-A200\n\n\nprogress-bar-indigo-A400\n\n\nprogress-bar-indigo-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-indigo-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nIndigo color palette\n\n\n\n\n\n\nBlue progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-blue-100\n to \nprogress-bar-blue-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-blue-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-blue-A100\n\n\nprogress-bar-blue-A200\n\n\nprogress-bar-blue-A400\n\n\nprogress-bar-blue-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-blue-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nBlue color palette\n\n\n\n\n\n\nLight Blue progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-light-blue-100\n to \nprogress-bar-light-blue-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-light-blue-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-light-blue-A100\n\n\nprogress-bar-light-blue-A200\n\n\nprogress-bar-light-blue-A400\n\n\nprogress-bar-light-blue-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-light-blue-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nLight Blue color palette\n\n\n\n\n\n\nCyan progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-cyan-100\n to \nprogress-bar-cyan-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-cyan-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-cyan-A100\n\n\nprogress-bar-cyan-A200\n\n\nprogress-bar-cyan-A400\n\n\nprogress-bar-cyan-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-cyan-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nCyan color palette\n\n\n\n\n\n\nTeal progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-teal-100\n to \nprogress-bar-teal-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-teal-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-teal-A100\n\n\nprogress-bar-teal-A200\n\n\nprogress-bar-teal-A400\n\n\nprogress-bar-teal-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-teal-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nTeal color palette\n\n\n\n\n\n\nGreen progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-green-100\n to \nprogress-bar-green-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-green-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-green-A100\n\n\nprogress-bar-green-A200\n\n\nprogress-bar-green-A400\n\n\nprogress-bar-green-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-green-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nGreen color palette\n\n\n\n\n\n\nLight Green progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-light-green-100\n to \nprogress-bar-light-green-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-light-green-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-light-green-A100\n\n\nprogress-bar-light-green-A200\n\n\nprogress-bar-light-green-A400\n\n\nprogress-bar-light-green-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-light-green-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nLight Green color palette\n\n\n\n\n\n\nLime progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-lime-100\n to \nprogress-bar-lime-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-lime-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-lime-A100\n\n\nprogress-bar-lime-A200\n\n\nprogress-bar-lime-A400\n\n\nprogress-bar-lime-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-lime-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nLime color palette\n\n\n\n\n\n\nYellow progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-yellow-100\n to \nprogress-bar-yellow-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-yellow-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-yellow-A100\n\n\nprogress-bar-yellow-A200\n\n\nprogress-bar-yellow-A400\n\n\nprogress-bar-yellow-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-yellow-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nYellow color palette\n\n\n\n\n\n\nAmber progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-amber-100\n to \nprogress-bar-amber-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-amber-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-amber-A100\n\n\nprogress-bar-amber-A200\n\n\nprogress-bar-amber-A400\n\n\nprogress-bar-amber-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-amber-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nAmber color palette\n\n\n\n\n\n\nOrange progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-orange-100\n to \nprogress-bar-orange-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-orange-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-orange-A100\n\n\nprogress-bar-orange-A200\n\n\nprogress-bar-orange-A400\n\n\nprogress-bar-orange-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-orange-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nOrange color palette\n\n\n\n\n\n\nDeep Orange progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-deep-orange-100\n to \nprogress-bar-deep-orange-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-deep-orange-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nprogress-bar-deep-orange-A100\n\n\nprogress-bar-deep-orange-A200\n\n\nprogress-bar-deep-orange-A400\n\n\nprogress-bar-deep-orange-A700\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-deep-orange-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nDeep Orange color palette\n\n\n\n\n\n\nBrown progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-brown-100\n to \nprogress-bar-brown-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-brown-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-brown-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nBrown color palette\n\n\n\n\n\n\nGrey progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-grey-100\n to \nprogress-bar-grey-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-grey-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-grey-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nGrey color palette\n\n\n\n\n\n\nBlue Grey progress bars\n\n\nUse any of the following CSS classes on a standard Bootstrap progress bar.\n\n\nPrimary colors\n:\n\n\n\n\nprogress-bar-blue-grey-100\n to \nprogress-bar-blue-grey-900\n in \n100\n increments.\n\n\nuse \nprogress-bar-blue-grey-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nExample\n:\n\n\ndiv class=\nprogress-bar progress-bar-blue-grey-500\n role=\nprogressbar\n aria-valuenow=\n60\n aria-valuemin=\n0\n aria-valuemax=\n100\n style=\nwidth: 60%;\n\n    \nspan class=\nsr-only\n60% Complete\n/span\n\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nBlue Grey color palette\n\n\n\n\n\n\nAlerts\n\n\nRed alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a red alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-red-500\n to \nalert-red-900\n in \n100\n increments.\n\n\nuse \nalert-red-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-red-A100\n\n\nalert-red-A200\n\n\nalert-red-A400\n\n\nalert-red-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-red-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-red-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nRed color palette\n\n\n\n\n\n\nPink alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a pink alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-pink-500\n to \nalert-pink-900\n in \n100\n increments.\n\n\nuse \nalert-pink-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-pink-A100\n\n\nalert-pink-A200\n\n\nalert-pink-A400\n\n\nalert-pink-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-pink-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-pink-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nPink color palette\n\n\n\n\n\n\nPurple alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a purple alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-purple-500\n to \nalert-purple-900\n in \n100\n increments.\n\n\nuse \nalert-purple-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-purple-A100\n\n\nalert-purple-A200\n\n\nalert-purple-A400\n\n\nalert-purple-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-purple-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-purple-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nPurple color palette\n\n\n\n\n\n\nDeep Purple alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a deep purple alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-deep-purple-500\n to \nalert-deep-purple-900\n in \n100\n increments.\n\n\nuse \nalert-deep-purple-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-deep-purple-A100\n\n\nalert-deep-purple-A200\n\n\nalert-deep-purple-A400\n\n\nalert-deep-purple-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-deep-purple-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-deep-purple-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nDeep Purple color palette\n\n\n\n\n\n\nIndigo alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a indigo alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-indigo-500\n to \nalert-indigo-900\n in \n100\n increments.\n\n\nuse \nalert-indigo-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-indigo-A100\n\n\nalert-indigo-A200\n\n\nalert-indigo-A400\n\n\nalert-indigo-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-indigo-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-indigo-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nIndigo color palette\n\n\n\n\n\n\nBlue alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a blue alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-blue-500\n to \nalert-blue-900\n in \n100\n increments.\n\n\nuse \nalert-blue-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-blue-A100\n\n\nalert-blue-A200\n\n\nalert-blue-A400\n\n\nalert-blue-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-blue-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-blue-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nBlue color palette\n\n\n\n\n\n\nLight Blue alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a light blue alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-light-blue-500\n to \nalert-light-blue-900\n in \n100\n increments.\n\n\nuse \nalert-light-blue-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-light-blue-A100\n\n\nalert-light-blue-A200\n\n\nalert-light-blue-A400\n\n\nalert-light-blue-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-light-blue-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-light-blue-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nLight Blue color palette\n\n\n\n\n\n\nCyan alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a cyan alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-cyan-500\n to \nalert-cyan-900\n in \n100\n increments.\n\n\nuse \nalert-cyan-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-cyan-A100\n\n\nalert-cyan-A200\n\n\nalert-cyan-A400\n\n\nalert-cyan-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-cyan-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-cyan-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nCyan color palette\n\n\n\n\n\n\nTeal alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a teal alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-teal-500\n to \nalert-teal-900\n in \n100\n increments.\n\n\nuse \nalert-teal-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-teal-A100\n\n\nalert-teal-A200\n\n\nalert-teal-A400\n\n\nalert-teal-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-teal-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-teal-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nTeal color palette\n\n\n\n\n\n\nGreen alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a green alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-green-500\n to \nalert-green-900\n in \n100\n increments.\n\n\nuse \nalert-green-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-green-A100\n\n\nalert-green-A200\n\n\nalert-green-A400\n\n\nalert-green-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-green-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-green-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nGreen color palette\n\n\n\n\n\n\nLight Green alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a light green alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-light-green-500\n to \nalert-light-green-900\n in \n100\n increments.\n\n\nuse \nalert-light-green-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-light-green-A100\n\n\nalert-light-green-A200\n\n\nalert-light-green-A400\n\n\nalert-light-green-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-light-green-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-light-green-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nLight Green color palette\n\n\n\n\n\n\nLime alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a lime alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-lime-500\n to \nalert-lime-900\n in \n100\n increments.\n\n\nuse \nalert-lime-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-lime-A100\n\n\nalert-lime-A200\n\n\nalert-lime-A400\n\n\nalert-lime-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-lime-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-lime-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nLime color palette\n\n\n\n\n\n\nYellow alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a yellow alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-yellow-500\n to \nalert-yellow-900\n in \n100\n increments.\n\n\nuse \nalert-yellow-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-yellow-A100\n\n\nalert-yellow-A200\n\n\nalert-yellow-A400\n\n\nalert-yellow-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-yellow-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-yellow-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nYellow color palette\n\n\n\n\n\n\nAmber alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get an amber alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-amber-500\n to \nalert-amber-900\n in \n100\n increments.\n\n\nuse \nalert-amber-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-amber-A100\n\n\nalert-amber-A200\n\n\nalert-amber-A400\n\n\nalert-amber-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-amber-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-amber-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nAmber color palette\n\n\n\n\n\n\nOrange alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get an orange alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-orange-500\n to \nalert-orange-900\n in \n100\n increments.\n\n\nuse \nalert-orange-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-orange-A100\n\n\nalert-orange-A200\n\n\nalert-orange-A400\n\n\nalert-orange-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-orange-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-orange-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nOrange color palette\n\n\n\n\n\n\nDeep Orange alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a deep orange alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-deep-orange-500\n to \nalert-deep-orange-900\n in \n100\n increments.\n\n\nuse \nalert-deep-orange-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nAccent colors\n:\n\n\n\n\nalert-deep-orange-A100\n\n\nalert-deep-orange-A200\n\n\nalert-deep-orange-A400\n\n\nalert-deep-orange-A700\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-deep-orange-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-deep-orange-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nDeep Orange color palette\n\n\n\n\n\n\nBrown alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a brown alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-brown-500\n to \nalert-brown-900\n in \n100\n increments.\n\n\nuse \nalert-brown-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-brown-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-brown-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nBrown color palette\n\n\n\n\n\n\nGrey alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a grey alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-grey-500\n to \nalert-grey-900\n in \n100\n increments.\n\n\nuse \nalert-grey-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-grey-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-grey-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nGrey color palette\n\n\n\n\n\n\nBlue Grey alerts\n\n\nUse any of the following CSS classes on any standard Bootstrap alert to get a blue grey alert variation.\n\n\nPrimary colors\n:\n\n\n\n\nalert-blue-grey-500\n to \nalert-grey-900\n in \n100\n increments.\n\n\nuse \nalert-blue-grey-500\n as the primary color.\n\n\nthe higher the number, the darker the color.\n\n\n\n\nExamples\n:\n\n\n!-- Filled --\n\n\ndiv class=\nalert alert-blue-grey-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n!-- Stroked with colored text and lighter background color --\n\n\ndiv class=\nalert alert-stroke alert-blue-grey-500\n role=\nalert\n\n    \nstrong\nWell done!\n/strong\n You successfully read this important alert message.\n\n/div\n\n\n\n\n\nLess variables\n:\n\n\n\n\nBlue Grey color palette", 
            "title": "Colors"
        }, 
        {
            "location": "/reference/colors/index.html#colors", 
            "text": "The colors package  introduces unexpected and vibrant colors, based on Google's  Material Design  Guideline, inspired by bold color statements juxtaposed with muted environments, taking cues from contemporary architecture   many more.", 
            "title": "Colors"
        }, 
        {
            "location": "/reference/colors/index.html#requirements", 
            "text": "Less  From  src/less/themes/$THEME_NAME/app.less :  // Color Mixins\n@import \"colors/less/mixins/mixins\";\n\n// Colors\n@import \"colors/less/ui/ui\";  Which will load the following into our main application style bundle:   lib/colors/less/mixins/mixins.less  lib/colors/less/ui/ui.less   Or, instead of loading the entire  colors/less/ui  package, you can just pick your requirements one by one:  // Colors\n@import \"colors/less/ui/_helpers\"; // required\n@import \"colors/less/ui/_background\";\n@import \"colors/less/ui/_text\";\n@import \"colors/less/ui/_buttons\";\n@import \"colors/less/ui/_progress-bars\";\n@import \"colors/less/ui/_calendar\";\n@import \"colors/less/ui/_alerts\";\n@import \"colors/less/ui/_ribbons\";   Alternative  If working with Less is not your favorite thing, you can alternatively load the pre-built static assets we have included:  !-- In the head of the HTML document --  link rel=\"stylesheet\" href=\"css/app/colors-background.css\" /  link rel=\"stylesheet\" href=\"css/app/colors-text.css\" /  link rel=\"stylesheet\" href=\"css/app/colors-buttons.css\" /  link rel=\"stylesheet\" href=\"css/app/colors-progress-bars.css\" /  link rel=\"stylesheet\" href=\"css/app/colors-calendar.css\" /  link rel=\"stylesheet\" href=\"css/app/colors-alerts.css\" /  link rel=\"stylesheet\" href=\"css/app/colors-ribbons.css\" /", 
            "title": "Requirements"
        }, 
        {
            "location": "/reference/colors/index.html#the-color-palettes", 
            "text": "19 color palettes designed to work harmoniously with each other. Each color palette starts with primary colors and fills in the spectrum to create a complete and usable palette.  Google suggests using the  *-500  colors  as the primary colors in your app and the other colors as accents colors.   Red color palette   Use any of the following Less variables to apply a red color to any CSS property.  Primary colors :   @red-100  to  @red-900  in  100  increments.  use  @red-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @red-A100  @red-A200  @red-A400  @red-A700   CSS components :   Red background colors  Red text colors  Red buttons  Red progress bars  Red alerts    Pink color palette   Use any of the following Less variables to apply a pink color to any CSS property.  Primary colors :   @pink-100  to  @pink-900  in  100  increments.  use  @pink-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @pink-A100  @pink-A200  @pink-A400  @pink-A700   CSS components :   Pink background colors  Pink text colors  Pink buttons  Pink progress bars  Pink alerts    Purple color palette   Use any of the following Less variables to apply a purple color to any CSS property.  Primary colors :   @purple-100  to  @purple-900  in  100  increments.  use  @purple-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @purple-A100  @purple-A200  @purple-A400  @purple-A700   CSS components :   Purple background colors  Purple text colors  Purple buttons  Purple progress bars  Purple alerts    Deep Purple color palette   Use any of the following Less variables to apply a deep purple color to any CSS property.  Primary colors :   @deep-purple-100  to  @deep-purple-900  in  100  increments.  use  @deep-purple-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @deep-purple-A100  @deep-purple-A200  @deep-purple-A400  @deep-purple-A700   CSS components :   Deep Purple background colors  Deep Purple text colors  Deep Purple buttons  Deep Purple progress bars  Deep Purple alerts    Indigo color palette   Use any of the following Less variables to apply an indigo color to any CSS property.  Primary colors :   @indigo-100  to  @indigo-900  in  100  increments.  use  @indigo-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @indigo-A100  @indigo-A200  @indigo-A400  @indigo-A700   CSS components :   Indigo background colors  Indigo text colors  Indigo buttons  Indigo progress bars  Indigo alerts    Blue color palette   Use any of the following Less variables to apply a blue color to any CSS property.  Primary colors :   @blue-100  to  @blue-900  in  100  increments.  use  @blue-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @blue-A100  @blue-A200  @blue-A400  @blue-A700   CSS components :   Blue background colors  Blue text colors  Blue buttons  Blue progress bars  Blue alerts    Light Blue color palette   Use any of the following Less variables to apply a light blue color to any CSS property.  Primary colors :   @light-blue-100  to  @light-blue-900  in  100  increments.  use  @light-blue-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @light-blue-A100  @light-blue-A200  @light-blue-A400  @light-blue-A700   CSS components :   Light Blue background colors  Light Blue text colors  Light Blue buttons  Light Blue progress bars  Light Blue alerts    Cyan color palette   Use any of the following Less variables to apply a cyan color to any CSS property.  Primary colors :   @cyan-100  to  @cyan-900  in  100  increments.  use  @cyan-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @cyan-A100  @cyan-A200  @cyan-A400  @cyan-A700   CSS components :   Cyan background colors  Cyan text colors  Cyan buttons  Cyan progress bars  Cyan alerts    Teal color palette   Use any of the following Less variables to apply a teal color to any CSS property.  Primary colors :   @teal-100  to  @teal-900  in  100  increments.  use  @teal-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @teal-A100  @teal-A200  @teal-A400  @teal-A700   CSS components :   Teal background colors  Teal text colors  Teal buttons  Teal progress bars  Teal alerts    Green color palette   Use any of the following Less variables to apply a green color to any CSS property.  Primary colors :   @green-100  to  @green-900  in  100  increments.  use  @green-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @green-A100  @green-A200  @green-A400  @green-A700   CSS components :   Green background colors  Green text colors  Green buttons  Green progress bars  Green alerts    Light Green color palette   Use any of the following Less variables to apply a light green color to any CSS property.  Primary colors :   @light-green-100  to  @light-green-900  in  100  increments.  use  @light-green-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @light-green-A100  @light-green-A200  @light-green-A400  @light-green-A700   CSS components :   Light Green background colors  Light Green text colors  Light Green buttons  Light Green progress bars  Light Green alerts    Lime color palette   Use any of the following Less variables to apply a lime color to any CSS property.  Primary colors :   @lime-100  to  @lime-900  in  100  increments.  use  @lime-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @lime-A100  @lime-A200  @lime-A400  @lime-A700   CSS components :   Lime background colors  Lime text colors  Lime buttons  Lime progress bars  Lime alerts    Yellow color palette   Use any of the following Less variables to apply a yellow color to any CSS property.  Primary colors :   @yellow-100  to  @yellow-900  in  100  increments.  use  @yellow-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @yellow-A100  @yellow-A200  @yellow-A400  @yellow-A700   CSS components :   Yellow background colors  Yellow text colors  Yellow buttons  Yellow progress bars  Yellow alerts    Amber color palette   Use any of the following Less variables to apply an amber color to any CSS property.  Primary colors :   @amber-100  to  @amber-900  in  100  increments.  use  @amber-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @amber-A100  @amber-A200  @amber-A400  @amber-A700   CSS components :   Amber background colors  Amber text colors  Amber buttons  Amber progress bars  Amber alerts    Orange color palette   Use any of the following Less variables to apply an orange color to any CSS property.  Primary colors :   @orange-100  to  @orange-900  in  100  increments.  use  @orange-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @orange-A100  @orange-A200  @orange-A400  @orange-A700   CSS components :   Orange background colors  Orange text colors  Orange buttons  Orange progress bars  Orange alerts    Deep Orange color palette   Use any of the following Less variables to apply a deep orange color to any CSS property.  Primary colors :   @deep-orange-100  to  @deep-orange-900  in  100  increments.  use  @deep-orange-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   @deep-orange-A100  @deep-orange-A200  @deep-orange-A400  @deep-orange-A700   CSS components :   Deep Orange background colors  Deep Orange text colors  Deep Orange buttons  Deep Orange progress bars  Deep Orange alerts    Brown color palette   Use any of the following Less variables to apply a brown color to any CSS property.  Primary colors :   @brown-100  to  @brown-900  in  100  increments.  use  @brown-500  as the primary color.  the higher the number, the darker the color.   CSS components :   Brown background colors  Brown text colors  Brown buttons  Brown progress bars  Brown alerts    Grey color palette   Use any of the following Less variables to apply a grey color to any CSS property.  Primary colors :   @grey-100  to  @grey-900  in  100  increments.  use  @grey-500  as the primary color.  the higher the number, the darker the color.   CSS components :   Grey background colors  Grey text colors  Grey buttons  Grey progress bars  Grey alerts    Blue Grey color palette   Use any of the following Less variables to apply a blue grey color to any CSS property.  Primary colors :   @blue-grey-100  to  @blue-grey-900  in  100  increments.  use  @blue-grey-500  as the primary color.  the higher the number, the darker the color.   CSS components :   Blue Grey background colors  Blue Grey text colors  Blue Grey buttons  Blue Grey progress bars  Blue Grey alerts", 
            "title": "The color palettes"
        }, 
        {
            "location": "/reference/colors/index.html#background-color", 
            "text": "Red background colors  Use any of the following CSS classes on any element to apply a red background color.  Primary colors :   bg-red-100  to  bg-red-900  in  100  increments.  use  bg-red-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-red-A100  bg-red-A200  bg-red-A400  bg-red-A700   Example :  div class= bg-red-500 \n     !-- Red background block --  /div   Less variables :   Red color palette    Pink background colors  Use any of the following CSS classes on any element to apply a pink background color.  Primary colors :   bg-pink-100  to  bg-pink-900  in  100  increments.  use  bg-pink-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-pink-A100  bg-pink-A200  bg-pink-A400  bg-pink-A700   Example :  div class= bg-pink-500 \n     !-- Pink background block --  /div   Less variables :   Pink color palette    Purple background colors  Use any of the following CSS classes on any element to apply a purple background color.  Primary colors :   bg-purple-100  to  bg-purple-900  in  100  increments.  use  bg-purple-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-purple-A100  bg-purple-A200  bg-purple-A400  bg-purple-A700   Example :  div class= bg-purple-500 \n     !-- Purple background block --  /div   Less variables :   Purple color palette    Deep Purple background colors  Use any of the following CSS classes on any element to apply a deep purple background color.  Primary colors :   bg-deep-purple-100  to  bg-deep-purple-900  in  100  increments.  use  bg-deep-purple-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-deep-purple-A100  bg-deep-purple-A200  bg-deep-purple-A400  bg-deep-purple-A700   Example :  div class= bg-deep-purple-500 \n     !-- Deep Purple background block --  /div   Less variables :   Deep Purple color palette    Indigo background colors  Use any of the following CSS classes on any element to apply an indigo background color.  Primary colors :   bg-indigo-100  to  bg-indigo-900  in  100  increments.  use  bg-indigo-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-indigo-A100  bg-indigo-A200  bg-indigo-A400  bg-indigo-A700   Example :  div class= bg-indigo-500 \n     !-- Indigo background block --  /div   Less variables :   Indigo color palette    Blue background colors  Use any of the following CSS classes on any element to apply a blue background color.  Primary colors :   bg-blue-100  to  bg-blue-900  in  100  increments.  use  bg-blue-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-blue-A100  bg-blue-A200  bg-blue-A400  bg-blue-A700   Example :  div class= bg-blue-500 \n     !-- Blue background block --  /div   Less variables :   Blue color palette    Light Blue background colors  Use any of the following CSS classes on any element to apply a light blue background color.  Primary colors :   bg-light-blue-100  to  bg-light-blue-900  in  100  increments.  use  bg-light-blue-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-light-blue-A100  bg-light-blue-A200  bg-light-blue-A400  bg-light-blue-A700   Example :  div class= bg-light-blue-500 \n     !-- Light Blue background block --  /div   Less variables :   Light Blue color palette    Cyan background colors  Use any of the following CSS classes on any element to apply a cyan background color.  Primary colors :   bg-cyan-100  to  bg-cyan-900  in  100  increments.  use  bg-cyan-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-cyan-A100  bg-cyan-A200  bg-cyan-A400  bg-cyan-A700   Example :  div class= bg-cyan-500 \n     !-- Cyan background block --  /div   Less variables :   Cyan color palette    Teal background colors  Use any of the following CSS classes on any element to apply a teal background color.  Primary colors :   bg-teal-100  to  bg-teal-900  in  100  increments.  use  bg-teal-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-teal-A100  bg-teal-A200  bg-teal-A400  bg-teal-A700   Example :  div class= bg-teal-500 \n     !-- Teal background block --  /div   Less variables :   Teal color palette    Green background colors  Use any of the following CSS classes on any element to apply a green background color.  Primary colors :   bg-green-100  to  bg-green-900  in  100  increments.  use  bg-green-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-green-A100  bg-green-A200  bg-green-A400  bg-green-A700   Example :  div class= bg-green-500 \n     !-- Green background block --  /div   Less variables :   Green color palette    Light Green background colors  Use any of the following CSS classes on any element to apply a light green background color.  Primary colors :   bg-light-green-100  to  bg-light-green-900  in  100  increments.  use  bg-light-green-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-light-green-A100  bg-light-green-A200  bg-light-green-A400  bg-light-green-A700   Example :  div class= bg-light-green-500 \n     !-- Light Green background block --  /div   Less variables :   Light Green color palette    Lime background colors  Use any of the following CSS classes on any element to apply a lime background color.  Primary colors :   bg-lime-100  to  bg-lime-900  in  100  increments.  use  bg-lime-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-lime-A100  bg-lime-A200  bg-lime-A400  bg-lime-A700   Example :  div class= bg-lime-500 \n     !-- Lime background block --  /div   Less variables :   Lime color palette    Yellow background colors  Use any of the following CSS classes on any element to apply a yellow background color.  Primary colors :   bg-yellow-100  to  bg-yellow-900  in  100  increments.  use  bg-yellow-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-yellow-A100  bg-yellow-A200  bg-yellow-A400  bg-yellow-A700   Example :  div class= bg-yellow-500 \n     !-- Yellow background block --  /div   Less variables :   Yellow color palette    Amber background colors  Use any of the following CSS classes on any element to apply an amber background color.  Primary colors :   bg-amber-100  to  bg-amber-900  in  100  increments.  use  bg-amber-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-amber-A100  bg-amber-A200  bg-amber-A400  bg-amber-A700   Example :  div class= bg-amber-500 \n     !-- Amber background block --  /div   Less variables :   Amber color palette    Orange background colors  Use any of the following CSS classes on any element to apply an orange background color.  Primary colors :   bg-orange-100  to  bg-orange-900  in  100  increments.  use  bg-orange-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-orange-A100  bg-orange-A200  bg-orange-A400  bg-orange-A700   Example :  div class= bg-orange-500 \n     !-- Orange background block --  /div   Less variables :   Orange color palette    Deep Orange background colors  Use any of the following CSS classes on any element to apply a deep orange background color.  Primary colors :   bg-deep-orange-100  to  bg-deep-orange-900  in  100  increments.  use  bg-deep-orange-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   bg-deep-orange-A100  bg-deep-orange-A200  bg-deep-orange-A400  bg-deep-orange-A700   Example :  div class= bg-deep-orange-500 \n     !-- Deep Orange background block --  /div   Less variables :   Deep Orange color palette    Brown background colors  Use any of the following CSS classes on any element to apply a brown background color.  Primary colors :   bg-brown-100  to  bg-brown-900  in  100  increments.  use  bg-brown-500  as the primary color.  the higher the number, the darker the color.   Example :  div class= bg-brown-500 \n     !-- Brown background block --  /div   Less variables :   Brown color palette    Grey background colors  Use any of the following CSS classes on any element to apply a grey background color.  Primary colors :   bg-grey-100  to  bg-grey-900  in  100  increments.  use  bg-grey-500  as the primary color.  the higher the number, the darker the color.   Example :  div class= bg-grey-500 \n     !-- Grey background block --  /div   Less variables :   Grey color palette    Blue Grey background colors  Use any of the following CSS classes on any element to apply a blue grey background color.  Primary colors :   bg-blue-grey-100  to  bg-blue-grey-900  in  100  increments.  use  bg-blue-grey-500  as the primary color.  the higher the number, the darker the color.   Example :  div class= bg-blue-grey-500 \n     !-- Blue Grey background block --  /div   Less variables :   Blue Grey color palette", 
            "title": "Background color"
        }, 
        {
            "location": "/reference/colors/index.html#text-color", 
            "text": "Red text colors  Use any of the following CSS classes on any element to apply a red text color.  Primary colors :   text-red-100  to  text-red-900  in  100  increments.  use  text-red-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-red-A100  text-red-A200  text-red-A400  text-red-A700   Example :  p class= text-red-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Red color palette    Pink text colors  Use any of the following CSS classes on any element to apply a pink text color.  Primary colors :   text-pink-100  to  text-pink-900  in  100  increments.  use  text-pink-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-pink-A100  text-pink-A200  text-pink-A400  text-pink-A700   Example :  p class= text-pink-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Pink color palette    Purple text colors  Use any of the following CSS classes on any element to apply a purple text color.  Primary colors :   text-purple-100  to  text-purple-900  in  100  increments.  use  text-purple-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-purple-A100  text-purple-A200  text-purple-A400  text-purple-A700   Example :  p class= text-purple-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Purple color palette    Deep Purple text colors  Use any of the following CSS classes on any element to apply a deep purple text color.  Primary colors :   text-deep-purple-100  to  text-deep-purple-900  in  100  increments.  use  text-deep-purple-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-deep-purple-A100  text-deep-purple-A200  text-deep-purple-A400  text-deep-purple-A700   Example :  p class= text-deep-purple-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Deep Purple color palette    Indigo text colors  Use any of the following CSS classes on any element to apply an indigo text color.  Primary colors :   text-indigo-100  to  text-indigo-900  in  100  increments.  use  text-indigo-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-indigo-A100  text-indigo-A200  text-indigo-A400  text-indigo-A700   Example :  p class= text-indigo-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Indigo color palette    Blue text colors  Use any of the following CSS classes on any element to apply a blue text color.  Primary colors :   text-blue-100  to  text-blue-900  in  100  increments.  use  text-blue-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-blue-A100  text-blue-A200  text-blue-A400  text-blue-A700   Example :  p class= text-blue-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Blue color palette    Light Blue text colors  Use any of the following CSS classes on any element to apply a light blue text color.  Primary colors :   text-light-blue-100  to  text-light-blue-900  in  100  increments.  use  text-light-blue-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-light-blue-A100  text-light-blue-A200  text-light-blue-A400  text-light-blue-A700   Example :  p class= text-light-blue-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Light Blue color palette    Cyan text colors  Use any of the following CSS classes on any element to apply a cyan text color.  Primary colors :   text-cyan-100  to  text-cyan-900  in  100  increments.  use  text-cyan-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-cyan-A100  text-cyan-A200  text-cyan-A400  text-cyan-A700   Example :  p class= text-cyan-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Cyan color palette    Teal text colors  Use any of the following CSS classes on any element to apply a teal text color.  Primary colors :   text-teal-100  to  text-teal-900  in  100  increments.  use  text-teal-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-teal-A100  text-teal-A200  text-teal-A400  text-teal-A700   Example :  p class= text-teal-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Teal color palette    Green text colors  Use any of the following CSS classes on any element to apply a green text color.  Primary colors :   text-green-100  to  text-green-900  in  100  increments.  use  text-green-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-green-A100  text-green-A200  text-green-A400  text-green-A700   Example :  p class= text-green-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Green color palette    Light Green text colors  Use any of the following CSS classes on any element to apply a light green text color.  Primary colors :   text-light-green-100  to  text-light-green-900  in  100  increments.  use  text-light-green-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-light-green-A100  text-light-green-A200  text-light-green-A400  text-light-green-A700   Example :  p class= text-light-green-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Light Green color palette    Lime text colors  Use any of the following CSS classes on any element to apply a lime text color.  Primary colors :   text-lime-100  to  text-lime-900  in  100  increments.  use  text-lime-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-lime-A100  text-lime-A200  text-lime-A400  text-lime-A700   Example :  p class= text-lime-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Lime color palette    Yellow text colors  Use any of the following CSS classes on any element to apply a yellow text color.  Primary colors :   text-yellow-100  to  text-yellow-900  in  100  increments.  use  text-yellow-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-yellow-A100  text-yellow-A200  text-yellow-A400  text-yellow-A700   Example :  p class= text-yellow-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Yellow color palette    Amber text colors  Use any of the following CSS classes on any element to apply an amber text color.  Primary colors :   text-amber-100  to  text-amber-900  in  100  increments.  use  text-amber-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-amber-A100  text-amber-A200  text-amber-A400  text-amber-A700   Example :  p class= text-amber-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Amber color palette    Orange text colors  Use any of the following CSS classes on any element to apply an orange text color.  Primary colors :   text-orange-100  to  text-orange-900  in  100  increments.  use  text-orange-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-orange-A100  text-orange-A200  text-orange-A400  text-orange-A700   Example :  p class= text-orange-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Orange color palette    Deep Orange text colors  Use any of the following CSS classes on any element to apply a deep orange text color.  Primary colors :   text-deep-orange-100  to  text-deep-orange-900  in  100  increments.  use  text-deep-orange-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   text-deep-orange-A100  text-deep-orange-A200  text-deep-orange-A400  text-deep-orange-A700   Example :  p class= text-deep-orange-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Deep Orange color palette    Brown text colors  Use any of the following CSS classes on any element to apply a brown text color.  Primary colors :   text-brown-100  to  text-brown-900  in  100  increments.  use  text-brown-500  as the primary color.  the higher the number, the darker the color.   Example :  p class= text-brown-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Brown color palette    Grey text colors  Use any of the following CSS classes on any element to apply a grey text color.  Primary colors :   text-grey-100  to  text-grey-900  in  100  increments.  use  text-grey-500  as the primary color.  the higher the number, the darker the color.   Example :  p class= text-grey-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Grey color palette    Blue Grey text colors  Use any of the following CSS classes on any element to apply a blue grey text color.  Primary colors :   text-blue-grey-100  to  text-blue-grey-900  in  100  increments.  use  text-blue-grey-500  as the primary color.  the higher the number, the darker the color.   Example :  p class= text-blue-grey-500 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec ante porta, finibus neque id, commodo justo. /p   Less variables :   Blue Grey color palette", 
            "title": "Text color"
        }, 
        {
            "location": "/reference/colors/index.html#buttons", 
            "text": "Red buttons  Use any of the following CSS classes on any standard Bootstrap button to get a red button variation.  Primary colors :   btn-red-500  to  btn-red-900  in  100  increments.  use  btn-red-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-red-A100  btn-red-A200  btn-red-A400  btn-red-A700   Examples :  !-- Filled background color --  button class= btn btn-red-500 Red /button  !-- Stroked, white background, red text and border and filled background on hover --  button class= btn btn-red-500 btn-stroke Red /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-red-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Red\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Red color palette    Pink buttons  Use any of the following CSS classes on any standard Bootstrap button to get a pink button variation.  Primary colors :   btn-pink-500  to  btn-pink-900  in  100  increments.  use  btn-pink-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-pink-A100  btn-pink-A200  btn-pink-A400  btn-pink-A700   Examples :  !-- Filled background color --  button class= btn btn-pink-500 Pink /button  !-- Stroked, white background, pink text and border and filled background on hover --  button class= btn btn-pink-500 btn-stroke Pink /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-pink-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Pink\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Pink color palette    Purple buttons  Use any of the following CSS classes on any standard Bootstrap button to get a purple button variation.  Primary colors :   btn-purple-500  to  btn-purple-900  in  100  increments.  use  btn-purple-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-purple-A100  btn-purple-A200  btn-purple-A400  btn-purple-A700   Examples :  !-- Filled background color --  button class= btn btn-purple-500 Purple /button  !-- Stroked, white background, purple text and border and filled background on hover --  button class= btn btn-purple-500 btn-stroke Purple /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-purple-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Purple\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Purple color palette    Deep Purple buttons  Use any of the following CSS classes on any standard Bootstrap button to get a deep purple button variation.  Primary colors :   btn-deep-purple-500  to  btn-deep-purple-900  in  100  increments.  use  btn-deep-purple-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-deep-purple-A100  btn-deep-purple-A200  btn-deep-purple-A400  btn-deep-purple-A700   Examples :  !-- Filled background color --  button class= btn btn-deep-purple-500 Deep Purple /button  !-- Stroked, white background, deep purple text and border and filled background on hover --  button class= btn btn-deep-purple-500 btn-stroke Deep Purple /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-deep-purple-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Deep Purple\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Deep Purple color palette    Indigo buttons  Use any of the following CSS classes on any standard Bootstrap button to get an indigo button variation.  Primary colors :   btn-indigo-500  to  btn-indigo-900  in  100  increments.  use  btn-indigo-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-indigo-A100  btn-indigo-A200  btn-indigo-A400  btn-indigo-A700   Examples :  !-- Filled background color --  button class= btn btn-indigo-500 Indigo /button  !-- Stroked, white background, indigo text and border and filled background on hover --  button class= btn btn-indigo-500 btn-stroke Indigo /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-indigo-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Indigo\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Indigo color palette    Blue buttons  Use any of the following CSS classes on any standard Bootstrap button to get a blue button variation.  Primary colors :   btn-blue-500  to  btn-blue-900  in  100  increments.  use  btn-blue-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-blue-A100  btn-blue-A200  btn-blue-A400  btn-blue-A700   Examples :  !-- Filled background color --  button class= btn btn-blue-500 Blue /button  !-- Stroked, white background, blue text and border and filled background on hover --  button class= btn btn-blue-500 btn-stroke Blue /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-blue-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Blue\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Blue color palette    Light Blue buttons  Use any of the following CSS classes on any standard Bootstrap button to get a light blue button variation.  Primary colors :   btn-light-blue-500  to  btn-light-blue-900  in  100  increments.  use  btn-light-blue-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-light-blue-A100  btn-light-blue-A200  btn-light-blue-A400  btn-light-blue-A700   Examples :  !-- Filled background color --  button class= btn btn-light-blue-500 Light Blue /button  !-- Stroked, white background, light blue text and border and filled background on hover --  button class= btn btn-light-blue-500 btn-stroke Light Blue /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-light-blue-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Light Blue\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Light Blue color palette    Cyan buttons  Use any of the following CSS classes on any standard Bootstrap button to get a cyan button variation.  Primary colors :   btn-cyan-500  to  btn-cyan-900  in  100  increments.  use  btn-cyan-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-cyan-A100  btn-cyan-A200  btn-cyan-A400  btn-cyan-A700   Examples :  !-- Filled background color --  button class= btn btn-cyan-500 Cyan /button  !-- Stroked, white background, blue text and border and filled background on hover --  button class= btn btn-cyan-500 btn-stroke Cyan /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-cyan-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Cyan\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Cyan color palette    Teal buttons  Use any of the following CSS classes on any standard Bootstrap button to get a teal button variation.  Primary colors :   btn-teal-500  to  btn-teal-900  in  100  increments.  use  btn-teal-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-teal-A100  btn-teal-A200  btn-teal-A400  btn-teal-A700   Examples :  !-- Filled background color --  button class= btn btn-teal-500 Teal /button  !-- Stroked, white background, blue text and border and filled background on hover --  button class= btn btn-teal-500 btn-stroke Teal /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-teal-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Teal\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Teal color palette    Green buttons  Use any of the following CSS classes on any standard Bootstrap button to get a green button variation.  Primary colors :   btn-green-500  to  btn-green-900  in  100  increments.  use  btn-green-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-green-A100  btn-green-A200  btn-green-A400  btn-green-A700   Examples :  !-- Filled background color --  button class= btn btn-green-500 Green /button  !-- Stroked, white background, blue text and border and filled background on hover --  button class= btn btn-green-500 btn-stroke Green /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-green-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Green\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Green color palette    Light Green buttons  Use any of the following CSS classes on any standard Bootstrap button to get a light green button variation.  Primary colors :   btn-light-green-500  to  btn-light-green-900  in  100  increments.  use  btn-light-green-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-light-green-A100  btn-light-green-A200  btn-light-green-A400  btn-light-green-A700   Examples :  !-- Filled background color --  button class= btn btn-light-green-500 Light Green /button  !-- Stroked, white background, blue text and border and filled background on hover --  button class= btn btn-light-green-500 btn-stroke Light Green /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-light-green-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Light Green\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Light Green color palette    Lime buttons  Use any of the following CSS classes on any standard Bootstrap button to get a lime button variation.  Primary colors :   btn-lime-500  to  btn-lime-900  in  100  increments.  use  btn-lime-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-lime-A100  btn-lime-A200  btn-lime-A400  btn-lime-A700   Examples :  !-- Filled background color --  button class= btn btn-lime-500 Lime /button  !-- Stroked, white background, blue text and border and filled background on hover --  button class= btn btn-lime-500 btn-stroke Lime /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-lime-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Lime\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Lime color palette    Yellow buttons  Use any of the following CSS classes on any standard Bootstrap button to get a yellow button variation.  Primary colors :   btn-yellow-500  to  btn-yellow-900  in  100  increments.  use  btn-yellow-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-yellow-A100  btn-yellow-A200  btn-yellow-A400  btn-yellow-A700   Examples :  !-- Filled background color --  button class= btn btn-yellow-500 Yellow /button  !-- Stroked, white background, blue text and border and filled background on hover --  button class= btn btn-yellow-500 btn-stroke Yellow /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-yellow-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Yellow\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Yellow color palette    Amber buttons  Use any of the following CSS classes on any standard Bootstrap button to get an amber button variation.  Primary colors :   btn-amber-500  to  btn-amber-900  in  100  increments.  use  btn-amber-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-amber-A100  btn-amber-A200  btn-amber-A400  btn-amber-A700   Examples :  !-- Filled background color --  button class= btn btn-amber-500 Amber /button  !-- Stroked, white background, blue text and border and filled background on hover --  button class= btn btn-amber-500 btn-stroke Amber /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-amber-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Amber\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Amber color palette    Orange buttons  Use any of the following CSS classes on any standard Bootstrap button to get an orange button variation.  Primary colors :   btn-orange-500  to  btn-orange-900  in  100  increments.  use  btn-orange-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-orange-A100  btn-orange-A200  btn-orange-A400  btn-orange-A700   Examples :  !-- Filled background color --  button class= btn btn-orange-500 Orange /button  !-- Stroked, white background, blue text and border and filled background on hover --  button class= btn btn-orange-500 btn-stroke Orange /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-orange-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Orange\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Orange color palette    Deep Orange buttons  Use any of the following CSS classes on any standard Bootstrap button to get a deep orange button variation.  Primary colors :   btn-deep-orange-500  to  btn-deep-orange-900  in  100  increments.  use  btn-deep-orange-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   btn-deep-orange-A100  btn-deep-orange-A200  btn-deep-orange-A400  btn-deep-orange-A700   Examples :  !-- Filled background color --  button class= btn btn-deep-orange-500 Deep Orange /button  !-- Stroked, white background, blue text and border and filled background on hover --  button class= btn btn-deep-orange-500 btn-stroke Deep Orange /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-deep-orange-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Deep Orange\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Deep Orange color palette    Brown buttons  Use any of the following CSS classes on any standard Bootstrap button to get a brown button variation.  Primary colors :   btn-brown-500  to  btn-brown-900  in  100  increments.  use  btn-brown-500  as the primary color.  the higher the number, the darker the color.   Examples :  !-- Filled background color --  button class= btn btn-brown-500 Brown /button  !-- Stroked, white background, blue text and border and filled background on hover --  button class= btn btn-brown-500 btn-stroke Brown /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-brown-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Brown\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Brown color palette    Grey buttons  Use any of the following CSS classes on any standard Bootstrap button to get a grey button variation.  Primary colors :   btn-grey-500  to  btn-grey-900  in  100  increments.  use  btn-grey-500  as the primary color.  the higher the number, the darker the color.   Examples :  !-- Filled background color --  button class= btn btn-grey-500 Grey /button  !-- Stroked, white background, blue text and border and filled background on hover --  button class= btn btn-grey-500 btn-stroke Grey /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-grey-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Grey\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Grey color palette    Blue Grey buttons  Use any of the following CSS classes on any standard Bootstrap button to get a blue grey button variation.  Primary colors :   btn-blue-grey-500  to  btn-blue-grey-900  in  100  increments.  use  btn-blue-grey-500  as the primary color.  the higher the number, the darker the color.   Examples :  !-- Filled background color --  button class= btn btn-blue-grey-500 Blue Grey /button  !-- Stroked, white background, blue text and border and filled background on hover --  button class= btn btn-blue-grey-500 btn-stroke Blue Grey /button  !-- Dropdown --  div class= btn-group \n     button type= button  class= btn btn-blue-grey-500 dropdown-toggle  data-toggle= dropdown  aria-expanded= false \n        Dropdown Blue Grey\n         span class= caret /span \n     /button \n     ul class= dropdown-menu \n         li a href= # Action /a /li \n         li a href= # Another action /a /li \n         li a href= # Something else here /a /li \n         li class= divider /li \n         li a href= # Separated link /a /li \n     /ul  /div   Less variables :   Blue Grey color palette", 
            "title": "Buttons"
        }, 
        {
            "location": "/reference/colors/index.html#progress-bars", 
            "text": "Red progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-red-100  to  progress-bar-red-900  in  100  increments.  use  progress-bar-red-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-red-A100  progress-bar-red-A200  progress-bar-red-A400  progress-bar-red-A700   Example :  div class= progress-bar progress-bar-red-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Red color palette    Pink progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-pink-100  to  progress-bar-pink-900  in  100  increments.  use  progress-bar-pink-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-pink-A100  progress-bar-pink-A200  progress-bar-pink-A400  progress-bar-pink-A700   Example :  div class= progress-bar progress-bar-pink-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Pink color palette    Purple progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-purple-100  to  progress-bar-purple-900  in  100  increments.  use  progress-bar-purple-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-purple-A100  progress-bar-purple-A200  progress-bar-purple-A400  progress-bar-purple-A700   Example :  div class= progress-bar progress-bar-purple-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Purple color palette    Deep Purple progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-deep-purple-100  to  progress-bar-deep-purple-900  in  100  increments.  use  progress-bar-deep-purple-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-deep-purple-A100  progress-bar-deep-purple-A200  progress-bar-deep-purple-A400  progress-bar-deep-purple-A700   Example :  div class= progress-bar progress-bar-deep-purple-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Deep Purple color palette    Indigo progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-indigo-100  to  progress-bar-indigo-900  in  100  increments.  use  progress-bar-indigo-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-indigo-A100  progress-bar-indigo-A200  progress-bar-indigo-A400  progress-bar-indigo-A700   Example :  div class= progress-bar progress-bar-indigo-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Indigo color palette    Blue progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-blue-100  to  progress-bar-blue-900  in  100  increments.  use  progress-bar-blue-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-blue-A100  progress-bar-blue-A200  progress-bar-blue-A400  progress-bar-blue-A700   Example :  div class= progress-bar progress-bar-blue-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Blue color palette    Light Blue progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-light-blue-100  to  progress-bar-light-blue-900  in  100  increments.  use  progress-bar-light-blue-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-light-blue-A100  progress-bar-light-blue-A200  progress-bar-light-blue-A400  progress-bar-light-blue-A700   Example :  div class= progress-bar progress-bar-light-blue-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Light Blue color palette    Cyan progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-cyan-100  to  progress-bar-cyan-900  in  100  increments.  use  progress-bar-cyan-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-cyan-A100  progress-bar-cyan-A200  progress-bar-cyan-A400  progress-bar-cyan-A700   Example :  div class= progress-bar progress-bar-cyan-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Cyan color palette    Teal progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-teal-100  to  progress-bar-teal-900  in  100  increments.  use  progress-bar-teal-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-teal-A100  progress-bar-teal-A200  progress-bar-teal-A400  progress-bar-teal-A700   Example :  div class= progress-bar progress-bar-teal-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Teal color palette    Green progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-green-100  to  progress-bar-green-900  in  100  increments.  use  progress-bar-green-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-green-A100  progress-bar-green-A200  progress-bar-green-A400  progress-bar-green-A700   Example :  div class= progress-bar progress-bar-green-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Green color palette    Light Green progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-light-green-100  to  progress-bar-light-green-900  in  100  increments.  use  progress-bar-light-green-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-light-green-A100  progress-bar-light-green-A200  progress-bar-light-green-A400  progress-bar-light-green-A700   Example :  div class= progress-bar progress-bar-light-green-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Light Green color palette    Lime progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-lime-100  to  progress-bar-lime-900  in  100  increments.  use  progress-bar-lime-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-lime-A100  progress-bar-lime-A200  progress-bar-lime-A400  progress-bar-lime-A700   Example :  div class= progress-bar progress-bar-lime-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Lime color palette    Yellow progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-yellow-100  to  progress-bar-yellow-900  in  100  increments.  use  progress-bar-yellow-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-yellow-A100  progress-bar-yellow-A200  progress-bar-yellow-A400  progress-bar-yellow-A700   Example :  div class= progress-bar progress-bar-yellow-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Yellow color palette    Amber progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-amber-100  to  progress-bar-amber-900  in  100  increments.  use  progress-bar-amber-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-amber-A100  progress-bar-amber-A200  progress-bar-amber-A400  progress-bar-amber-A700   Example :  div class= progress-bar progress-bar-amber-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Amber color palette    Orange progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-orange-100  to  progress-bar-orange-900  in  100  increments.  use  progress-bar-orange-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-orange-A100  progress-bar-orange-A200  progress-bar-orange-A400  progress-bar-orange-A700   Example :  div class= progress-bar progress-bar-orange-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Orange color palette    Deep Orange progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-deep-orange-100  to  progress-bar-deep-orange-900  in  100  increments.  use  progress-bar-deep-orange-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   progress-bar-deep-orange-A100  progress-bar-deep-orange-A200  progress-bar-deep-orange-A400  progress-bar-deep-orange-A700   Example :  div class= progress-bar progress-bar-deep-orange-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Deep Orange color palette    Brown progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-brown-100  to  progress-bar-brown-900  in  100  increments.  use  progress-bar-brown-500  as the primary color.  the higher the number, the darker the color.   Example :  div class= progress-bar progress-bar-brown-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Brown color palette    Grey progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-grey-100  to  progress-bar-grey-900  in  100  increments.  use  progress-bar-grey-500  as the primary color.  the higher the number, the darker the color.   Example :  div class= progress-bar progress-bar-grey-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Grey color palette    Blue Grey progress bars  Use any of the following CSS classes on a standard Bootstrap progress bar.  Primary colors :   progress-bar-blue-grey-100  to  progress-bar-blue-grey-900  in  100  increments.  use  progress-bar-blue-grey-500  as the primary color.  the higher the number, the darker the color.   Example :  div class= progress-bar progress-bar-blue-grey-500  role= progressbar  aria-valuenow= 60  aria-valuemin= 0  aria-valuemax= 100  style= width: 60%; \n     span class= sr-only 60% Complete /span  /div   Less variables :   Blue Grey color palette", 
            "title": "Progress bars"
        }, 
        {
            "location": "/reference/colors/index.html#alerts", 
            "text": "Red alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a red alert variation.  Primary colors :   alert-red-500  to  alert-red-900  in  100  increments.  use  alert-red-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-red-A100  alert-red-A200  alert-red-A400  alert-red-A700   Examples :  !-- Filled --  div class= alert alert-red-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-red-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Red color palette    Pink alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a pink alert variation.  Primary colors :   alert-pink-500  to  alert-pink-900  in  100  increments.  use  alert-pink-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-pink-A100  alert-pink-A200  alert-pink-A400  alert-pink-A700   Examples :  !-- Filled --  div class= alert alert-pink-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-pink-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Pink color palette    Purple alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a purple alert variation.  Primary colors :   alert-purple-500  to  alert-purple-900  in  100  increments.  use  alert-purple-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-purple-A100  alert-purple-A200  alert-purple-A400  alert-purple-A700   Examples :  !-- Filled --  div class= alert alert-purple-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-purple-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Purple color palette    Deep Purple alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a deep purple alert variation.  Primary colors :   alert-deep-purple-500  to  alert-deep-purple-900  in  100  increments.  use  alert-deep-purple-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-deep-purple-A100  alert-deep-purple-A200  alert-deep-purple-A400  alert-deep-purple-A700   Examples :  !-- Filled --  div class= alert alert-deep-purple-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-deep-purple-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Deep Purple color palette    Indigo alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a indigo alert variation.  Primary colors :   alert-indigo-500  to  alert-indigo-900  in  100  increments.  use  alert-indigo-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-indigo-A100  alert-indigo-A200  alert-indigo-A400  alert-indigo-A700   Examples :  !-- Filled --  div class= alert alert-indigo-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-indigo-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Indigo color palette    Blue alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a blue alert variation.  Primary colors :   alert-blue-500  to  alert-blue-900  in  100  increments.  use  alert-blue-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-blue-A100  alert-blue-A200  alert-blue-A400  alert-blue-A700   Examples :  !-- Filled --  div class= alert alert-blue-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-blue-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Blue color palette    Light Blue alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a light blue alert variation.  Primary colors :   alert-light-blue-500  to  alert-light-blue-900  in  100  increments.  use  alert-light-blue-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-light-blue-A100  alert-light-blue-A200  alert-light-blue-A400  alert-light-blue-A700   Examples :  !-- Filled --  div class= alert alert-light-blue-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-light-blue-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Light Blue color palette    Cyan alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a cyan alert variation.  Primary colors :   alert-cyan-500  to  alert-cyan-900  in  100  increments.  use  alert-cyan-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-cyan-A100  alert-cyan-A200  alert-cyan-A400  alert-cyan-A700   Examples :  !-- Filled --  div class= alert alert-cyan-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-cyan-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Cyan color palette    Teal alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a teal alert variation.  Primary colors :   alert-teal-500  to  alert-teal-900  in  100  increments.  use  alert-teal-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-teal-A100  alert-teal-A200  alert-teal-A400  alert-teal-A700   Examples :  !-- Filled --  div class= alert alert-teal-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-teal-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Teal color palette    Green alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a green alert variation.  Primary colors :   alert-green-500  to  alert-green-900  in  100  increments.  use  alert-green-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-green-A100  alert-green-A200  alert-green-A400  alert-green-A700   Examples :  !-- Filled --  div class= alert alert-green-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-green-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Green color palette    Light Green alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a light green alert variation.  Primary colors :   alert-light-green-500  to  alert-light-green-900  in  100  increments.  use  alert-light-green-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-light-green-A100  alert-light-green-A200  alert-light-green-A400  alert-light-green-A700   Examples :  !-- Filled --  div class= alert alert-light-green-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-light-green-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Light Green color palette    Lime alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a lime alert variation.  Primary colors :   alert-lime-500  to  alert-lime-900  in  100  increments.  use  alert-lime-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-lime-A100  alert-lime-A200  alert-lime-A400  alert-lime-A700   Examples :  !-- Filled --  div class= alert alert-lime-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-lime-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Lime color palette    Yellow alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a yellow alert variation.  Primary colors :   alert-yellow-500  to  alert-yellow-900  in  100  increments.  use  alert-yellow-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-yellow-A100  alert-yellow-A200  alert-yellow-A400  alert-yellow-A700   Examples :  !-- Filled --  div class= alert alert-yellow-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-yellow-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Yellow color palette    Amber alerts  Use any of the following CSS classes on any standard Bootstrap alert to get an amber alert variation.  Primary colors :   alert-amber-500  to  alert-amber-900  in  100  increments.  use  alert-amber-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-amber-A100  alert-amber-A200  alert-amber-A400  alert-amber-A700   Examples :  !-- Filled --  div class= alert alert-amber-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-amber-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Amber color palette    Orange alerts  Use any of the following CSS classes on any standard Bootstrap alert to get an orange alert variation.  Primary colors :   alert-orange-500  to  alert-orange-900  in  100  increments.  use  alert-orange-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-orange-A100  alert-orange-A200  alert-orange-A400  alert-orange-A700   Examples :  !-- Filled --  div class= alert alert-orange-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-orange-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Orange color palette    Deep Orange alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a deep orange alert variation.  Primary colors :   alert-deep-orange-500  to  alert-deep-orange-900  in  100  increments.  use  alert-deep-orange-500  as the primary color.  the higher the number, the darker the color.   Accent colors :   alert-deep-orange-A100  alert-deep-orange-A200  alert-deep-orange-A400  alert-deep-orange-A700   Examples :  !-- Filled --  div class= alert alert-deep-orange-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-deep-orange-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Deep Orange color palette    Brown alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a brown alert variation.  Primary colors :   alert-brown-500  to  alert-brown-900  in  100  increments.  use  alert-brown-500  as the primary color.  the higher the number, the darker the color.   Examples :  !-- Filled --  div class= alert alert-brown-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-brown-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Brown color palette    Grey alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a grey alert variation.  Primary colors :   alert-grey-500  to  alert-grey-900  in  100  increments.  use  alert-grey-500  as the primary color.  the higher the number, the darker the color.   Examples :  !-- Filled --  div class= alert alert-grey-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-grey-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Grey color palette    Blue Grey alerts  Use any of the following CSS classes on any standard Bootstrap alert to get a blue grey alert variation.  Primary colors :   alert-blue-grey-500  to  alert-grey-900  in  100  increments.  use  alert-blue-grey-500  as the primary color.  the higher the number, the darker the color.   Examples :  !-- Filled --  div class= alert alert-blue-grey-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div  !-- Stroked with colored text and lighter background color --  div class= alert alert-stroke alert-blue-grey-500  role= alert \n     strong Well done! /strong  You successfully read this important alert message. /div   Less variables :   Blue Grey color palette", 
            "title": "Alerts"
        }, 
        {
            "location": "/reference/maps/index.html", 
            "text": "Maps\n\n\n\n\nRequirements\n\n\nDependencies\n\n\nBefore we can use the Maps component, we must have the \njquery-ui-map\n library installed.\n\n\nYou can check if it's already installed by looking for the \nbower_components/jquery-ui-map\n directory.\n\n\nInstall with \nBower\n:\n\n\nbower install jquery-ui-map --save\n\n\n\n\nCopy the library\n:\n\n\nCreate a file \n.build/copy-vendor/copy.maps.google.json\n with the following content:\n\n\n[\n    {\n        \ntask\n: \njquery-ui-map\n,\n        \ncwd\n: \nbower_components/jquery-ui-map/ui\n,\n        \nsrc\n: \n*\n,\n        \ndest\n: \njs/vendor/maps/google/jquery-ui-map/ui\n\n    }\n]\n\n\n\n\nWhen running \nthe build process\n, the \njson\n file will be picked up and executed automatically and it will copy all files and directories from the \nbower_components/jquery-ui-map/ui\n directory to the \ntheme's build path\n in \n$BUILD_PATH/$THEME_NAME/js/vendor/maps/google/jquery-ui-map/ui\n.\n\n\nNote that you don't have to load the \njquery-ui-map\n library from HTML, as the Maps component will load it automatically.\n\n\nJavaScript\n\n\nTo load the Google maps component, from \nsrc/js/themes/$THEME_NAME/app.js\n:\n\n\n// Maps\nwindow.initGoogleMaps = require('maps/js/google/main');\n\n\n\n\nThis will load \nlib/maps/js/google/main.js\n into our main application script bundle.\n\n\nNote that we have to expose the global \ninitGoogleMaps\n callback function which will be executed automatically by the Google Maps API when the maps libraries are loaded, which is why we attached it to \nwindow\n.\n\n\nLess\n\n\nFrom \nsrc/less/themes/$THEME_NAME/app.less\n:\n\n\n// Maps\n@import \nmaps/less/maps\n;\n\n\n\n\nWhich will load \nlib/maps/less/maps.less\n into our main application style bundle.\n\n\n\n\nAlternative\n\n\nIf working with Less and Browserify bundles is not your favorite thing, you can alternatively load the pre-built static assets we have included:\n\n\n!-- In the head of the HTML document --\n\n\nlink rel=\nstylesheet\n href=\ncss/app/maps.css\n /\n\n\n\n!-- At the bottom of the HTML document --\n\n\nscript src=\njs/app/maps.js\n/script\n\n\n\n\n\n\n\nInitialization\n\n\nWe can initialize a new Google Map in HTML purely through the markup API without writing a single line of JavaScript:\n\n\ndiv data-toggle=\ngoogle-maps\n/div\n\n\n\n\n\n\n\nOptions\n\n\nWe can pass various options to interact with the Google Maps component, also through the markup API (data attributes).\n\n\nZoom controls position\n\n\nDefault: \nTOP_LEFT\n\n\ndiv data-toggle=\ngoogle-maps\n data-zoom-position=\nTOP_LEFT\n/div\n\n\n\n\n\nZoom level\n\n\nDefault: \n16\n\n\ndiv data-toggle=\ngoogle-maps\n data-zoom=\n16\n/div\n\n\n\n\n\nStyle\n\n\nDefault: \nlight-grey\n\n\ndiv data-toggle=\ngoogle-maps\n data-style=\nlight-grey\n/div\n\n\n\n\n\nThis actually loads and applies a custom map style from \nlib/maps/js/google/styles/_light-grey.js\n. To see all the available styles, have a look at the available files in the \nlib/maps/js/google/styles/\n directory.\n\n\nMap type\n\n\nDefault: \nROADMAP\n\n\ndiv data-toggle=\ngoogle-maps\n data-type=\nROADMAP\n/div\n\n\n\n\n\nDraggable\n\n\nDefault: \ntrue\n\n\ndiv data-toggle=\ngoogle-maps\n data-draggable=\ntrue\n/div\n\n\n\n\n\nPagination\n\n\nAdds pagination between markers.\n\n\nDefault: \nfalse\n\n\ndiv data-toggle=\ngoogle-maps\n data-pagination=\ntrue\n/div\n\n\n\n\n\nLoading markers from a JSON file via AJAX\n\n\ndiv data-toggle=\ngoogle-maps\n data-file=\nmarkers.json\n/div\n\n\n\n\n\nCenter map to coordinates\n\n\ndiv data-toggle=\ngoogle-maps\n data-center=\nlatitude,longitude\n/div\n\n\n\n\n\n\n\nEvents\n\n\nmap.init\n\n\nTriggered when the maps are initialized and available. We can hook into this event to add functionality to our maps and further interact with Google Maps API.\n\n\nFor example, consider \nsrc/js/themes/$THEME_NAME/_maps.js\n:\n\n\n(function($){\n    'use strict';\n\n    $(document).on('map.init', function(event, data){\n\n        // We now have access to the initialized map(s)\n\n        // To isolate custom functionality to a specific map, \n        // give the HTML element a unique ID, e.g:\n        // \ndiv data-toggle=\ngoogle-maps\n id=\nmy_map\n/div\n\n        // and to execute code only when #my_map is initialized:\n\n        if (data.container.attr('id') == 'my_map') {\n            // do something with #my_map\n        }\n\n        // Otherwise, do something when ANY map is initialized:\n\n        // The container element\n        console.log(data.container);\n\n        // The google map object\n        console.log(data.map);\n\n        // The options\n        console.log(data.options);\n\n        // The google maps info window\n        console.log(data.iw.window);\n\n        // We can get the markers\n        var markers = data.container.gmap('get', 'markers');\n        console.log(markers);\n\n        // We can add new Google Maps API event listeners\n        google.maps.event.addListener(data.map, 'click', function (event) {\n            // do something when a user clicks on the map\n        });\n\n        // Attach to the info window\n        google.maps.event.addListener(data.iw.window, 'domready', function () {\n            // do something with the info window, you have access to it's DOM\n        });\n\n    });\n\n})(jQuery);\n\n\n\n\nAnd we can load our custom functionality from \nsrc/js/themes/$THEME_NAME/app.js\n:\n\n\n// Maps\nwindow.initGoogleMaps = require('maps/js/google/main');\n\n// Custom functionality\nrequire('./_maps');\n\n\n\n\n\n\nMarker images\n\n\nWe provide 8 custom marker sets of 10 markers each.\n\n\nThe marker images are located in \nlib/maps/images/markers\n.\n\n\nRequirements\n\n\nTo use the marker images in your theme, you must copy the \nlib/maps/images/markers\n directory into your \ntheme's build path\n in \n$BUILD/$THEME_NAME/images/markers\n.\n\n\nWe can automate this when running the \nbuild process\n.\n\n\nUpdate \n.build/copy-vendor/copy.maps.google.json\n to include the following:\n\n\n[\n    {\n        \ntask\n: \nlib-maps-images\n,\n        \ncwd\n: \nlib/maps/images\n,\n        \nsrc\n: [\n**/*\n],\n        \ndest\n: \nimages\n\n    }\n]\n\n\n\n\nThe \njson\n file will be picked up and executed automatically when running the build process.\n\n\nUsage\n\n\nNow that we have the marker images available in our \ntheme's build path\n in the \n$BUILD_PATH/$THEME_NAME/images/markers\n directory, we can use them to display markers directly from the JSON data with the \nicon\n key on each marker object set to the image file name without the extension:\n\n\n{\n    \nmarkers\n: [\n        {\n            ...\n            \nicon\n: \nbuilding-02\n\n        },\n        {\n            ...\n            \nicon\n: \nhouse-01\n\n        }\n    ]\n}\n\n\n\n\n\n\nPopups\n\n\nInfoBox\n\n\nOur Google Maps component is using \nInfoBox\n, as an enhanced version of an \nInfoWindow\n. An \nInfoWindow\n displays content, usually text or images, in a popup window above the map, at a given location, typically attached to a marker. The \nInfoBox\n behaves like an \nInfoWindow\n, but it supports several additional properties for advanced styling. You can see more details on \nthe official API reference\n.\n\n\nRequirements\n\n\nDependencies\n\n\nWe must have the InfoBox library included with \nGoogle Maps utility library\n installed. You can check if it's already installed by looking for the \nbower_components/gmaps-infobox\n directory.\n\n\nInstall with \nBower\n:\n\n\nFirst, update the \nbower.json\n file to include \ngmaps-infobox\n in it's \ndependencies\n:\n\n\ndependencies\n: {\n    \ngmaps-infobox\n: \nsvn+http://google-maps-utility-library-v3.googlecode.com/svn#infobox\n\n}\n\n\n\n\nThen install:\n\n\nbower install\n\n\n\n\nCopy the library\n:\n\n\nUpdate \n.build/copy-vendor/copy.maps.google.json\n to include the following:\n\n\n[\n    {\n        \ntask\n: \ngmaps-infobox\n,\n        \ncwd\n: \nbower_components/gmaps-infobox/1.1.13/src\n,\n        \nsrc\n: [\n*.js\n],\n        \ndest\n: \njs/vendor/maps/google/jquery-ui-map/addons\n\n    }\n]\n\n\n\n\nThe \njson\n file will be picked up and executed automatically when running the build process. It will copy all \n*.js\n files from the \nbower_components/gmaps-infobox/1.1.13/src\n directory into the \ntheme's build path\n in \n$BUILD_PATH/$THEME_NAME/js/vendor/maps/google/jquery-ui-map/addons\n.\n\n\nNote that you don't have to load the library from HTML, as the Maps component will load it automatically.\n\n\nTemplates\n\n\nTo customize the view of the \nInfoBox\n, we are using Handlebars templates. The Maps package provides several templates in \nlib/maps/html/_map_templates.html\n.\n\n\nBefore we can use the provided sample templates with the Maps component, we must include the templates from \nlib/maps/html/_map_templates.html\n in our HTML document. We can easily do that using \nSwig\n.\n\n\nConsider a simple page in \nsrc/html/themes/$THEME_NAME/maps.html\n:\n\n\n{% extends \nsrc/html/themes/$THEME_NAME/_layout.html\n %}\n\n{% block content %}\n\n    \n!-- The Maps --\n\n    \ndiv data-toggle=\ngoogle-maps\n data-file=\njs/google_maps/data/markers.json\n/div\n\n\n    \n!-- Templates --\n\n    {% include \nlib/maps/html/_map_templates.html\n %}\n\n{% endblock %}\n\n\n\n\nAfter running the \nbuild process\n, the templates will be included in your \ntheme's build path\n, in \n$BUILD_PATH/$THEME_NAME/maps.html\n:\n\n\nscript id=\nmap-infobox-icon\n type=\ntext/x-handlebars-template\n\n    \ndiv\n\n        \ndiv class=\ntext-center\n\n            \ndiv class=\nh1 text-grey-300\n\n                \ni class=\n{{ inner_icon }}\n/i\n\n            \n/div\n\n            \np\na href=\n#\n class=\nh4 text-primary\n{{ name }}\n/a\n/p\n\n            \np\n{{ description }}\n/p\n\n        \n/div\n\n    \n/div\n\n\n/script\n\n\n\nscript id=\nmap-infobox-simple\n type=\ntext/x-handlebars-template\n\n    \ndiv\n\n        \ndiv class=\ntext-center\n\n            \nh1\n{{ title }}\n/h1\n\n            \np\n{{ description }}\n/p\n\n        \n/div\n\n    \n/div\n\n\n/script\n\n\n\n\n\nUsage\n\n\nNote that each template has a unique \nid\n attribute. We'll use the \nid\n within the JSON data to instruct the Maps component to use a specific template when displaying the popup window attached to each marker, using the \ntemplate\n key from the marker object.\n\n\nConsider the following JSON data file in \njs/google_maps/data/markers.json\n:\n\n\n{\n    \nmarkers\n: [\n        {\n            \nlatitude\n: 57.698920689483,\n            \nlongitude\n: 11.983367179871,\n            \ntitle\n: \nA Building\n,\n            \ndescription\n: \nLorem ipsum dolor sit amet, consectetur adipisicing elit.\n,\n            \ntemplate\n: \nmap-infobox-simple\n,\n            \nicon\n: \nbuilding-02\n,\n            \nopen\n: true\n        },\n        {\n            \nlatitude\n: 57.698656963659,\n            \nlongitude\n: 11.977981304198,\n            \nname\n: \nA House\n,\n            \ninner_icon\n: \nfa fa-home\n,\n            \ndescription\n: \nLorem ipsum dolor sit amet, consectetur adipisicing elit.\n,\n            \ntemplate\n: \nmap-infobox-icon\n,\n            \nicon\n: \nhouse-01\n\n        }\n    ]\n}\n\n\n\n\nThis will add 2 markers on the map, using different templates for displaying popup windows attached to the markers.\n\n\n\n\nDemo data\n\n\nAdditionally, you can also copy the demo JSON data into your \ntheme's build path\n.\n\n\nUpdate \n.build/copy-vendor/copy.maps.google.json\n to include the following:\n\n\n[\n    {\n        \ntask\n: \nlib-maps-data\n,\n        \ncwd\n: \nlib/maps/js/data\n,\n        \nsrc\n: \n*.json\n,\n        \ndest\n: \njs/data/google_maps\n\n    }\n]\n\n\n\n\nThis will copy all \n*.json\n files from the \nlib/maps/js/data\n directory into your \ntheme's build path\n in the \n$BUILD_PATH/$THEME_NAME/js/data/google_maps\n directory, when running the build process.\n\n\nNow you can load the demo JSON data:\n\n\ndiv data-toggle=\ngoogle-maps\n data-file=\njs/data/google_maps/markers.json\n/div", 
            "title": "Maps"
        }, 
        {
            "location": "/reference/maps/index.html#maps", 
            "text": "", 
            "title": "Maps"
        }, 
        {
            "location": "/reference/maps/index.html#requirements", 
            "text": "Dependencies  Before we can use the Maps component, we must have the  jquery-ui-map  library installed.  You can check if it's already installed by looking for the  bower_components/jquery-ui-map  directory.  Install with  Bower :  bower install jquery-ui-map --save  Copy the library :  Create a file  .build/copy-vendor/copy.maps.google.json  with the following content:  [\n    {\n         task :  jquery-ui-map ,\n         cwd :  bower_components/jquery-ui-map/ui ,\n         src :  * ,\n         dest :  js/vendor/maps/google/jquery-ui-map/ui \n    }\n]  When running  the build process , the  json  file will be picked up and executed automatically and it will copy all files and directories from the  bower_components/jquery-ui-map/ui  directory to the  theme's build path  in  $BUILD_PATH/$THEME_NAME/js/vendor/maps/google/jquery-ui-map/ui .  Note that you don't have to load the  jquery-ui-map  library from HTML, as the Maps component will load it automatically.  JavaScript  To load the Google maps component, from  src/js/themes/$THEME_NAME/app.js :  // Maps\nwindow.initGoogleMaps = require('maps/js/google/main');  This will load  lib/maps/js/google/main.js  into our main application script bundle.  Note that we have to expose the global  initGoogleMaps  callback function which will be executed automatically by the Google Maps API when the maps libraries are loaded, which is why we attached it to  window .  Less  From  src/less/themes/$THEME_NAME/app.less :  // Maps\n@import  maps/less/maps ;  Which will load  lib/maps/less/maps.less  into our main application style bundle.   Alternative  If working with Less and Browserify bundles is not your favorite thing, you can alternatively load the pre-built static assets we have included:  !-- In the head of the HTML document --  link rel= stylesheet  href= css/app/maps.css  /  !-- At the bottom of the HTML document --  script src= js/app/maps.js /script", 
            "title": "Requirements"
        }, 
        {
            "location": "/reference/maps/index.html#initialization", 
            "text": "We can initialize a new Google Map in HTML purely through the markup API without writing a single line of JavaScript:  div data-toggle= google-maps /div", 
            "title": "Initialization"
        }, 
        {
            "location": "/reference/maps/index.html#options", 
            "text": "We can pass various options to interact with the Google Maps component, also through the markup API (data attributes).  Zoom controls position  Default:  TOP_LEFT  div data-toggle= google-maps  data-zoom-position= TOP_LEFT /div   Zoom level  Default:  16  div data-toggle= google-maps  data-zoom= 16 /div   Style  Default:  light-grey  div data-toggle= google-maps  data-style= light-grey /div   This actually loads and applies a custom map style from  lib/maps/js/google/styles/_light-grey.js . To see all the available styles, have a look at the available files in the  lib/maps/js/google/styles/  directory.  Map type  Default:  ROADMAP  div data-toggle= google-maps  data-type= ROADMAP /div   Draggable  Default:  true  div data-toggle= google-maps  data-draggable= true /div   Pagination  Adds pagination between markers.  Default:  false  div data-toggle= google-maps  data-pagination= true /div   Loading markers from a JSON file via AJAX  div data-toggle= google-maps  data-file= markers.json /div   Center map to coordinates  div data-toggle= google-maps  data-center= latitude,longitude /div", 
            "title": "Options"
        }, 
        {
            "location": "/reference/maps/index.html#events", 
            "text": "map.init  Triggered when the maps are initialized and available. We can hook into this event to add functionality to our maps and further interact with Google Maps API.  For example, consider  src/js/themes/$THEME_NAME/_maps.js :  (function($){\n    'use strict';\n\n    $(document).on('map.init', function(event, data){\n\n        // We now have access to the initialized map(s)\n\n        // To isolate custom functionality to a specific map, \n        // give the HTML element a unique ID, e.g:\n        //  div data-toggle= google-maps  id= my_map /div \n        // and to execute code only when #my_map is initialized:\n\n        if (data.container.attr('id') == 'my_map') {\n            // do something with #my_map\n        }\n\n        // Otherwise, do something when ANY map is initialized:\n\n        // The container element\n        console.log(data.container);\n\n        // The google map object\n        console.log(data.map);\n\n        // The options\n        console.log(data.options);\n\n        // The google maps info window\n        console.log(data.iw.window);\n\n        // We can get the markers\n        var markers = data.container.gmap('get', 'markers');\n        console.log(markers);\n\n        // We can add new Google Maps API event listeners\n        google.maps.event.addListener(data.map, 'click', function (event) {\n            // do something when a user clicks on the map\n        });\n\n        // Attach to the info window\n        google.maps.event.addListener(data.iw.window, 'domready', function () {\n            // do something with the info window, you have access to it's DOM\n        });\n\n    });\n\n})(jQuery);  And we can load our custom functionality from  src/js/themes/$THEME_NAME/app.js :  // Maps\nwindow.initGoogleMaps = require('maps/js/google/main');\n\n// Custom functionality\nrequire('./_maps');", 
            "title": "Events"
        }, 
        {
            "location": "/reference/maps/index.html#marker-images", 
            "text": "We provide 8 custom marker sets of 10 markers each.  The marker images are located in  lib/maps/images/markers .  Requirements  To use the marker images in your theme, you must copy the  lib/maps/images/markers  directory into your  theme's build path  in  $BUILD/$THEME_NAME/images/markers .  We can automate this when running the  build process .  Update  .build/copy-vendor/copy.maps.google.json  to include the following:  [\n    {\n         task :  lib-maps-images ,\n         cwd :  lib/maps/images ,\n         src : [ **/* ],\n         dest :  images \n    }\n]  The  json  file will be picked up and executed automatically when running the build process.  Usage  Now that we have the marker images available in our  theme's build path  in the  $BUILD_PATH/$THEME_NAME/images/markers  directory, we can use them to display markers directly from the JSON data with the  icon  key on each marker object set to the image file name without the extension:  {\n     markers : [\n        {\n            ...\n             icon :  building-02 \n        },\n        {\n            ...\n             icon :  house-01 \n        }\n    ]\n}", 
            "title": "Marker images"
        }, 
        {
            "location": "/reference/maps/index.html#popups", 
            "text": "InfoBox  Our Google Maps component is using  InfoBox , as an enhanced version of an  InfoWindow . An  InfoWindow  displays content, usually text or images, in a popup window above the map, at a given location, typically attached to a marker. The  InfoBox  behaves like an  InfoWindow , but it supports several additional properties for advanced styling. You can see more details on  the official API reference .  Requirements  Dependencies  We must have the InfoBox library included with  Google Maps utility library  installed. You can check if it's already installed by looking for the  bower_components/gmaps-infobox  directory.  Install with  Bower :  First, update the  bower.json  file to include  gmaps-infobox  in it's  dependencies :  dependencies : {\n     gmaps-infobox :  svn+http://google-maps-utility-library-v3.googlecode.com/svn#infobox \n}  Then install:  bower install  Copy the library :  Update  .build/copy-vendor/copy.maps.google.json  to include the following:  [\n    {\n         task :  gmaps-infobox ,\n         cwd :  bower_components/gmaps-infobox/1.1.13/src ,\n         src : [ *.js ],\n         dest :  js/vendor/maps/google/jquery-ui-map/addons \n    }\n]  The  json  file will be picked up and executed automatically when running the build process. It will copy all  *.js  files from the  bower_components/gmaps-infobox/1.1.13/src  directory into the  theme's build path  in  $BUILD_PATH/$THEME_NAME/js/vendor/maps/google/jquery-ui-map/addons .  Note that you don't have to load the library from HTML, as the Maps component will load it automatically.  Templates  To customize the view of the  InfoBox , we are using Handlebars templates. The Maps package provides several templates in  lib/maps/html/_map_templates.html .  Before we can use the provided sample templates with the Maps component, we must include the templates from  lib/maps/html/_map_templates.html  in our HTML document. We can easily do that using  Swig .  Consider a simple page in  src/html/themes/$THEME_NAME/maps.html :  {% extends  src/html/themes/$THEME_NAME/_layout.html  %}\n\n{% block content %}\n\n     !-- The Maps -- \n     div data-toggle= google-maps  data-file= js/google_maps/data/markers.json /div \n\n     !-- Templates -- \n    {% include  lib/maps/html/_map_templates.html  %}\n\n{% endblock %}  After running the  build process , the templates will be included in your  theme's build path , in  $BUILD_PATH/$THEME_NAME/maps.html :  script id= map-infobox-icon  type= text/x-handlebars-template \n     div \n         div class= text-center \n             div class= h1 text-grey-300 \n                 i class= {{ inner_icon }} /i \n             /div \n             p a href= #  class= h4 text-primary {{ name }} /a /p \n             p {{ description }} /p \n         /div \n     /div  /script  script id= map-infobox-simple  type= text/x-handlebars-template \n     div \n         div class= text-center \n             h1 {{ title }} /h1 \n             p {{ description }} /p \n         /div \n     /div  /script   Usage  Note that each template has a unique  id  attribute. We'll use the  id  within the JSON data to instruct the Maps component to use a specific template when displaying the popup window attached to each marker, using the  template  key from the marker object.  Consider the following JSON data file in  js/google_maps/data/markers.json :  {\n     markers : [\n        {\n             latitude : 57.698920689483,\n             longitude : 11.983367179871,\n             title :  A Building ,\n             description :  Lorem ipsum dolor sit amet, consectetur adipisicing elit. ,\n             template :  map-infobox-simple ,\n             icon :  building-02 ,\n             open : true\n        },\n        {\n             latitude : 57.698656963659,\n             longitude : 11.977981304198,\n             name :  A House ,\n             inner_icon :  fa fa-home ,\n             description :  Lorem ipsum dolor sit amet, consectetur adipisicing elit. ,\n             template :  map-infobox-icon ,\n             icon :  house-01 \n        }\n    ]\n}  This will add 2 markers on the map, using different templates for displaying popup windows attached to the markers.", 
            "title": "Popups"
        }, 
        {
            "location": "/reference/maps/index.html#demo-data", 
            "text": "Additionally, you can also copy the demo JSON data into your  theme's build path .  Update  .build/copy-vendor/copy.maps.google.json  to include the following:  [\n    {\n         task :  lib-maps-data ,\n         cwd :  lib/maps/js/data ,\n         src :  *.json ,\n         dest :  js/data/google_maps \n    }\n]  This will copy all  *.json  files from the  lib/maps/js/data  directory into your  theme's build path  in the  $BUILD_PATH/$THEME_NAME/js/data/google_maps  directory, when running the build process.  Now you can load the demo JSON data:  div data-toggle= google-maps  data-file= js/data/google_maps/markers.json /div", 
            "title": "Demo data"
        }
    ]
}